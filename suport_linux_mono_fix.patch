# HG changeset patch
# User azraelrabbit
# Date 1501654244 -28800
#      Wed Aug 02 14:10:44 2017 +0800
# Branch 3.3071.1644-stable
# Node ID f4ebc01d1aa97d493e234e12474dde417dfe6b11
# Parent  2f7a09cb4d98ca4e2024e9674091b50f6e375e0b
add mono supporting changes. but can not run on linux for now, working hard on it.

diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 .hg_archival.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/.hg_archival.txt	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,4 @@
+repo: 3e1b6203df1c421a8843b22b6e177bdb7bf7420c
+node: 971831fead368ba6fd11f2ba35fbdbd54387a547
+branch: default
+tag: 3.3071.2
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 CfxTestApp/BrowserForm.resx
--- a/CfxTestApp/BrowserForm.resx	Wed Aug 02 13:11:56 2017 +0800
+++ b/CfxTestApp/BrowserForm.resx	Wed Aug 02 14:10:44 2017 +0800
@@ -117,188 +117,8 @@
   <resheader name="writer">
     <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
-  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
+  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <data name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing">
     <value>17, 17</value>
-  </metadata>
-  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
-  <data name="BackButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="FwdButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="LoadUrlButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="LoadGoogleButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="JSHelloWorldButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="JSTestPageButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="VisitDomButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="CountFramesButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="ShowDevToolsButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="CreditsButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="miscDropDownButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
-  </data>
-  <data name="printButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
-    <value>
-        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
-        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
-        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
-        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
-        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
-        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
-        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
-        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
-        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
-        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
-        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
-</value>
   </data>
 </root>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 CfxTestApp/CfxTestApplication.csproj
--- a/CfxTestApp/CfxTestApplication.csproj	Wed Aug 02 13:11:56 2017 +0800
+++ b/CfxTestApp/CfxTestApplication.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -11,7 +11,8 @@
     <RootNamespace>CfxTestApplication</RootNamespace>
     <AssemblyName>CfxTestBrowser</AssemblyName>
     <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
-    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
+    <TargetFrameworkProfile>
+    </TargetFrameworkProfile>
     <FileAlignment>512</FileAlignment>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
@@ -89,6 +90,7 @@
       <DependentUpon>Resources.resx</DependentUpon>
       <DesignTime>True</DesignTime>
     </Compile>
+    <None Include="app.config" />
     <None Include="Properties\Settings.settings">
       <Generator>SettingsSingleFileGenerator</Generator>
       <LastGenOutput>Settings.Designer.cs</LastGenOutput>
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 CfxTestApp/Properties/Resources.Designer.cs
--- a/CfxTestApp/Properties/Resources.Designer.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/CfxTestApp/Properties/Resources.Designer.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -1,16 +1,10 @@
-// Copyright (c) 2014-2017 Wolfgang Borgsmüller
-// All rights reserved.
-// 
-// This software may be modified and distributed under the terms
-// of the BSD license. See the License.txt file for details.
-
-//------------------------------------------------------------------------------
+﻿//------------------------------------------------------------------------------
 // <auto-generated>
-//     This code was generated by a tool.
-//     Runtime Version:4.0.30319.1022
+//     此代码由工具生成。
+//     运行时版本:4.0.30319.42000
 //
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
+//     对此文件的更改可能会导致不正确的行为，并且如果
+//     重新生成代码，这些更改将会丢失。
 // </auto-generated>
 //------------------------------------------------------------------------------
 
@@ -19,12 +13,12 @@
     
     
     /// <summary>
-    ///   A strongly-typed resource class, for looking up localized strings, etc.
+    ///   一个强类型的资源类，用于查找本地化的字符串等。
     /// </summary>
-    // This class was auto-generated by the StronglyTypedResourceBuilder
-    // class via a tool like ResGen or Visual Studio.
-    // To add or remove a member, edit your .ResX file then rerun ResGen
-    // with the /str option, or rebuild your VS project.
+    // 此类是由 StronglyTypedResourceBuilder
+    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
+    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
+    // (以 /str 作为命令选项)，或重新生成 VS 项目。
     [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
     [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
     [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
@@ -39,7 +33,7 @@
         }
         
         /// <summary>
-        ///   Returns the cached ResourceManager instance used by this class.
+        ///   返回此类使用的缓存的 ResourceManager 实例。
         /// </summary>
         [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
         internal static global::System.Resources.ResourceManager ResourceManager {
@@ -53,8 +47,8 @@
         }
         
         /// <summary>
-        ///   Overrides the current thread's CurrentUICulture property for all
-        ///   resource lookups using this strongly typed resource class.
+        ///   使用此强类型资源类，为所有资源查找
+        ///   重写当前线程的 CurrentUICulture 属性。
         /// </summary>
         [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
         internal static global::System.Globalization.CultureInfo Culture {
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 CfxTestApp/Properties/Settings.Designer.cs
--- a/CfxTestApp/Properties/Settings.Designer.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/CfxTestApp/Properties/Settings.Designer.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -1,16 +1,10 @@
-// Copyright (c) 2014-2017 Wolfgang Borgsmüller
-// All rights reserved.
-// 
-// This software may be modified and distributed under the terms
-// of the BSD license. See the License.txt file for details.
-
-//------------------------------------------------------------------------------
+﻿//------------------------------------------------------------------------------
 // <auto-generated>
-//     This code was generated by a tool.
-//     Runtime Version:4.0.30319.1022
+//     此代码由工具生成。
+//     运行时版本:4.0.30319.42000
 //
-//     Changes to this file may cause incorrect behavior and will be lost if
-//     the code is regenerated.
+//     对此文件的更改可能会导致不正确的行为，并且如果
+//     重新生成代码，这些更改将会丢失。
 // </auto-generated>
 //------------------------------------------------------------------------------
 
@@ -18,7 +12,7 @@
     
     
     [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
-    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.1.0.0")]
     internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
         
         private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 CfxTestApp/app.config
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/CfxTestApp/app.config	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,3 @@
+<?xml version="1.0" encoding="utf-8"?>
+<configuration>
+<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX-Mono.sln
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumFX-Mono.sln	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,56 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 2012
+VisualStudioVersion = 12.0.31101.0
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ChromiumFX", "ChromiumFX\ChromiumFX.csproj", "{36972B7C-3A3A-465F-B064-51B525FD4C14}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ChromiumWebBrowser", "ChromiumWebBrowser\ChromiumWebBrowser.csproj", "{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}"
+EndProject
+Project("{2857B73E-F847-4B02-9238-064979017E93}") = "libcfx64-Mono", "libcfx64\libcfx64-Mono.cproj", "{660A63B1-3101-4AB4-9BFD-AB5110458D44}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ceftest", "ceftest\ceftest.csproj", "{7D309C8E-15B1-4988-BE6B-49037C57E69F}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Any CPU = Debug|Any CPU
+		Debug|x86 = Debug|x86
+		Release|Any CPU = Release|Any CPU
+		Release|x86 = Release|x86
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Debug|x86.Build.0 = Debug|Any CPU
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Release|Any CPU.Build.0 = Release|Any CPU
+		{36972B7C-3A3A-465F-B064-51B525FD4C14}.Release|x86.ActiveCfg = Release|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Debug|x86.Build.0 = Debug|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Release|Any CPU.Build.0 = Release|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Release|x86.ActiveCfg = Release|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Release|x86.Build.0 = Release|Any CPU
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Debug|x86.ActiveCfg = Debug|x86
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Debug|x86.Build.0 = Debug|x86
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Release|Any CPU.Build.0 = Release|Any CPU
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Release|x86.ActiveCfg = Release|x86
+		{7D309C8E-15B1-4988-BE6B-49037C57E69F}.Release|x86.Build.0 = Release|x86
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Debug|x86.Build.0 = Debug|Any CPU
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Release|Any CPU.Build.0 = Release|Any CPU
+		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Release|x86.ActiveCfg = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX-Mono.userprefs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumFX-Mono.userprefs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,26 @@
+﻿<Properties StartupItem="libcfx64/libcfx64-Mono.cproj">
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug|x86" />
+  <MonoDevelop.Ide.Workbench ActiveDocument="ceftest/Program.cs">
+    <Files>
+      <File FileName="ceftest/Program.cs" Line="102" Column="48" />
+      <File FileName="ceftest/Form1.cs" Line="1" Column="1" />
+      <File FileName="ChromiumWebBrowser/ChromiumWebBrowser.cs" Line="1" Column="1" />
+      <File FileName="libcfx/Source/libcfx.c" Line="26" Column="1" />
+      <File FileName="ChromiumWebBrowser/BrowserProcess/BrowserProcess.cs" Line="1" Column="1" />
+      <File FileName="ChromiumWebBrowser/BrowserProcess/RequestHandler.cs" Line="1" Column="1" />
+      <File FileName="ChromiumWebBrowser/RenderProcess/RenderProcess.cs" Line="1" Column="1" />
+      <File FileName="ChromiumWebBrowser/RenderProcess/RenderProcessHandler.cs" Line="9" Column="16" />
+      <File FileName="ChromiumWebBrowser/WebResource.cs" Line="97" Column="36" />
+    </Files>
+  </MonoDevelop.Ide.Workbench>
+  <MonoDevelop.Ide.DebuggingService.Breakpoints>
+    <BreakpointStore>
+      <Breakpoint file="/zfspool/pdata/azraelrabbit/chromiumfx/ChromiumWebBrowser/ChromiumWebBrowser.cs" line="1139" column="1" />
+      <Breakpoint file="/zfspool/pdata/azraelrabbit/chromiumfx/ChromiumWebBrowser/ChromiumWebBrowser.cs" line="1127" column="1" />
+      <Breakpoint file="/zfspool/pdata/azraelrabbit/chromiumfx/ChromiumWebBrowser/ChromiumWebBrowser.cs" line="959" column="1" />
+      <Breakpoint file="/zfspool/pdata/azraelrabbit/chromiumfx/ChromiumWebBrowser/ChromiumWebBrowser.cs" line="646" column="1" />
+      <Breakpoint file="/zfspool/pdata/azraelrabbit/chromiumfx/ChromiumWebBrowser/ChromiumWebBrowser.cs" line="603" column="1" />
+    </BreakpointStore>
+  </MonoDevelop.Ide.DebuggingService.Breakpoints>
+  <MonoDevelop.Ide.DebuggingService.PinnedWatches />
+</Properties>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX.sln
--- a/ChromiumFX.sln	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumFX.sln	Wed Aug 02 14:10:44 2017 +0800
@@ -1,7 +1,7 @@
 ﻿
 Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 2013
-VisualStudioVersion = 12.0.31101.0
+# Visual Studio 15
+VisualStudioVersion = 15.0.26430.16
 MinimumVisualStudioVersion = 10.0.40219.1
 Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ChromiumFX", "ChromiumFX\ChromiumFX.csproj", "{36972B7C-3A3A-465F-B064-51B525FD4C14}"
 	ProjectSection(ProjectDependencies) = postProject
@@ -17,6 +17,8 @@
 EndProject
 Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ChromiumWebBrowser", "ChromiumWebBrowser\ChromiumWebBrowser.csproj", "{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}"
 EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ceftest", "ceftest\ceftest.csproj", "{5DFD720F-8A74-4D3B-855D-0E624A497E58}"
+EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Any CPU = Debug|Any CPU
@@ -55,6 +57,14 @@
 		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Release|Any CPU.ActiveCfg = Release|Any CPU
 		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Release|Any CPU.Build.0 = Release|Any CPU
 		{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}.Release|x86.ActiveCfg = Release|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Debug|x86.Build.0 = Debug|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Release|Any CPU.Build.0 = Release|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Release|x86.ActiveCfg = Release|Any CPU
+		{5DFD720F-8A74-4D3B-855D-0E624A497E58}.Release|x86.Build.0 = Release|Any CPU
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX.userprefs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumFX.userprefs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,14 @@
+﻿<Properties StartupItem="CfxTestApp/CfxTestApplication.csproj">
+  <DisabledProjects>
+    <String>libcfx/libcfx.vcxproj</String>
+    <String>linux/libcfx64.cproj</String>
+  </DisabledProjects>
+  <MonoDevelop.Ide.Workspace ActiveConfiguration="Debug" />
+  <MonoDevelop.Ide.Workbench />
+  <MonoDevelop.Ide.DebuggingService.Breakpoints>
+    <BreakpointStore>
+      <Breakpoint file="/zfspool/pdata/chromiumfx/CfxTestApp/Program.cs" line="56" column="1" />
+    </BreakpointStore>
+  </MonoDevelop.Ide.DebuggingService.Breakpoints>
+  <MonoDevelop.Ide.DebuggingService.PinnedWatches />
+</Properties>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/ChromiumFX.csproj
--- a/ChromiumFX/ChromiumFX.csproj	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumFX/ChromiumFX.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
+﻿<?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
   <PropertyGroup>
     <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
@@ -305,6 +305,9 @@
     <Compile Include="Source\Remote\CfrTellEventArgs.cs" />
     <Compile Include="Source\Remote\CfrSeekEventArgs.cs" />
     <Compile Include="Source\Remote\CfrBaseScoped.cs" />
+    <Compile Include="Source\Remote\DefaultPipeFactory.cs" />
+    <Compile Include="Source\Remote\PipeBufferStream.cs" />
+    <Compile Include="Source\Remote\PipeFactory.cs" />
     <Compile Include="Source\Remote\WorkerPool.cs" />
     <Compile Include="Source\StringFunctions.cs" />
     <Compile Include="Source\CfxZipReader.cs" />
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/Source/CfxApi.cs
--- a/ChromiumFX/Source/CfxApi.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumFX/Source/CfxApi.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -143,11 +143,15 @@
             var libcfxPath = System.IO.Path.Combine(libCfxDirPath, libCfx);
             var libcefPath = System.IO.Path.Combine(libCefDirPath, libCef);
 
+            Console.WriteLine("load:libcfxPath:"+libcfxPath);
+            Console.WriteLine("load:libcefPath:"+libcefPath);
             // as of 3.2883, this must be in the path due to libcef dependencies.
 
             var path = Environment.GetEnvironmentVariable("PATH");
             Environment.SetEnvironmentVariable("PATH", libCefDirPath + ";" + path);
 
+            Console.WriteLine("path:"+Environment.GetEnvironmentVariable("PATH"));
+
             libcefPtr = loader.LoadNativeLibrary(libcefPath);
             if(libcefPtr == IntPtr.Zero) {
                 throw new CfxException("Unable to load libcef library " + libcefPath);
@@ -209,8 +213,13 @@
             if(libCfxDirPath == null)
                 libCfxDirPath = System.IO.Path.GetDirectoryName(new System.Uri(System.Reflection.Assembly.GetExecutingAssembly().CodeBase).LocalPath);
 
+            Console.WriteLine("libCfxdirPath:"+libCfxDirPath);
+
+
             libCfx = GetLibCfxName(libCfxDirPath);
 
+            Console.WriteLine("libcfx:"+libCfx);
+
             if(libCfx == null) {
                 if(libCefDirPath != null) {
                     libCfxDirPath = libCefDirPath;
@@ -250,30 +259,31 @@
                     libCefDirPath = System.IO.Path.Combine(libCefDirPath, "cef");
                 }
             }
-
-            if(!System.IO.File.Exists(System.IO.Path.Combine(libCefDirPath, libCef))) {
-                throw new CfxException("libcef library not found.");
-            }
-
             libCefDirPath = System.IO.Path.GetFullPath(libCefDirPath);
             libCfxDirPath = System.IO.Path.GetFullPath(libCfxDirPath);
 
+            if (!System.IO.File.Exists(System.IO.Path.Combine(libCefDirPath, libCef))) {
+                throw new CfxException("libcef library not found.");
+            }
         }
 
         private static string GetLibCfxName(string directory) {
             string name;
+            string retName = null;
             if(CfxRuntime.PlatformArch == CfxPlatformArch.x86)
                 name = "libcfx";
             else
                 name = "libcfx64";
 
             if(System.IO.File.Exists(System.IO.Path.Combine(directory, name + ".dll")))
-                return name + ".dll";
+                retName= name + ".dll";
 
             if(System.IO.File.Exists(System.IO.Path.Combine(directory, name + ".so")))
-                return name + ".so";
+                retName= name + ".so";
+
 
-            return null;
+            Console.WriteLine(retName);
+            return retName;
         }
 
 
@@ -292,8 +302,12 @@
         }
 
         private static Delegate LoadDelegate(NativeFunctionLoader loader, IntPtr hModule, string procName, Type delegateType) {
+            
             IntPtr functionPtr = loader.GetFunctionPointer(hModule, procName);
-            if(functionPtr == IntPtr.Zero) {
+
+            Console.WriteLine("fucntion Ptr:" + functionPtr.ToString());
+            Console.WriteLine("procName:"+procName);
+            if (functionPtr == IntPtr.Zero) {
                 throw new CfxException("Unable to load native function " + procName + ".");
             }
             return Marshal.GetDelegateForFunctionPointer(functionPtr, delegateType);
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/Source/CfxRuntime.cs
--- a/ChromiumFX/Source/CfxRuntime.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumFX/Source/CfxRuntime.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -5,11 +5,17 @@
 // of the BSD license. See the License.txt file for details.
 
 using System;
-namespace Chromium {
+using System.Diagnostics;
+using Chromium.Event;
+
+
+namespace Chromium
+{
     /// <summary>
     /// Collection of global static CEF functions.
     /// </summary>
-    public static partial class CfxRuntime {
+    public static partial class CfxRuntime
+    {
 
         internal static event Action OnCfxShutdown;
 
@@ -17,12 +23,15 @@
         /// Set the path to the directory containing the libcef library.
         /// If left blank the default locations are searched.
         /// </summary>
-        public static string LibCefDirPath {
-            get {
+        public static string LibCefDirPath
+        {
+            get
+            {
                 return CfxApi.libCefDirPath;
             }
-            set {
-                if(CfxApi.librariesLoaded)
+            set
+            {
+                if (CfxApi.librariesLoaded)
                     throw new CfxException("Unable to change libcfx directory path: library already loaded.");
                 CfxApi.libCefDirPath = value;
             }
@@ -32,12 +41,15 @@
         /// Set the path to the directory containing the libcfx library.
         /// If left blank the default locations are searched.
         /// </summary>
-        public static string LibCfxDirPath {
-            get {
+        public static string LibCfxDirPath
+        {
+            get
+            {
                 return CfxApi.libCfxDirPath;
             }
-            set {
-                if(CfxApi.librariesLoaded)
+            set
+            {
+                if (CfxApi.librariesLoaded)
                     throw new CfxException("Unable to change libcef directory path: library already loaded.");
                 CfxApi.libCfxDirPath = value;
             }
@@ -51,8 +63,10 @@
         /// <summary>
         /// The operating system ChromiumFX is currently running on.
         /// </summary>
-        public static CfxPlatformOS PlatformOS {
-            get {
+        public static CfxPlatformOS PlatformOS
+        {
+            get
+            {
                 CfxApi.Probe();
                 return CfxApi.PlatformOS;
             }
@@ -61,9 +75,12 @@
         /// <summary>
         /// The system architecture ChromiumFX is currently running on.
         /// </summary>
-        public static CfxPlatformArch PlatformArch {
-            get {
-                switch(IntPtr.Size) {
+        public static CfxPlatformArch PlatformArch
+        {
+            get
+            {
+                switch (IntPtr.Size)
+                {
                     case 4:
                         return CfxPlatformArch.x86;
                     case 8:
@@ -91,7 +108,8 @@
         /// 
         /// The chromium sandbox is currently not supported within ChromiumFX.
         /// </summary>
-        public static int ExecuteProcess() {
+        public static int ExecuteProcess()
+        {
             return ExecuteProcess(null);
         }
 
@@ -113,30 +131,38 @@
         /// 
         /// The chromium sandbox is currently not supported within ChromiumFX.
         /// </summary>
-        public static int ExecuteProcess(CfxApp application) {
-            
+        public static int ExecuteProcess(CfxApp application)
+        {
+
             CfxApi.Probe();
 
             var cmd = Environment.CommandLine;
             var ex = new System.Text.RegularExpressions.Regex(@"cfxremote=(\w+)");
             var m = ex.Match(cmd);
 
-            if(m.Success) {
-                if(application != null) {
+            if (m.Success)
+            {
+                if (application != null)
+                {
                     throw new Exception("Can't handle user provided CfxApp object when the remote layer IPC bridge is in use.");
                 }
                 return Chromium.Remote.RemoteClient.ExecuteProcess(m.Groups[1].Value);
-            } else {
+            }
+            else
+            {
                 return ExecuteProcessInternal(application);
             }
         }
 
-        internal static int ExecuteProcessInternal(CfxApp application) {
-            switch(CfxApi.PlatformOS) {
+        internal static int ExecuteProcessInternal(CfxApp application)
+        {
+            switch (CfxApi.PlatformOS)
+            {
                 case CfxPlatformOS.Windows:
                     return ExecuteProcessPrivate(null, application, IntPtr.Zero);
                 case CfxPlatformOS.Linux:
-                    using(var mainArgs = CfxMainArgs.ForLinux()) {
+                    using (var mainArgs = CfxMainArgs.ForLinux())
+                    {
                         var retval = ExecuteProcessPrivate(mainArgs, application, IntPtr.Zero);
                         mainArgs.mainArgsLinux.Free();
                         return retval;
@@ -159,7 +185,8 @@
         /// 
         /// The chromium sandbox is currently not supported within ChromiumFX.
         /// </summary>
-        public static bool Initialize(CfxSettings settings, CfxApp application, CfxRenderProcessMainDelegate renderProcessMain) {
+        public static bool Initialize(CfxSettings settings, CfxApp application, CfxRenderProcessMainDelegate renderProcessMain)
+        {
             CfxApi.Probe();
             Chromium.Remote.RemoteService.Initialize(renderProcessMain, ref application);
             return Initialize(settings, application);
@@ -171,15 +198,34 @@
         /// value of true (1) indicates that it succeeded and false (0) indicates that it
         /// failed.
         /// 
+        ///  /// On the Linux platform the runtime will set the correct |BrowserSubProcessPath|
+        /// if settings doesn't have one set. This is done in order to prevent the default
+        /// /usr/bin/mono from being used. If no --renderer-cmd-prefix, --utility-cmd-prefix
+        /// and/or --gpu-laucher commandline switch is provided 'mono' is used as a default
+        /// value. If a custom |BrowserSubProcessPath| is used and it's target is a non-managed
+        /// application set these switches to 'command' in order to disable the use of 'mono' to
+        /// launch subprocesses.
+        /// 
         /// The chromium sandbox is currently not supported within ChromiumFX.
         /// </summary>
-        public static bool Initialize(CfxSettings settings, CfxApp application) {
+        public static bool Initialize(CfxSettings settings, CfxApp application)
+        {
             CfxApi.Probe();
-            switch(CfxApi.PlatformOS) {
+            switch (CfxApi.PlatformOS)
+            {
                 case CfxPlatformOS.Windows:
                     return InitializePrivate(null, settings, application, IntPtr.Zero);
                 case CfxPlatformOS.Linux:
-                    using(var mainArgs = CfxMainArgs.ForLinux()) {
+                    // if no BrowserSubProcessPath is given we set it here in order to prevent execution of /usr/bin/mono
+                    if (settings.BrowserSubprocessPath == null)
+                    {
+                        settings.BrowserSubprocessPath = System.Reflection.Assembly.GetEntryAssembly().Location;
+                    }
+
+                    // render and utility processes need a mono prefix or else they won't launch
+                    application.OnBeforeCommandLineProcessing += AddMonoCmdPrefix;
+                    using (var mainArgs = CfxMainArgs.ForLinux())
+                    {
                         var retval = InitializePrivate(mainArgs, settings, application, IntPtr.Zero);
                         mainArgs.mainArgsLinux.Free();
                         return retval;
@@ -188,13 +234,32 @@
                     throw new CfxException();
             }
         }
+        private static void AddMonoCmdPrefix(object sender, CfxOnBeforeCommandLineProcessingEventArgs e)
+        {
+            if (!e.CommandLine.HasSwitch("--renderer-cmd-prefix"))
+            {
+                e.CommandLine.AppendSwitchWithValue("--renderer-cmd-prefix", "mono");
+            }
 
-        public static string GetCefVersion() {
+            if (!e.CommandLine.HasSwitch("--gpu-launcher"))
+            {
+                e.CommandLine.AppendSwitchWithValue("--gpu-launcher", "mono");
+            }
+
+            if (!e.CommandLine.HasSwitch("--utility-cmd-prefix"))
+            {
+                e.CommandLine.AppendSwitchWithValue("--utility-cmd-prefix", "mono");
+            }
+        }
+
+        public static string GetCefVersion()
+        {
             CfxApi.Probe();
             return String.Format("{0}.{1}.{2}", VersionInfo(0), VersionInfo(4), VersionInfo(1));
         }
 
-        public static string GetChromeVersion() {
+        public static string GetChromeVersion()
+        {
             CfxApi.Probe();
             return String.Format("{0}.{1}.{2}.{3}", VersionInfo(2), VersionInfo(3), VersionInfo(4), VersionInfo(5));
         }
@@ -203,9 +268,10 @@
         /// This function should be called on the main application thread to shut down
         /// the CEF browser process before the application exits.
         /// </summary>
-        public static void Shutdown() {
+        public static void Shutdown()
+        {
             var handler = OnCfxShutdown;
-            if(handler != null)
+            if (handler != null)
                 handler();
             ShutdownPrivate();
         }
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/Source/NativeFunctionLoader.cs
--- a/ChromiumFX/Source/NativeFunctionLoader.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumFX/Source/NativeFunctionLoader.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -13,7 +13,14 @@
         internal static NativeFunctionLoader Create() {
             // use path separator character instead of Environment.OSVersion.Platform
             // for platform detection
-            if(System.IO.Path.DirectorySeparatorChar.Equals('\\'))
+            if (Environment.OSVersion.Platform == PlatformID.Win32NT)
+            {
+                Console.WriteLine("current is window");
+                return new WindowsFunctionLoader();
+            }
+            Console.WriteLine("current is linux or mac");
+            return  new UnixFunctionLoader();
+            if (System.IO.Path.DirectorySeparatorChar.Equals('\\'))
                 return new WindowsFunctionLoader();
             else
                 return new UnixFunctionLoader();
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/Source/Remote/DefaultPipeFactory.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumFX/Source/Remote/DefaultPipeFactory.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,73 @@
+﻿// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+using System;
+using System.IO;
+using System.IO.Pipes;
+
+namespace Chromium.Remote {
+    class DefaultPipeFactory : PipeFactory {
+
+        internal override System.IO.Stream CreateServerPipeInputStream(string name) {
+            var s = new NamedPipeServerStream(name, PipeDirection.In, 1);
+            return new PipeBufferStream(s);
+        }
+
+        internal override System.IO.Stream CreateServerPipeOutputStream(string name) {
+            var s = new NamedPipeServerStream(name, PipeDirection.Out, 1);
+            return new PipeBufferStream(s);
+        }
+
+        internal override System.IO.Stream CreateClientPipeInputStream(string name) {
+            var s = new NamedPipeClientStream(".", name, PipeDirection.In);
+            return new PipeBufferStream(s);
+        }
+
+        internal override System.IO.Stream CreateClientPipeOutputStream(string name) {
+            var s = new NamedPipeClientStream(".", name, PipeDirection.Out);
+            return new PipeBufferStream(s);
+        }
+
+        internal override void WaitForConnection(System.IO.Stream serverStream) {
+            if(serverStream is PipeBufferStream)
+                ((NamedPipeServerStream)((PipeBufferStream)serverStream).pipe).WaitForConnection();
+            else
+                ((NamedPipeServerStream)serverStream).WaitForConnection();
+        }
+
+        internal override void Connect(System.IO.Stream clientStream) {
+            if(clientStream is PipeBufferStream)
+                ((NamedPipeClientStream)((PipeBufferStream)clientStream).pipe).Connect();
+            else
+                ((NamedPipeClientStream)clientStream).Connect();
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/Source/Remote/PipeBufferStream.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumFX/Source/Remote/PipeBufferStream.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,126 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Diagnostics;
+using System.IO;
+using System.IO.Pipes;
+
+namespace Chromium.Remote {
+    /// <summary>
+    /// Buffer data until Flush() or until the buffer is full 
+    /// and read data into a buffer in an attempt to bundle 
+    /// several pipe read/write operations into one.
+    /// </summary>
+    class PipeBufferStream : Stream {
+
+        internal const int bufferLength = 1024;
+
+        internal readonly PipeStream pipe;
+        
+        private readonly byte[] writeBuffer;
+        private int writeBufferCount;
+
+        private readonly byte[] readBuffer;
+        private int readBufferOffset;
+        private int readBufferCount;
+
+        internal PipeBufferStream(PipeStream pipe) {
+            this.pipe = pipe;
+            writeBuffer = new byte[bufferLength];
+            readBuffer = new byte[bufferLength];
+        }
+
+        public override void Write(byte[] buffer, int offset, int count) {
+            do {
+                
+                var bytes = count > bufferLength - writeBufferCount ?
+                    bufferLength - writeBufferCount : count;
+
+                Array.Copy(buffer, offset, this.writeBuffer, writeBufferCount, bytes);
+                writeBufferCount += bytes;
+                offset += bytes;
+                count -= bytes;
+
+                
+                if(writeBufferCount == bufferLength) {
+                    pipe.Write(this.writeBuffer, 0, writeBufferCount);
+                    writeBufferCount = 0;
+                }
+
+            } while(count > 0);
+        }
+
+        public override void WriteByte(byte value) {
+            writeBuffer[writeBufferCount] = (byte)value;
+            ++writeBufferCount;
+            if(writeBufferCount == bufferLength) {
+                pipe.Write(this.writeBuffer, 0, writeBufferCount);
+                writeBufferCount = 0;
+            }
+        }
+
+        public override int Read(byte[] buffer, int offset, int count) {
+            if(readBufferCount == 0) {
+                readBufferOffset = 0;
+                readBufferCount = pipe.Read(readBuffer, 0, bufferLength);
+                if(readBufferCount == 0) return 0;
+            }
+            int bytes = count < readBufferCount ? count : readBufferCount;
+            Array.Copy(readBuffer, readBufferOffset, buffer, offset, bytes);
+            readBufferOffset += bytes;
+            readBufferCount -= bytes;
+            return bytes;
+        }
+
+        public override int ReadByte() {
+            if(readBufferCount == 0) {
+                readBufferOffset = 0;
+                readBufferCount = pipe.Read(readBuffer, 0, bufferLength);
+                if(readBufferCount == 0) return -1;
+            }
+            var retval = readBuffer[readBufferOffset];
+            ++readBufferOffset;
+            --readBufferCount;
+            return retval;
+        }
+
+        public override void Flush() {
+            if(writeBufferCount > 0) {
+                pipe.Write(this.writeBuffer, 0, writeBufferCount);
+                writeBufferCount = 0;
+            }
+        }
+
+        public override bool CanRead {
+            get { return pipe.CanRead; }
+        }
+
+        public override bool CanSeek {
+            get { return false; }
+        }
+
+        public override bool CanWrite {
+            get { return pipe.CanWrite; }
+        }
+
+        public override long Length {
+            get { throw new NotSupportedException(); }
+        }
+
+        public override long Position {
+            get {
+                throw new NotSupportedException();
+            }
+            set {
+                throw new NotSupportedException();
+            }
+        }
+
+        public override long Seek(long offset, SeekOrigin origin) {
+            throw new NotSupportedException();
+        }
+
+        public override void SetLength(long value) {
+            throw new NotSupportedException();
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumFX/Source/Remote/PipeFactory.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumFX/Source/Remote/PipeFactory.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,67 @@
+﻿// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+using System;
+using System.IO;
+
+namespace Chromium.Remote {
+
+    internal abstract class PipeFactory {
+
+        private static PipeFactory singleton;
+
+        internal static PipeFactory Instance {
+            get {
+                if(singleton == null) {
+                    switch(CfxRuntime.PlatformOS) {
+                        case CfxPlatformOS.Windows:
+                        case CfxPlatformOS.Linux:
+                            singleton = new DefaultPipeFactory();
+                            break;
+                        default:
+                            throw new CfxException("Unsupported platform: " + Environment.OSVersion.VersionString);
+                    }
+                }
+                return singleton;
+            }
+        }
+
+
+        internal abstract Stream CreateServerPipeInputStream(string name);
+        internal abstract Stream CreateServerPipeOutputStream(string name);
+        internal abstract Stream CreateClientPipeInputStream(string name);
+        internal abstract Stream CreateClientPipeOutputStream(string name);
+
+        internal abstract void WaitForConnection(Stream serverStream);
+        internal abstract void Connect(Stream clientStream);
+
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumWebBrowser/BrowserProcess/BrowserProcess.cs
--- a/ChromiumWebBrowser/BrowserProcess/BrowserProcess.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumWebBrowser/BrowserProcess/BrowserProcess.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -5,25 +5,30 @@
 // of the BSD license. See the License.txt file for details.
 
 using System;
+using System.Threading;
+using System.Windows.Forms;
 using Chromium;
 using Chromium.Event;
 
-namespace Chromium.WebBrowser {
-    internal static class BrowserProcess {
+namespace Chromium.WebBrowser
+{
+    internal static class BrowserProcess
+    {
 
         internal static CfxApp app;
         internal static CfxBrowserProcessHandler processHandler;
 
         internal static bool initialized;
 
-        internal static void Initialize() {
+        internal static void Initialize()
+        {
 
-            if(initialized)
+            if (initialized)
                 throw new ChromiumWebBrowserException("ChromiumWebBrowser library already initialized.");
 
 
             int retval = CfxRuntime.ExecuteProcess();
-            if(retval >= 0)
+            if (retval >= 0)
                 Environment.Exit(retval);
 
 
@@ -35,15 +40,36 @@
             app.OnRegisterCustomSchemes += (s, e) => ChromiumWebBrowser.RaiseOnRegisterCustomSchemes(e);
 
             var settings = new CfxSettings();
-            settings.MultiThreadedMessageLoop = true;
+            //settings.MultiThreadedMessageLoop = true;
+
+            //FIXED different default settings based on platform
+            switch (CfxRuntime.PlatformOS)
+            {
+                case CfxPlatformOS.Linux:
+                    settings.MultiThreadedMessageLoop = false;
+
+                    //TODO less demanding way of using DoMessageLoopWork, ExernalMessageLoop = true doesn't seem to work
+                    Application.Idle += BrowserMessageLoopStep;
+                    break;
+                default:
+                    settings.MultiThreadedMessageLoop = true;
+                    break;
+            }
+
             settings.NoSandbox = true;
 
             ChromiumWebBrowser.RaiseOnBeforeCfxInitialize(settings, processHandler);
 
-            if(!CfxRuntime.Initialize(settings, app, RenderProcess.RenderProcessMain))
+            if (!CfxRuntime.Initialize(settings, app, RenderProcess.RenderProcessMain))
                 throw new ChromiumWebBrowserException("Failed to initialize CEF library.");
 
             initialized = true;
         }
+        private static void BrowserMessageLoopStep(object sender, EventArgs e)
+        {
+            CfxRuntime.DoMessageLoopWork();
+
+            Thread.Yield();
+        }
     }
 }
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumWebBrowser/ChromiumWebBrowser.cs
--- a/ChromiumWebBrowser/ChromiumWebBrowser.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumWebBrowser/ChromiumWebBrowser.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -1138,30 +1138,39 @@
 
 
         internal void ResizeBrowserWindow() {
-            if(browserWindowHandle == IntPtr.Zero) return;
-            if(Visible && Height > 0 && Width > 0) {
-                int h;
-                if(m_findToolbar == null || !m_findToolbar.Visible) {
-                    h = Height;
-                } else {
-                    if(InvokeRequired) {
-                        Invoke((MethodInvoker)(() => {
+            if (Visible)
+            {
+                if (browserWindowHandle != IntPtr.Zero && this.Height > 0 && this.Width > 0)
+                {
+                    int h;
+                    if (m_findToolbar == null || !m_findToolbar.Visible)
+                    {
+                        h = Height;
+                    }
+                    else
+                    {
+                        if (InvokeRequired)
+                        {
+                            Invoke((MethodInvoker)(() => {
+                                m_findToolbar.Width = Width;
+                                m_findToolbar.Top = Height - m_findToolbar.Height;
+                            }));
+                        }
+                        else
+                        {
                             m_findToolbar.Width = Width;
                             m_findToolbar.Top = Height - m_findToolbar.Height;
-                        }));
-                    } else {
-                        m_findToolbar.Width = Width;
-                        m_findToolbar.Top = Height - m_findToolbar.Height;
+                        }
+                        h = m_findToolbar.Top;
                     }
-                    h = m_findToolbar.Top;
+                    NativeWindow.SetStyle(browserWindowHandle, WindowStyle.WS_CHILD | WindowStyle.WS_CLIPCHILDREN | WindowStyle.WS_CLIPSIBLINGS | WindowStyle.WS_TABSTOP | WindowStyle.WS_VISIBLE);
+                    NativeWindow.SetPosition(browserWindowHandle, 0, 0, Width, h);
                 }
-                SetWindowLong(browserWindowHandle, -16, (int)(WindowStyle.WS_CHILD | WindowStyle.WS_CLIPCHILDREN | WindowStyle.WS_CLIPSIBLINGS | WindowStyle.WS_TABSTOP | WindowStyle.WS_VISIBLE));
-                SetWindowPos(browserWindowHandle, IntPtr.Zero, 0, 0, Width, h, SWP_NOMOVE | SWP_NOZORDER | SWP_SHOWWINDOW | SWP_NOCOPYBITS | SWP_ASYNCWINDOWPOS);
-                //Debug.Print($"ResizeBrowserWindow: {Width} {h}");
-            } else {
-                SetWindowLong(browserWindowHandle, -16, (int)(WindowStyle.WS_CHILD | WindowStyle.WS_CLIPCHILDREN | WindowStyle.WS_CLIPSIBLINGS | WindowStyle.WS_TABSTOP | WindowStyle.WS_DISABLED));
-                SetWindowPos(browserWindowHandle, IntPtr.Zero, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE | SWP_HIDEWINDOW | SWP_ASYNCWINDOWPOS);
-                //Debug.Print($"ResizeBrowserWindow: hide");
+            }
+            else
+            {
+                if (browserWindowHandle != IntPtr.Zero)
+                    NativeWindow.SetStyle(browserWindowHandle, WindowStyle.WS_CHILD | WindowStyle.WS_CLIPCHILDREN | WindowStyle.WS_CLIPSIBLINGS | WindowStyle.WS_TABSTOP | WindowStyle.WS_DISABLED);
             }
         }
 
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumWebBrowser/ChromiumWebBrowser.csproj
--- a/ChromiumWebBrowser/ChromiumWebBrowser.csproj	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumWebBrowser/ChromiumWebBrowser.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -57,6 +57,7 @@
     <Compile Include="ChromiumWebBrowser.cs" />
     <Compile Include="JSObject.cs" />
     <Compile Include="JSProperty.cs" />
+    <Compile Include="NativeWindow.cs" />
     <Compile Include="Properties\AssemblyInfo.cs" />
     <Compile Include="RenderProcess\RenderProcess.cs" />
     <Compile Include="RenderProcess\RenderProcessHandler.cs" />
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumWebBrowser/FindToolbar.cs
--- a/ChromiumWebBrowser/FindToolbar.cs	Wed Aug 02 13:11:56 2017 +0800
+++ b/ChromiumWebBrowser/FindToolbar.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -171,8 +171,8 @@
 
             closeButton.GotFocus += (s, e) => { textBox.Focus(); };
 
-            SendMessage(textBox.Handle, 0x1501, 1, "Find in page");
-
+            //SendMessage(textBox.Handle, 0x1501, 1, "Find in page");
+            NativeWindow.SetWatermark(textBox.Handle, "Find in page");
             // Once a find toolbar is created for a browser, it is kept until the browser is destroyed.
             // So there is no need to unsubscribe from this event.
             wb.FindHandler.OnFindResult += (s, e) => {
@@ -356,8 +356,8 @@
             textBox.Focus();
         }
 
-        [DllImport("user32.dll")]
-        private static extern IntPtr SendMessage(IntPtr hWnd, int Msg, int wParam, [MarshalAs(UnmanagedType.LPWStr)] string lParam);
+        //[DllImport("user32.dll")]
+        //private static extern IntPtr SendMessage(IntPtr hWnd, int Msg, int wParam, [MarshalAs(UnmanagedType.LPWStr)] string lParam);
 
     }
 }
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ChromiumWebBrowser/NativeWindow.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ChromiumWebBrowser/NativeWindow.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,161 @@
+// Copyright (c) 2016 Charlie Gerhardus
+//
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+using System;
+using System.Runtime.InteropServices;
+using System.Diagnostics;
+using System.Windows.Forms;
+
+namespace Chromium.WebBrowser
+{
+    internal static class NativeWindow
+    {
+        private static NativeWindowPlatform platform = NativeWindowPlatform.Create();
+
+        public static void SetPosition(IntPtr wnd, int x, int y, int w, int h)
+        {
+            platform.SetPosition(wnd, x, y, w, h);
+        }
+
+        public static void SetStyle(IntPtr wnd, WindowStyle style)
+        {
+            platform.SetStyle(wnd, style);
+        }
+
+        public static void SetWatermark(IntPtr wnd, string str)
+        {
+            platform.SetWatermark(wnd, str);
+        }
+        private abstract class NativeWindowPlatform
+        {
+            public static NativeWindowPlatform Create()
+            {
+                switch (CfxRuntime.PlatformOS)
+                {
+                //TODO mac?
+                case CfxPlatformOS.Windows:
+                    return new NativeWindowWindows();
+                case CfxPlatformOS.Linux:
+                    return new NativeWindowLinux();
+                default:
+                    throw new Exception("Unsupported platform!");
+                }
+            }
+
+            public abstract void SetStyle(IntPtr wnd, WindowStyle style);
+            public abstract void SetPosition(IntPtr wnd, int x, int y, int w, int h);
+            public abstract void SetWatermark(IntPtr wnd, string str);
+        }
+
+        private class NativeWindowWindows : NativeWindowPlatform
+        {
+
+            public override void SetPosition(IntPtr wnd, int x, int y, int w, int h)
+            {
+                SetWindowPos(wnd, IntPtr.Zero, x, y, w, h, SWP_NOMOVE | SWP_NOZORDER);
+            }
+
+            public override void SetStyle(IntPtr wnd, WindowStyle style)
+            {
+                SetWindowLong(wnd, -16, (int)style);
+            }
+
+            public override void SetWatermark(IntPtr wnd, string str)
+            {
+                SendMessage(wnd, EM_SETCUEBANNER, 1, str);
+            }
+
+            public const uint SWP_NOMOVE = 0x2;
+            public const uint SWP_NOZORDER = 0x4;
+
+            public const int EM_SETCUEBANNER = 0x1501;
+
+            [DllImport("user32.dll")]
+            private static extern IntPtr SendMessage(IntPtr hWnd, int Msg, int wParam, [MarshalAs(UnmanagedType.LPWStr)] string lParam);
+
+            [DllImport("user32", SetLastError = false)]
+            private static extern int SetWindowLong(IntPtr hWnd, int nIndex, int dwNewLong);
+
+            [DllImport("user32", SetLastError = false)]
+            [return: MarshalAs(UnmanagedType.Bool)]
+            private static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);
+        }
+
+        private class NativeWindowLinux : NativeWindowPlatform, IMessageFilter
+        {
+
+            public NativeWindowLinux()
+            {
+                Application.AddMessageFilter(this);
+            }
+
+            public bool PreFilterMessage(ref Message msg)
+            {
+                //FIXED Forcing focus to any control receiving a mouse click solves the focus stealing of a cef browser
+                //TODO expand filter with more relevant msg id's (RBUTTONDOWN...)
+                if (msg.Msg == WM_LBUTTONDOWN)
+                {
+                    XSetInputFocus(CfxRuntime.Linux.GetXDisplay(), msg.HWnd, XInputFocus.RevertToNone, 0);
+                }
+
+                return false;
+            }
+
+            public override void SetPosition(IntPtr wnd, int x, int y, int w, int h)
+            {
+                XMoveResizeWindow(CfxRuntime.Linux.GetXDisplay(), wnd, x, y, w, h);
+            }
+
+            public override void SetStyle(IntPtr wnd, WindowStyle style)
+            {
+                //TODO locate X11 SetWindowLong alternative!
+            }
+
+            public override void SetWatermark(IntPtr wnd, string str)
+            {
+                //TODO locate X11 EM_SETCUEBANNER alternative!
+            }
+
+            public const int WM_LBUTTONDOWN = 0x0201;
+
+            public enum XInputFocus
+            {
+                RevertToNone = 0,
+                RevertToPointerRoot = 1,
+                RevertToParent = 2
+            }
+
+            [DllImport("libX11")]
+            private static extern int XSetInputFocus(IntPtr display, IntPtr focus, XInputFocus revert_to, int time);
+
+            [DllImport("libX11")]
+            private static extern int XMoveResizeWindow(IntPtr display, IntPtr w, int x, int y, int width, int height);
+
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/BrowserForm.Designer.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/BrowserForm.Designer.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,441 @@
+// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+
+namespace CfxTestApplication {
+    partial class BrowserForm {
+        /// <summary>
+        /// Required designer variable.
+        /// </summary>
+        private System.ComponentModel.IContainer components = null;
+
+        /// <summary>
+        /// Clean up any resources being used.
+        /// </summary>
+        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
+        protected override void Dispose(bool disposing) {
+            if(disposing && (components != null)) {
+                components.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+
+        #region Windows Form Designer generated code
+
+        /// <summary>
+        /// Required method for Designer support - do not modify
+        /// the contents of this method with the code editor.
+        /// </summary>
+        private void InitializeComponent() {
+            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(BrowserForm));
+            this.toolStrip1 = new System.Windows.Forms.ToolStrip();
+            this.BackButton = new System.Windows.Forms.ToolStripButton();
+            this.FwdButton = new System.Windows.Forms.ToolStripButton();
+            this.UrlTextBox = new System.Windows.Forms.ToolStripTextBox();
+            this.LoadUrlButton = new System.Windows.Forms.ToolStripButton();
+            this.toolStripSeparator1 = new System.Windows.Forms.ToolStripSeparator();
+            this.LoadGoogleButton = new System.Windows.Forms.ToolStripButton();
+            this.JSHelloWorldButton = new System.Windows.Forms.ToolStripButton();
+            this.JSTestPageButton = new System.Windows.Forms.ToolStripButton();
+            this.VisitDomButton = new System.Windows.Forms.ToolStripButton();
+            this.CountFramesButton = new System.Windows.Forms.ToolStripButton();
+            this.ShowDevToolsButton = new System.Windows.Forms.ToolStripButton();
+            this.CreditsButton = new System.Windows.Forms.ToolStripButton();
+            this.miscDropDownButton = new System.Windows.Forms.ToolStripDropDownButton();
+            this.systemNetCompatibilityTestToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.clearContextMenuModelToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.remoteLayerStressTestToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.evaluateJavascriptToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.executeSleepFunctionToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.toggleFindToolbarToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.evaluateJavascriptSynchronouslyToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.executeArrayTestFunctionToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.listKeysInDocumentObjectToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.printButton = new System.Windows.Forms.ToolStripButton();
+            this.splitContainer1 = new System.Windows.Forms.SplitContainer();
+            this.WebBrowser = new Chromium.WebBrowser.ChromiumWebBrowser();
+            this.splitContainer2 = new System.Windows.Forms.SplitContainer();
+            this.LogTextBox = new System.Windows.Forms.TextBox();
+            this.setBrowserInvisibleToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
+            this.toolStrip1.SuspendLayout();
+            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).BeginInit();
+            this.splitContainer1.Panel1.SuspendLayout();
+            this.splitContainer1.SuspendLayout();
+            ((System.ComponentModel.ISupportInitialize)(this.splitContainer2)).BeginInit();
+            this.splitContainer2.Panel1.SuspendLayout();
+            this.splitContainer2.Panel2.SuspendLayout();
+            this.splitContainer2.SuspendLayout();
+            this.SuspendLayout();
+            // 
+            // toolStrip1
+            // 
+            this.toolStrip1.GripStyle = System.Windows.Forms.ToolStripGripStyle.Hidden;
+            this.toolStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
+            this.BackButton,
+            this.FwdButton,
+            this.UrlTextBox,
+            this.LoadUrlButton,
+            this.toolStripSeparator1,
+            this.LoadGoogleButton,
+            this.JSHelloWorldButton,
+            this.JSTestPageButton,
+            this.VisitDomButton,
+            this.CountFramesButton,
+            this.ShowDevToolsButton,
+            this.CreditsButton,
+            this.miscDropDownButton,
+            this.printButton});
+            this.toolStrip1.Location = new System.Drawing.Point(0, 0);
+            this.toolStrip1.Name = "toolStrip1";
+            this.toolStrip1.Size = new System.Drawing.Size(1441, 25);
+            this.toolStrip1.TabIndex = 0;
+            this.toolStrip1.Text = "toolStrip1";
+            // 
+            // BackButton
+            // 
+            this.BackButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.BackButton.Image = ((System.Drawing.Image)(resources.GetObject("BackButton.Image")));
+            this.BackButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.BackButton.Name = "BackButton";
+            this.BackButton.Size = new System.Drawing.Size(36, 22);
+            this.BackButton.Text = "Back";
+            this.BackButton.Click += new System.EventHandler(this.BackButton_Click);
+            // 
+            // FwdButton
+            // 
+            this.FwdButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.FwdButton.Image = ((System.Drawing.Image)(resources.GetObject("FwdButton.Image")));
+            this.FwdButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.FwdButton.Name = "FwdButton";
+            this.FwdButton.Size = new System.Drawing.Size(33, 22);
+            this.FwdButton.Text = "Fwd";
+            this.FwdButton.Click += new System.EventHandler(this.FwdButton_Click);
+            // 
+            // UrlTextBox
+            // 
+            this.UrlTextBox.Name = "UrlTextBox";
+            this.UrlTextBox.Size = new System.Drawing.Size(400, 25);
+            this.UrlTextBox.Click += new System.EventHandler(this.UrlTextBox_Click);
+            // 
+            // LoadUrlButton
+            // 
+            this.LoadUrlButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.LoadUrlButton.Image = ((System.Drawing.Image)(resources.GetObject("LoadUrlButton.Image")));
+            this.LoadUrlButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.LoadUrlButton.Name = "LoadUrlButton";
+            this.LoadUrlButton.Size = new System.Drawing.Size(52, 22);
+            this.LoadUrlButton.Text = "LoadUrl";
+            // 
+            // toolStripSeparator1
+            // 
+            this.toolStripSeparator1.Name = "toolStripSeparator1";
+            this.toolStripSeparator1.Size = new System.Drawing.Size(6, 25);
+            // 
+            // LoadGoogleButton
+            // 
+            this.LoadGoogleButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.LoadGoogleButton.Image = ((System.Drawing.Image)(resources.GetObject("LoadGoogleButton.Image")));
+            this.LoadGoogleButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.LoadGoogleButton.Name = "LoadGoogleButton";
+            this.LoadGoogleButton.Size = new System.Drawing.Size(104, 22);
+            this.LoadGoogleButton.Text = "Load google.com";
+            this.LoadGoogleButton.Click += new System.EventHandler(this.LoadGoogleButton_Click);
+            // 
+            // JSHelloWorldButton
+            // 
+            this.JSHelloWorldButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.JSHelloWorldButton.Image = ((System.Drawing.Image)(resources.GetObject("JSHelloWorldButton.Image")));
+            this.JSHelloWorldButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.JSHelloWorldButton.Name = "JSHelloWorldButton";
+            this.JSHelloWorldButton.Size = new System.Drawing.Size(81, 22);
+            this.JSHelloWorldButton.Text = "JSHelloWorld";
+            // 
+            // JSTestPageButton
+            // 
+            this.JSTestPageButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.JSTestPageButton.Image = ((System.Drawing.Image)(resources.GetObject("JSTestPageButton.Image")));
+            this.JSTestPageButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.JSTestPageButton.Name = "JSTestPageButton";
+            this.JSTestPageButton.Size = new System.Drawing.Size(103, 22);
+            this.JSTestPageButton.Text = "Load JS Test Page";
+            // 
+            // VisitDomButton
+            // 
+            this.VisitDomButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.VisitDomButton.Image = ((System.Drawing.Image)(resources.GetObject("VisitDomButton.Image")));
+            this.VisitDomButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.VisitDomButton.Name = "VisitDomButton";
+            this.VisitDomButton.Size = new System.Drawing.Size(64, 22);
+            this.VisitDomButton.Text = "Visit DOM";
+            // 
+            // CountFramesButton
+            // 
+            this.CountFramesButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.CountFramesButton.Image = ((System.Drawing.Image)(resources.GetObject("CountFramesButton.Image")));
+            this.CountFramesButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.CountFramesButton.Name = "CountFramesButton";
+            this.CountFramesButton.Size = new System.Drawing.Size(85, 22);
+            this.CountFramesButton.Text = "Count Frames";
+            this.CountFramesButton.Click += new System.EventHandler(this.CountFramesButton_Click);
+            // 
+            // ShowDevToolsButton
+            // 
+            this.ShowDevToolsButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.ShowDevToolsButton.Image = ((System.Drawing.Image)(resources.GetObject("ShowDevToolsButton.Image")));
+            this.ShowDevToolsButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.ShowDevToolsButton.Name = "ShowDevToolsButton";
+            this.ShowDevToolsButton.Size = new System.Drawing.Size(88, 22);
+            this.ShowDevToolsButton.Text = "ShowDevTools";
+            this.ShowDevToolsButton.Click += new System.EventHandler(this.ShowDevToolsButton_Click);
+            // 
+            // CreditsButton
+            // 
+            this.CreditsButton.Alignment = System.Windows.Forms.ToolStripItemAlignment.Right;
+            this.CreditsButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.CreditsButton.Image = ((System.Drawing.Image)(resources.GetObject("CreditsButton.Image")));
+            this.CreditsButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.CreditsButton.Name = "CreditsButton";
+            this.CreditsButton.Size = new System.Drawing.Size(80, 22);
+            this.CreditsButton.Text = "about:credits";
+            this.CreditsButton.Click += new System.EventHandler(this.CreditsButton_Click);
+            // 
+            // miscDropDownButton
+            // 
+            this.miscDropDownButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.miscDropDownButton.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
+            this.systemNetCompatibilityTestToolStripMenuItem,
+            this.clearContextMenuModelToolStripMenuItem,
+            this.remoteLayerStressTestToolStripMenuItem,
+            this.evaluateJavascriptToolStripMenuItem,
+            this.executeSleepFunctionToolStripMenuItem,
+            this.toggleFindToolbarToolStripMenuItem,
+            this.evaluateJavascriptSynchronouslyToolStripMenuItem,
+            this.executeArrayTestFunctionToolStripMenuItem,
+            this.listKeysInDocumentObjectToolStripMenuItem,
+            this.setBrowserInvisibleToolStripMenuItem});
+            this.miscDropDownButton.Image = ((System.Drawing.Image)(resources.GetObject("miscDropDownButton.Image")));
+            this.miscDropDownButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.miscDropDownButton.Name = "miscDropDownButton";
+            this.miscDropDownButton.Size = new System.Drawing.Size(45, 22);
+            this.miscDropDownButton.Text = "Misc";
+            // 
+            // systemNetCompatibilityTestToolStripMenuItem
+            // 
+            this.systemNetCompatibilityTestToolStripMenuItem.Name = "systemNetCompatibilityTestToolStripMenuItem";
+            this.systemNetCompatibilityTestToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.systemNetCompatibilityTestToolStripMenuItem.Text = "System.Net compatibility test";
+            this.systemNetCompatibilityTestToolStripMenuItem.Click += new System.EventHandler(this.systemNetCompatibilityTestToolStripMenuItem_Click);
+            // 
+            // clearContextMenuModelToolStripMenuItem
+            // 
+            this.clearContextMenuModelToolStripMenuItem.CheckOnClick = true;
+            this.clearContextMenuModelToolStripMenuItem.Name = "clearContextMenuModelToolStripMenuItem";
+            this.clearContextMenuModelToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.clearContextMenuModelToolStripMenuItem.Text = "Clear context menu model";
+            this.clearContextMenuModelToolStripMenuItem.Click += new System.EventHandler(this.clearContextMenuModelToolStripMenuItem_Click);
+            // 
+            // remoteLayerStressTestToolStripMenuItem
+            // 
+            this.remoteLayerStressTestToolStripMenuItem.Name = "remoteLayerStressTestToolStripMenuItem";
+            this.remoteLayerStressTestToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.remoteLayerStressTestToolStripMenuItem.Text = "Remote Layer Stress Test";
+            this.remoteLayerStressTestToolStripMenuItem.Click += new System.EventHandler(this.remoteLayerStressTestToolStripMenuItem_Click);
+            // 
+            // evaluateJavascriptToolStripMenuItem
+            // 
+            this.evaluateJavascriptToolStripMenuItem.Name = "evaluateJavascriptToolStripMenuItem";
+            this.evaluateJavascriptToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.evaluateJavascriptToolStripMenuItem.Text = "Evaluate Javascript";
+            this.evaluateJavascriptToolStripMenuItem.Click += new System.EventHandler(this.evaluateJavascriptToolStripMenuItem_Click);
+            // 
+            // executeSleepFunctionToolStripMenuItem
+            // 
+            this.executeSleepFunctionToolStripMenuItem.Name = "executeSleepFunctionToolStripMenuItem";
+            this.executeSleepFunctionToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.executeSleepFunctionToolStripMenuItem.Text = "Execute SleepFunction";
+            this.executeSleepFunctionToolStripMenuItem.Click += new System.EventHandler(this.executeSleepFunctionToolStripMenuItem_Click);
+            // 
+            // toggleFindToolbarToolStripMenuItem
+            // 
+            this.toggleFindToolbarToolStripMenuItem.Name = "toggleFindToolbarToolStripMenuItem";
+            this.toggleFindToolbarToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.toggleFindToolbarToolStripMenuItem.Text = "Toggle Find Toolbar";
+            this.toggleFindToolbarToolStripMenuItem.Click += new System.EventHandler(this.toggleFindToolbarToolStripMenuItem_Click);
+            // 
+            // evaluateJavascriptSynchronouslyToolStripMenuItem
+            // 
+            this.evaluateJavascriptSynchronouslyToolStripMenuItem.Name = "evaluateJavascriptSynchronouslyToolStripMenuItem";
+            this.evaluateJavascriptSynchronouslyToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.evaluateJavascriptSynchronouslyToolStripMenuItem.Text = "EvaluateJavascript Synchronously";
+            this.evaluateJavascriptSynchronouslyToolStripMenuItem.Click += new System.EventHandler(this.evaluateJavascriptSynchronouslyToolStripMenuItem_Click);
+            // 
+            // executeArrayTestFunctionToolStripMenuItem
+            // 
+            this.executeArrayTestFunctionToolStripMenuItem.Name = "executeArrayTestFunctionToolStripMenuItem";
+            this.executeArrayTestFunctionToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.executeArrayTestFunctionToolStripMenuItem.Text = "Execute Array Test Function";
+            this.executeArrayTestFunctionToolStripMenuItem.Click += new System.EventHandler(this.executeArrayTestFunctionToolStripMenuItem_Click);
+            // 
+            // listKeysInDocumentObjectToolStripMenuItem
+            // 
+            this.listKeysInDocumentObjectToolStripMenuItem.Name = "listKeysInDocumentObjectToolStripMenuItem";
+            this.listKeysInDocumentObjectToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.listKeysInDocumentObjectToolStripMenuItem.Text = "List keys in document object";
+            this.listKeysInDocumentObjectToolStripMenuItem.Click += new System.EventHandler(this.listKeysInDocumentObjectToolStripMenuItem_Click);
+            // 
+            // printButton
+            // 
+            this.printButton.Alignment = System.Windows.Forms.ToolStripItemAlignment.Right;
+            this.printButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Text;
+            this.printButton.Image = ((System.Drawing.Image)(resources.GetObject("printButton.Image")));
+            this.printButton.ImageTransparentColor = System.Drawing.Color.Magenta;
+            this.printButton.Name = "printButton";
+            this.printButton.Size = new System.Drawing.Size(36, 22);
+            this.printButton.Text = "Print";
+            this.printButton.Click += new System.EventHandler(this.printButton_Click);
+            // 
+            // splitContainer1
+            // 
+            this.splitContainer1.Dock = System.Windows.Forms.DockStyle.Fill;
+            this.splitContainer1.Location = new System.Drawing.Point(0, 0);
+            this.splitContainer1.Name = "splitContainer1";
+            // 
+            // splitContainer1.Panel1
+            // 
+            this.splitContainer1.Panel1.Controls.Add(this.WebBrowser);
+            this.splitContainer1.Panel2Collapsed = true;
+            this.splitContainer1.Size = new System.Drawing.Size(1441, 605);
+            this.splitContainer1.SplitterDistance = 873;
+            this.splitContainer1.TabIndex = 3;
+            // 
+            // WebBrowser
+            // 
+            this.WebBrowser.BackColor = System.Drawing.Color.White;
+            this.WebBrowser.Dock = System.Windows.Forms.DockStyle.Fill;
+            this.WebBrowser.Location = new System.Drawing.Point(0, 0);
+            this.WebBrowser.Name = "WebBrowser";
+            this.WebBrowser.RemoteCallbackInvokeMode = Chromium.WebBrowser.JSInvokeMode.Inherit;
+            this.WebBrowser.Size = new System.Drawing.Size(1441, 605);
+            this.WebBrowser.TabIndex = 2;
+            this.WebBrowser.Text = "cfxWebBrowser2";
+            // 
+            // splitContainer2
+            // 
+            this.splitContainer2.Dock = System.Windows.Forms.DockStyle.Fill;
+            this.splitContainer2.Location = new System.Drawing.Point(0, 25);
+            this.splitContainer2.Name = "splitContainer2";
+            this.splitContainer2.Orientation = System.Windows.Forms.Orientation.Horizontal;
+            // 
+            // splitContainer2.Panel1
+            // 
+            this.splitContainer2.Panel1.Controls.Add(this.splitContainer1);
+            // 
+            // splitContainer2.Panel2
+            // 
+            this.splitContainer2.Panel2.Controls.Add(this.LogTextBox);
+            this.splitContainer2.Size = new System.Drawing.Size(1441, 775);
+            this.splitContainer2.SplitterDistance = 605;
+            this.splitContainer2.TabIndex = 4;
+            // 
+            // LogTextBox
+            // 
+            this.LogTextBox.Dock = System.Windows.Forms.DockStyle.Fill;
+            this.LogTextBox.Location = new System.Drawing.Point(0, 0);
+            this.LogTextBox.Multiline = true;
+            this.LogTextBox.Name = "LogTextBox";
+            this.LogTextBox.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
+            this.LogTextBox.Size = new System.Drawing.Size(1441, 166);
+            this.LogTextBox.TabIndex = 0;
+            // 
+            // setBrowserInvisibleToolStripMenuItem
+            // 
+            this.setBrowserInvisibleToolStripMenuItem.Name = "setBrowserInvisibleToolStripMenuItem";
+            this.setBrowserInvisibleToolStripMenuItem.Size = new System.Drawing.Size(250, 22);
+            this.setBrowserInvisibleToolStripMenuItem.Text = "Set browser invisible";
+            this.setBrowserInvisibleToolStripMenuItem.Click += new System.EventHandler(this.setBrowserInvisibleToolStripMenuItem_Click);
+            // 
+            // BrowserForm
+            // 
+            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
+            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
+            this.ClientSize = new System.Drawing.Size(1441, 800);
+            this.Controls.Add(this.splitContainer2);
+            this.Controls.Add(this.toolStrip1);
+            this.Name = "BrowserForm";
+            this.Text = "BrowserForm";
+            this.toolStrip1.ResumeLayout(false);
+            this.toolStrip1.PerformLayout();
+            this.splitContainer1.Panel1.ResumeLayout(false);
+            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).EndInit();
+            this.splitContainer1.ResumeLayout(false);
+            this.splitContainer2.Panel1.ResumeLayout(false);
+            this.splitContainer2.Panel2.ResumeLayout(false);
+            this.splitContainer2.Panel2.PerformLayout();
+            ((System.ComponentModel.ISupportInitialize)(this.splitContainer2)).EndInit();
+            this.splitContainer2.ResumeLayout(false);
+            this.ResumeLayout(false);
+            this.PerformLayout();
+
+        }
+
+        #endregion
+
+        private System.Windows.Forms.ToolStrip toolStrip1;
+        private System.Windows.Forms.ToolStripButton BackButton;
+        private System.Windows.Forms.ToolStripButton FwdButton;
+        private System.Windows.Forms.ToolStripTextBox UrlTextBox;
+        private System.Windows.Forms.ToolStripButton LoadUrlButton;
+        private System.Windows.Forms.ToolStripSeparator toolStripSeparator1;
+        private System.Windows.Forms.ToolStripButton JSTestPageButton;
+        private System.Windows.Forms.ToolStripButton VisitDomButton;
+        public Chromium.WebBrowser.ChromiumWebBrowser WebBrowser;
+        private System.Windows.Forms.SplitContainer splitContainer1;
+        private System.Windows.Forms.SplitContainer splitContainer2;
+        private System.Windows.Forms.TextBox LogTextBox;
+        private System.Windows.Forms.ToolStripButton CountFramesButton;
+        private System.Windows.Forms.ToolStripButton ShowDevToolsButton;
+        private System.Windows.Forms.ToolStripButton CreditsButton;
+        private System.Windows.Forms.ToolStripButton LoadGoogleButton;
+        private System.Windows.Forms.ToolStripDropDownButton miscDropDownButton;
+        private System.Windows.Forms.ToolStripMenuItem systemNetCompatibilityTestToolStripMenuItem;
+        private System.Windows.Forms.ToolStripButton printButton;
+        private System.Windows.Forms.ToolStripButton JSHelloWorldButton;
+        private System.Windows.Forms.ToolStripMenuItem clearContextMenuModelToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem remoteLayerStressTestToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem evaluateJavascriptToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem executeSleepFunctionToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem toggleFindToolbarToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem evaluateJavascriptSynchronouslyToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem executeArrayTestFunctionToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem listKeysInDocumentObjectToolStripMenuItem;
+        private System.Windows.Forms.ToolStripMenuItem setBrowserInvisibleToolStripMenuItem;
+    }
+}
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/BrowserForm.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/BrowserForm.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,554 @@
+// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+
+using System;
+using System.Windows.Forms;
+using System.Diagnostics;
+
+using Chromium;
+using Chromium.Event;
+using Chromium.Remote;
+using Chromium.Remote.Event;
+using Chromium.WebBrowser;
+using System.Threading;
+using System.Collections.Generic;
+
+namespace CfxTestApplication {
+    public partial class BrowserForm : Form {
+
+        public BrowserForm() {
+            InitializeComponent();
+
+            LogWriteLine("CfxRuntime.ApiHash(0): " + CfxRuntime.ApiHash(0));
+            LogWriteLine("CfxRuntime.ApiHash(1): " + CfxRuntime.ApiHash(1));
+            LogWriteLine("CfxRuntime.GetCefVersion(): " + CfxRuntime.GetCefVersion());
+            LogWriteLine("CfxRuntime.GetChromeVersion(): " + CfxRuntime.GetChromeVersion());
+            LogWriteLine("Platform OS: {0}; Arch: {1}", CfxRuntime.PlatformOS, CfxRuntime.PlatformArch);
+            LogWriteLine();
+
+            ChromiumWebBrowser.RemoteProcessCreated += (e) => {
+                LogWriteLine("Remote render process created with process id {0}", CfxRemoteCallContext.CurrentContext.ProcessId, CfxRemoteCallContext.CurrentContext.ThreadId);
+                e.RenderProcessHandler.OnRenderThreadCreated += (s, e1) => {
+                    LogWriteLine("RenderProcessHandler.OnRenderThreadCreated, process id = {0}", CfxRemoteCallContext.CurrentContext.ProcessId);
+                };
+                e.RenderProcessHandler.OnBrowserDestroyed += (s, e1) => {
+                    // this is never reached. 
+                    LogWriteLine("RenderProcessHandler.OnBrowserDestroyed, process id = {0}, browser id = {1}", CfxRemoteCallContext.CurrentContext.ProcessId, e1.Browser.Identifier);
+                };
+                e.RenderProcessHandler.OnBrowserCreated += (s, e1) => {
+                    LogWriteLine("RenderProcessHandler.OnBrowserCreated, process id = {0}, browser id = {1}", CfxRemoteCallContext.CurrentContext.ProcessId, e1.Browser.Identifier);
+                };
+            };
+
+            LoadUrlButton.Click += new EventHandler(LoadUrlButton_Click);
+            UrlTextBox.KeyDown += new KeyEventHandler(UrlTextBox_KeyDown);
+
+            JSHelloWorldButton.Click += new EventHandler(JSHelloWorldButton_Click);
+            JSTestPageButton.Click += new EventHandler(TestButton_Click);
+            VisitDomButton.Click += new EventHandler(VisitDomButton_Click);
+
+            WebBrowser.GlobalObject.AddFunction("CfxHelloWorld").Execute += CfxHelloWorld_Execute;
+            WebBrowser.GlobalObject.AddFunction("testDoubleCallback").Execute += TestDoubleCallback_Execute;
+
+            // related to issue #65
+            WebBrowser.GlobalObject.AddFunction("ArrayTestCallback").Execute += (s, e1) => {
+                var array = e1.Arguments[0];
+                var v0 = array.GetValue(0);
+                var v1 = array.GetValue(1);
+                if(v0 != null) {
+                    LogWriteLine("Array test function works: v0 = {0}, v1 = {1}", v0.IntValue, v1.IntValue);
+                } else {
+                    LogWriteLine("Array test function: array is broken.");
+                }
+            };
+
+            // related to pull request #1
+            WebBrowser.GlobalObject.AddFunction("ListKeysInDocumentObject").Execute += (s, e1) => {
+                var doc = e1.Arguments[0];
+                List<string> keys = new List<string>();
+                if(doc.GetKeys(keys)) {
+                    LogWriteLine("document has {0} keys:", keys.Count);
+                    keys.ForEach(k => LogWriteLine(k));
+                } else {
+                    LogWriteLine("GetKeys returned false.");
+                }
+            };
+
+            WebBrowser.GlobalObject.Add("TestObject", new JsTestObject(this));
+
+
+            var sleepFunction = new JSFunction(JSInvokeMode.DontInvoke);
+            sleepFunction.Execute += (s, e) => {
+                LogWriteLine("Sleep function: sleep 5 seconds...");
+                Thread.Sleep(5000);
+                try {
+                    var x = e.Arguments[0].IntValue;
+                    LogWriteLine("Sleep function: Event args accessed sucessfully.");
+                } catch(Exception ex) {
+                    LogWriteLine("Sleep function: Error accessing event args:");
+                    LogWriteLine(ex.ToString());
+                }
+            };
+
+            WebBrowser.GlobalObject.Add("SleepFunction", sleepFunction);
+
+            var html = @"
+
+                <html>
+                <head><script>
+                    function testlog(text) {
+                        document.getElementById('testfunc_result').innerHTML += '<br>' + text;
+                    }
+                </script>
+                <script>
+                    function doubleCallback(arg1, arg2) {
+                        testlog('Function doubleCallback() called. Arguments:');
+                        testlog(arg1);
+                        testlog(arg2);
+                        return 'This text is returned from doubleCallback()';
+                    }
+                    function clearTestLog() {
+                        document.getElementById('testfunc_result').innerHTML = '';
+                    }
+                </script>
+                </head>
+                <body>
+                    <br><br><b>Local resource/javascript integration test page.</b>
+                    <hr><br><br>
+                    Local resource image:<br>
+                    <img src='http://localresource/image'><br><br>
+                    <a href='http://www.google.com/' onclick=""window.open('http://www.google.com/', 'Popup test', 'width=800,height=600,scrollbars=yes'); return false;"">open popup window.open</a>
+                    <a href='http://www.google.com/' target=blank>open popup target=blank</a>
+                    <br><br>
+                    <button id='testbutton1' onclick=""document.getElementById('testfunc_result').innerHTML += '<br>' + CfxHelloWorld('this is the hello world function');"">Execute CfxHelloWorld()</button>
+                    <button id='testbutton2' onclick=""
+                        testlog('TestObject = ' + TestObject);
+                        testlog('TestObject.testFunction = ' + TestObject.testFunction);
+                        TestObject.testFunction('this is the test function');
+                    "">Execute TestObject.testFunction()</button>
+                    <button id='testbutton3' onclick=""
+                        testlog('TestObject = ' + TestObject);
+                        testlog('TestObject.anotherObject = ' + TestObject.anotherObject);
+                        testlog('TestObject.anotherObject.anotherTestFunction = ' + TestObject.anotherObject.anotherTestFunction);
+                        testlog(TestObject.anotherObject.anotherTestFunction('this is the other test function'));
+                    "">Execute TestObject.anotherObject.anotherTestFunction()</button>
+                    <button id='testbutton4' onclick=""
+                        testlog('TestObject.dynamicProperty = ' + TestObject.dynamicProperty);
+                        testlog('(define TestObject.dynamicProperty += 100)');
+                        TestObject.dynamicProperty += 100;
+                        testlog('TestObject.dynamicProperty = ' + TestObject.dynamicProperty);
+                    "">Defined TestObject properties</button>
+                    <button id='testbutton5' onclick=""
+                        testlog('TestObject.foo = ' + TestObject.foo);
+                        testlog('(define TestObject.foo = 100)');
+                        TestObject.foo = 100;
+                        testlog('TestObject.foo = ' + TestObject.foo);
+                    "">Undefined TestObject properties</button>
+                    <button id='testbutton6' onclick=""
+                        testlog('Call native function testDoubleCallback(doubleCallback). Return value:');
+                        testlog('Return value: ' + testDoubleCallback(doubleCallback));
+                    "">Double Callback</button>
+                    <br><br><div id='testfunc_result'></div>
+            ";
+
+            WebBrowser.SetWebResource("http://localresource/text.html", new Chromium.WebBrowser.WebResource(html));
+
+            var bm = new System.Drawing.Bitmap(100, 100);
+            using(var g = System.Drawing.Graphics.FromImage(bm)) {
+                g.FillRectangle(System.Drawing.Brushes.Yellow, 0, 0, 99, 99);
+                g.DrawRectangle(System.Drawing.Pens.Black, 0, 0, 99, 99);
+                g.DrawLine(System.Drawing.Pens.Black, 0, 0, 99, 99);
+            }
+            WebBrowser.SetWebResource("http://localresource/image", new Chromium.WebBrowser.WebResource(bm));
+
+            WebBrowser.DisplayHandler.OnConsoleMessage += (s, e) => LogCallback(s, e);
+            WebBrowser.DisplayHandler.OnTitleChange += (s, e) => LogCallback(s, e);
+            WebBrowser.DisplayHandler.OnStatusMessage += (s, e) => LogCallback(s, e);
+
+            WebBrowser.LifeSpanHandler.OnBeforePopup += (s, e) => {
+                LogCallback(s, e);
+                var ff = e.PopupFeatures.AdditionalFeatures;
+                if(ff != null)
+                    foreach(var f in ff) {
+                        LogWriteLine("Additional popup feature: {0}", f);
+                    }
+            };
+
+            WebBrowser.LoadHandler.OnLoadingStateChange += (s, e) => {
+                if(e.IsLoading) return;
+                BeginInvoke((MethodInvoker)(() => {
+                    UrlTextBox.Text = WebBrowser.Url.ToString();
+                }));
+            };
+
+            WebBrowser.LoadUrl("http://localresource/text.html");
+
+            WebBrowser.FindToolbar.Visible = true;
+
+            WebBrowser.OnV8ContextCreated += (s, e) => {
+                if(e.Frame.IsMain) {
+                    CfrV8Value retval;
+                    CfrV8Exception exception;
+                    if(e.Context.Eval("CfxHelloWorld()", out retval, out exception)) {
+                        LogWriteLine("OnV8ContextCreated: Eval succeeded, retval is '{0}'", retval.StringValue);
+                    } else {
+                        LogWriteLine("OnV8ContextCreated: Eval failed, exception is '{0}'", exception.Message);
+                    }
+                }
+            };
+
+        }
+
+
+        void VisitDomButton_Click(object sender, EventArgs e) {
+            var retval = WebBrowser.VisitDom(VisitDOMCallback);
+            if(!retval) LogWriteLine("Remote browser not available");
+        }
+
+        void VisitDOMCallback(CfrDomDocument doc, CfrBrowser browser) {
+            LogCallback(doc, browser);
+            if(doc.Body.HasChildren)
+                LogWriteLine("DOM: document.Body.FirstChild.ElementTagName = " + doc.Body.FirstChild.ElementTagName);
+            if(doc.HasSelection) {
+                LogWriteLine("DOM: document.SelectionAsText = " + doc.SelectionAsText);
+            }
+        }
+
+
+        void JSHelloWorldButton_Click(object sender, EventArgs e) {
+            WebBrowser.EvaluateJavascript("var test = 10; var result = CfxHelloWorld(test, 'foo'); document.body.innerHTML = result;", HelloWorldResult);
+        }
+
+        void HelloWorldResult(CfrV8Value retval, CfrV8Exception ex) {
+            LogCallback(retval, ex);
+        }
+
+        void CfxHelloWorld_Execute(object sender, CfrV8HandlerExecuteEventArgs e) {
+
+            if(e.Arguments.Length > 1) {
+                var r1 = e.Arguments[0].IntValue;
+                var r2 = e.Arguments[1].StringValue;
+                LogWriteLine("CfxHelloWorld_Execute arguments: " + r1 + ", '" + r2 + "'");
+            }
+            LogCallback(sender, e);
+            var context = CfrV8Context.GetEnteredContext();
+            e.SetReturnValue("CfxHelloWorld returns this text.");
+
+        }
+
+        void TestDoubleCallback_Execute(object sender, CfrV8HandlerExecuteEventArgs e) {
+            var doubleCallback = e.Arguments[0];
+            var args = new CfrV8Value[] {
+                "This is the first argument",
+                123.4567
+            };
+            var retval = doubleCallback.ExecuteFunction(null, args);
+            e.SetReturnValue(retval);
+        }
+
+        void UrlTextBox_KeyDown(object sender, KeyEventArgs e) {
+            if(e.KeyCode == Keys.Return)
+                LoadUrlButton.PerformClick();
+        }
+
+        void LoadUrlButton_Click(object sender, EventArgs e) {
+            WebBrowser.LoadUrl(UrlTextBox.Text);
+        }
+
+        private void TestButton_Click(object sender, EventArgs e) {
+            UrlTextBox.Text = "http://localresource/text.html";
+            LoadUrlButton.PerformClick();
+
+        }
+
+        private void CountFramesButton_Click(object sender, EventArgs e) {
+            var b = WebBrowser.Browser;
+            LogWriteLine("WebBrowser.Browser.FrameCount = " + b.FrameCount);
+            var ids = b.FrameIdentifiers;
+            LogWriteLine("FrameIdentifiers: " + string.Join<long>(", ", ids));
+            var names = b.GetFrameNames();
+            LogWriteLine("FrameNames: " + string.Join(" | ", names));
+        }
+
+        void LogCallback(params object[] parameters) {
+
+            var callee = new StackFrame(1, false).GetMethod();
+            System.Text.StringBuilder sb = new System.Text.StringBuilder();
+            sb.Append("Callback: ");
+            sb.Append(callee.Name);
+            sb.Append("(");
+            var pm = callee.GetParameters();
+            for(var i = 0; i <= pm.Length - 1; i++) {
+                sb.Append(pm[i].Name);
+                if(parameters.Length > i) {
+                    sb.Append(" = {");
+                    if(parameters[i] != null) {
+                        sb.Append(parameters[i].ToString());
+                    } else {
+                        sb.Append("null");
+                    }
+                    sb.Append("}");
+                }
+                if(i < pm.Length - 1) {
+                    sb.Append(", ");
+                }
+            }
+            sb.Append(")");
+            LogWriteLine(sb.ToString());
+        }
+
+
+        public void LogWriteLine() {
+            LogWrite(Environment.NewLine);
+        }
+
+        public void LogWriteLine(string msg) {
+            LogWrite(msg + Environment.NewLine);
+        }
+
+        public void LogWriteLine(string msg, params object[] parameters) {
+            LogWrite(msg + Environment.NewLine, parameters);
+        }
+
+        public void LogWrite(string msg, params object[] parameters) {
+            LogWrite(string.Format(msg, parameters));
+        }
+
+        public void LogWrite(string msg) {
+
+            if(InvokeRequired) {
+                Invoke((MethodInvoker)(() => { LogWrite("(*)" + msg); }));
+                return;
+            }
+
+            LogTextBox.AppendText(msg);
+            LogTextBox.SelectionStart = LogTextBox.TextLength - 1;
+            LogTextBox.ScrollToCaret();
+
+        }
+
+        private void ShowDevToolsButton_Click(object sender, EventArgs e) {
+
+            CfxWindowInfo windowInfo = new CfxWindowInfo();
+
+            windowInfo.Style = WindowStyle.WS_OVERLAPPEDWINDOW | WindowStyle.WS_CLIPCHILDREN | WindowStyle.WS_CLIPSIBLINGS | WindowStyle.WS_VISIBLE;
+            windowInfo.ParentWindow = IntPtr.Zero;
+            windowInfo.WindowName = "Dev Tools";
+            windowInfo.X = 200;
+            windowInfo.Y = 200;
+            windowInfo.Width = 800;
+            windowInfo.Height = 600;
+
+            WebBrowser.BrowserHost.ShowDevTools(windowInfo, new CfxClient(), new CfxBrowserSettings(), null);
+
+        }
+
+        private void CreditsButton_Click(object sender, EventArgs e) {
+            WebBrowser.LoadUrl("about:credits");
+        }
+
+        private void BackButton_Click(object sender, EventArgs e) {
+            WebBrowser.GoBack();
+        }
+
+        private void FwdButton_Click(object sender, EventArgs e) {
+            WebBrowser.GoForward();
+        }
+
+        private void UrlTextBox_Click(object sender, EventArgs e) {
+
+        }
+
+        private void LoadGoogleButton_Click(object sender, EventArgs e) {
+            WebBrowser.LoadUrl("google.com");
+        }
+
+        private void systemNetCompatibilityTestToolStripMenuItem_Click(object sender, EventArgs e) {
+            HttpWebResponseCompatTest.Test();
+        }
+
+        private void printButton_Click(object sender, EventArgs e) {
+            WebBrowser.BrowserHost.Print();
+        }
+
+        private void clearContextMenuModelToolStripMenuItem_Click(object sender, EventArgs e) {
+            if(clearContextMenuModelToolStripMenuItem.Checked) {
+                WebBrowser.ContextMenuHandler.OnBeforeContextMenu += ContextMenuHandler_OnBeforeContextMenu;
+            } else {
+                WebBrowser.ContextMenuHandler.OnBeforeContextMenu -= ContextMenuHandler_OnBeforeContextMenu;
+            }
+        }
+
+        void ContextMenuHandler_OnBeforeContextMenu(object sender, CfxOnBeforeContextMenuEventArgs e) {
+            if(e.Model.Clear()) {
+                LogWriteLine("Context Menu cleared.");
+            } else {
+                LogWriteLine("Context Menu not cleared.");
+            }
+        }
+
+        private void remoteLayerStressTestToolStripMenuItem_Click(object sender, EventArgs e) {
+
+            if(Debugger.IsAttached) {
+                var answer = MessageBox.Show("Running this function with an debugger attached might perform very badly, especially if native debugging is enabled. Continue anyway?", "Attached debugger detected", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
+                if(answer == DialogResult.Cancel) return;
+            }
+
+            var t = new Thread(RemoteLayerStressTest);
+            t.IsBackground = true;
+            t.Name = "stress test";
+            t.Start();
+        }
+
+        private void RemoteLayerStressTest() {
+
+            for(int i = 0; i < 100; ++i) {
+
+                WebBrowser.ExecuteJavascript("document.getElementById('testbutton1').click()");
+
+                WebBrowser.ExecuteJavascript("document.getElementById('testbutton2').click()");
+
+                WebBrowser.EvaluateJavascript("document.getElementById('testbutton3').click()", (value, exception) => {
+                    LogWriteLine("document.getElementById('testbutton3').click()");
+                    LogWriteLine(value.StringValue);
+                });
+
+                WebBrowser.ExecuteJavascript("document.getElementById('testbutton4').click()");
+
+                WebBrowser.EvaluateJavascript("document.getElementById('testbutton5').click()", (value, exception) => {
+                    LogWriteLine("document.getElementById('testbutton5').click()");
+                    LogWriteLine(value.StringValue);
+                });
+
+                WebBrowser.ExecuteJavascript("document.getElementById('testbutton6').click()");
+
+                WebBrowser.EvaluateJavascript("doubleCallback('foo', 123)", (value, exception) => {
+                    LogWriteLine("doubleCallback('foo', 123)");
+                    LogWriteLine(value.StringValue);
+                });
+
+                WebBrowser.VisitDom((doc, b) => {
+                    LogWriteLine("VisitDom {0} {1}", doc.ToString(), b.ToString());
+                    LogWriteLine("testbutton6", doc.GetElementById("testbutton6").AsMarkup);
+                });
+
+                // give the browser some time to render and do message loop work
+                //Thread.Sleep(20);
+
+            }
+        }
+
+        private void evaluateJavascriptToolStripMenuItem_Click(object sender, EventArgs e) {
+            LogWriteLine("Request evaluation for [document.body.scrollWidth, document.body.scrollHeight]");
+            var retval = WebBrowser.EvaluateJavascript("[document.body.scrollWidth,document.body.scrollHeight]", (value, exception) =>
+            {
+                if(value != null) {
+                    var v0 = value.GetValue(0);
+                    if(v0 == null) {
+                        MessageBox.Show("This test is broken, please refer to issue #65 in the project repo.");
+                    } else {
+                        LogWriteLine("Evaluation callback with value: scrollWidth={0}, scrollHeight={1}.",
+                        value.GetValue(0).IntValue, value.GetValue(1).IntValue);
+                    }
+                } else if(exception != null) {
+                    LogWriteLine("Evaluation callback with exception: {0}.", exception.Message);
+                } else {
+                    LogWriteLine("Evaluation callback with value == null && exception == null.");
+                }
+            });
+            if(!retval) {
+                LogWriteLine("WebBrowser.EvaluateJavascript returned false, evaluation will not succeed.");
+            }
+        }
+
+        private void executeSleepFunctionToolStripMenuItem_Click(object sender, EventArgs e) {
+            WebBrowser.ExecuteJavascript("SleepFunction(0);");
+        }
+
+        private void toggleFindToolbarToolStripMenuItem_Click(object sender, EventArgs e) {
+            WebBrowser.FindToolbar.Visible = !WebBrowser.FindToolbar.Visible;
+        }
+
+        private void evaluateJavascriptSynchronouslyToolStripMenuItem_Click(object sender, EventArgs e) {
+
+            if(CfxRemoteCallContext.IsInContext && CfrRuntime.CurrentlyOn(CfxThreadId.Renderer)) {
+                throw new Exception("Doing this on the render thread would deadlock.");
+            }
+
+            var waitLock = new object();
+            lock(waitLock) {
+
+                string documentAllLength = null;
+
+                var evaluationStarted = WebBrowser.EvaluateJavascript("'document.all.length = ' + document.all.length", 
+                    // Don't invoke, otherwise the ui thread will deadlock!
+                    JSInvokeMode.DontInvoke, 
+                    (v, ex) => {
+                        Monitor.Enter(waitLock);
+                        try {
+                            documentAllLength = v.StringValue;
+                        } finally {
+                            Monitor.PulseAll(waitLock);
+                            Monitor.Exit(waitLock);
+                        }
+                    }
+                );
+
+                if(evaluationStarted) {
+                    var success = Monitor.Wait(waitLock, 5000);
+                    if(success) {
+                        LogWriteLine("Synchronous evaluation succeeded: {0}", documentAllLength);
+                    } else {
+                        LogWriteLine("Evaluation not finished after 5 seconds, giving up.");
+                    }
+
+                } else {
+                    LogWriteLine("Failed to start evaluation.");
+                }
+            }
+        }
+
+        private void executeArrayTestFunctionToolStripMenuItem_Click(object sender, EventArgs e) {
+            // Related to issue #65
+            WebBrowser.ExecuteJavascript("ArrayTestCallback([document.body.scrollWidth, document.body.scrollHeight])");
+        }
+
+        private void listKeysInDocumentObjectToolStripMenuItem_Click(object sender, EventArgs e) {
+            WebBrowser.ExecuteJavascript("ListKeysInDocumentObject(document)");
+        }
+
+        private void setBrowserInvisibleToolStripMenuItem_Click(object sender, EventArgs e) {
+            setBrowserInvisibleToolStripMenuItem.Checked = !setBrowserInvisibleToolStripMenuItem.Checked;
+            WebBrowser.Visible = !setBrowserInvisibleToolStripMenuItem.Checked;
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/BrowserForm.resx
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/BrowserForm.resx	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,304 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
+    <value>17, 17</value>
+  </metadata>
+  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <data name="BackButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="FwdButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="LoadUrlButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="LoadGoogleButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="JSHelloWorldButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="JSTestPageButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="VisitDomButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="CountFramesButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="ShowDevToolsButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="CreditsButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="miscDropDownButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+  <data name="printButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
+        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
+        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
+        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
+        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
+        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
+        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
+        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
+        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
+        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
+        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
+</value>
+  </data>
+</root>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/CfxTestApp.csproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/CfxTestApp.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,62 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{D2AB47D9-04A6-4598-96EB-081605302351}</ProjectGuid>
+    <OutputType>Exe</OutputType>
+    <RootNamespace>CfxTestApp</RootNamespace>
+    <AssemblyName>CfxTestApp</AssemblyName>
+    <StartupObject>CfxTestApplication.Program</StartupObject>
+    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>..\Build\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>full</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>..\Build\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+  </PropertyGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <ItemGroup>
+    <ProjectReference Include="..\ChromiumFX\ChromiumFX.csproj">
+      <Project>{C135345E-9F5A-44E5-8609-037C178FEAF0}</Project>
+      <Name>ChromiumFX</Name>
+    </ProjectReference>
+    <ProjectReference Include="..\ChromiumWebBrowser\ChromiumWebBrowser.csproj">
+      <Project>{2930E03D-89B3-427E-B86C-0B73F76FEB92}</Project>
+      <Name>ChromiumWebBrowser</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <ItemGroup>
+    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System" />
+    <Reference Include="System.Drawing" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="BrowserForm.cs">
+      <SubType>Form</SubType>
+    </Compile>
+    <Compile Include="BrowserForm.Designer.cs" />
+    <Compile Include="HttpWebResponseCompatTest.cs" />
+    <Compile Include="JsTestObject.cs" />
+    <Compile Include="Program.cs" />
+    <Compile Include="Walkthrough01.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <EmbeddedResource Include="BrowserForm.resx">
+      <LogicalName>CfxTestApplication.BrowserForm.resources</LogicalName>
+    </EmbeddedResource>
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/HttpWebResponseCompatTest.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/HttpWebResponseCompatTest.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,54 @@
+﻿// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+using System;
+using System.Net;
+
+namespace CfxTestApplication {
+
+    /// <summary>
+    /// A user wrote me about problems using HttpWebResponse along with ChromiumFX
+    /// so this is a test for his specific use case.
+    /// Turns out there is no compatibility problem so far.
+    /// </summary>
+    class HttpWebResponseCompatTest {
+        public static void Test() {
+            var request = HttpWebRequest.Create("http://www.google.com");
+            using(var response = request.GetResponse()) {
+                using(var responseStream = response.GetResponseStream()) {
+                    var reader = new System.IO.StreamReader(responseStream);
+                    var html = reader.ReadToEnd();
+                    System.Windows.Forms.MessageBox.Show(string.Format("Read {0} characters from System.Net.HttpWebResponse.", html.Length));
+                }
+            }
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/JsTestObject.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/JsTestObject.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,77 @@
+// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+
+
+using Chromium.Remote;
+using Chromium.WebBrowser;
+
+namespace CfxTestApplication {
+    class JsTestObject : JSObject {
+
+        private BrowserForm form;
+
+        internal JsTestObject(BrowserForm form) {
+            this.form = form;
+            AddFunction("testFunction").Execute += TestFunction_Execute;
+            AddObject("anotherObject").AddFunction("anotherTestFunction").Execute += AnotherTestFunction_Execute;
+
+            var p = AddDynamicProperty("dynamicProperty");
+            p.PropertyGet += dynamicProperty_PropertyGet;
+            p.PropertySet += dynamicProperty_PropertySet;
+
+        }
+
+
+        int dynamicPropertyValue;
+
+        void dynamicProperty_PropertySet(object sender, Chromium.Remote.Event.CfrV8AccessorSetEventArgs e) {
+            form.LogWriteLine("PropertySet({0}, {1})", sender, e);
+            dynamicPropertyValue = e.Value.IntValue;
+        }
+
+        void dynamicProperty_PropertyGet(object sender, Chromium.Remote.Event.CfrV8AccessorGetEventArgs e) {
+            form.LogWriteLine("PropertyGet({0}, {1})", sender, e);
+            e.Retval = CfrV8Value.CreateInt(dynamicPropertyValue);
+            e.SetReturnValue(true);
+        }
+
+        void TestFunction_Execute(object sender, Chromium.Remote.Event.CfrV8HandlerExecuteEventArgs e) {
+            form.LogWriteLine("TestFunction_Execute({0}, {1})", sender, e);
+        }
+
+        void AnotherTestFunction_Execute(object sender, Chromium.Remote.Event.CfrV8HandlerExecuteEventArgs e) {
+            form.LogWriteLine("AnotherTestFunction_Execute({0}, {1})", sender, e);
+            e.SetReturnValue("The other test function returns this text.");
+        }
+
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/Program.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/Program.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,85 @@
+// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+
+using System;
+using System.Drawing;
+using System.Windows.Forms;
+using Chromium;
+using Chromium.Event;
+using Chromium.WebBrowser;
+using System.Diagnostics;
+
+using Chromium.WebBrowser.Event;
+
+namespace CfxTestApplication {
+
+    public class Program {
+
+        [STAThread]
+        public static void Main() {
+
+            var assemblyDir = System.IO.Path.GetDirectoryName(new System.Uri(System.Reflection.Assembly.GetExecutingAssembly().CodeBase).LocalPath);
+
+            Environment.CurrentDirectory = System.IO.Path.Combine(assemblyDir, "../../../");
+
+            if(CfxRuntime.PlatformArch== CfxPlatformArch.x64)
+                CfxRuntime.LibCefDirPath = "cef/Release64";
+            else
+                CfxRuntime.LibCefDirPath = "cef/Release";
+
+            Chromium.WebBrowser.ChromiumWebBrowser.OnBeforeCfxInitialize += ChromiumWebBrowser_OnBeforeCfxInitialize;
+            ChromiumWebBrowser.OnBeforeCommandLineProcessing += ChromiumWebBrowser_OnBeforeCommandLineProcessing;
+            Chromium.WebBrowser.ChromiumWebBrowser.Initialize();
+
+            //Walkthrough01.Main();
+            //return;
+
+            Application.EnableVisualStyles();
+            var f = new BrowserForm();
+            f.Show();
+            Application.Run(f);
+
+            CfxRuntime.Shutdown();
+
+        }
+
+        static void ChromiumWebBrowser_OnBeforeCommandLineProcessing(CfxOnBeforeCommandLineProcessingEventArgs e) {
+            Console.WriteLine("ChromiumWebBrowser_OnBeforeCommandLineProcessing");
+            Console.WriteLine(e.CommandLine.CommandLineString);
+        }
+
+        static void ChromiumWebBrowser_OnBeforeCfxInitialize(OnBeforeCfxInitializeEventArgs e) {
+            e.Settings.LocalesDirPath = System.IO.Path.GetFullPath("cef/Resources/locales");
+            e.Settings.ResourcesDirPath = System.IO.Path.GetFullPath("cef/Resources");
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/CfxTestApp/Walkthrough01.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/CfxTestApp/Walkthrough01.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,115 @@
+// Copyright (c) 2014-2015 Wolfgang Borgsmüller
+// All rights reserved.
+// 
+// Redistribution and use in source and binary forms, with or without 
+// modification, are permitted provided that the following conditions 
+// are met:
+// 
+// 1. Redistributions of source code must retain the above copyright 
+//    notice, this list of conditions and the following disclaimer.
+// 
+// 2. Redistributions in binary form must reproduce the above copyright 
+//    notice, this list of conditions and the following disclaimer in the 
+//    documentation and/or other materials provided with the distribution.
+// 
+// 3. Neither the name of the copyright holder nor the names of its 
+//    contributors may be used to endorse or promote products derived 
+//    from this software without specific prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
+// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
+// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
+// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
+// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
+// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+
+
+using System;
+using System.Windows.Forms;
+using System.Drawing;
+
+using Chromium;
+using Chromium.Event;
+using Chromium.Remote;
+using Chromium.Remote.Event;
+using Chromium.WebBrowser;
+
+namespace CfxTestApplication {
+    public class Walkthrough01 {
+
+        [STAThread]
+        public static void Main() {
+
+            //CfxRuntime.LoadLibraries(@"C:\path\to\cef\directory");
+            //ChromiumWebBrowser.OnBeforeCfxInitialize += ChromiumWebBrowser_OnBeforeCfxInitialize;
+            //ChromiumWebBrowser.Initialize();
+
+            Form f = new Form();
+            f.Size = new Size(800, 600);
+
+            ChromiumWebBrowser wb = new ChromiumWebBrowser();
+            wb.Dock = DockStyle.Fill;
+
+            wb.Parent = f;
+
+            wb.GlobalObject.AddFunction("HelloApp").Execute += HelloApp_Execute;
+            wb.GlobalObject.AddFunction("DoSomething").Execute += DoSomething_Execute;
+
+
+            //wb.ExecuteJavascript("var x = HelloApp();");
+
+            var html = " <button onclick='var x = HelloApp(12345); document.getElementById(\"demo\").innerHTML =x;'>";
+            html += "Trigger HelloApp(12345) callback function.</button><br><br><img src='http://localresource/image'>";
+            html += "<br><p>Callback returned: <span id='demo'></span></p>";
+            html += "<br><br><button onclick='DoSomething();'>Do something</button>";
+            
+            var bm = new System.Drawing.Bitmap(100, 100);
+            using(var g = System.Drawing.Graphics.FromImage(bm)) {
+                g.DrawLine(System.Drawing.Pens.Black, 0, 0, 100, 100);
+            }
+
+            wb.SetWebResource("http://localresource/text.html", new Chromium.WebBrowser.WebResource(html));
+            wb.SetWebResource("http://localresource/image", new Chromium.WebBrowser.WebResource(bm));
+
+
+            f.Show();
+            wb.LoadUrl("http://localresource/text.html");
+            Application.Run(f);
+
+            CfxRuntime.Shutdown();
+
+
+        }
+
+        static void DoSomething_Execute(object sender, CfrV8HandlerExecuteEventArgs e) {
+            var f = (JSFunction)sender;
+            f.Browser.VisitDom(VisitDom);
+        }
+
+        static void VisitDom(CfrDomDocument doc, CfrBrowser browser) {
+            if(doc.Body.HasChildren)
+                MessageBox.Show("DOM document body has children!");
+        }
+
+        static void HelloApp_Execute(object sender, CfrV8HandlerExecuteEventArgs e) {
+            var numberOfArguments = e.Arguments.Length;
+            if(numberOfArguments > 0) {
+                var firstArg = e.Arguments[0].IntValue;
+                MessageBox.Show("First argument supplied: " + firstArg);
+            }
+            e.SetReturnValue(100);
+        }
+
+        static void ChromiumWebBrowser_OnBeforeCfxInitialize(CfxSettings settings, CfxBrowserProcessHandler processHandler, out CfxOnBeforeCommandLineProcessingEventHandler onBeforeCommandLineProcessingEventHandler) {
+            throw new NotImplementedException();
+        }
+
+
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/ChromiumFX/ChromiumFX.csproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/ChromiumFX/ChromiumFX.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,913 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{C135345E-9F5A-44E5-8609-037C178FEAF0}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <RootNamespace>ChromiumFX</RootNamespace>
+    <AssemblyName>ChromiumFX</AssemblyName>
+    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>..\Build\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>full</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>..\Build\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="Mono.Posix" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxAccessibilityHandler.cs">
+      <Link>Generated\CfxAccessibilityHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxApi.cs">
+      <Link>Generated\CfxApi.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxApiLoader.cs">
+      <Link>Generated\CfxApiLoader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxApp.cs">
+      <Link>Generated\CfxApp.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxAuthCallback.cs">
+      <Link>Generated\CfxAuthCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBeforeDownloadCallback.cs">
+      <Link>Generated\CfxBeforeDownloadCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBinaryValue.cs">
+      <Link>Generated\CfxBinaryValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBoxLayoutSettings.cs">
+      <Link>Generated\CfxBoxLayoutSettings.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBrowser.cs">
+      <Link>Generated\CfxBrowser.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBrowserHost.cs">
+      <Link>Generated\CfxBrowserHost.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBrowserProcessHandler.cs">
+      <Link>Generated\CfxBrowserProcessHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxBrowserSettings.cs">
+      <Link>Generated\CfxBrowserSettings.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCallback.cs">
+      <Link>Generated\CfxCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxClient.cs">
+      <Link>Generated\CfxClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCommandLine.cs">
+      <Link>Generated\CfxCommandLine.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCompletionCallback.cs">
+      <Link>Generated\CfxCompletionCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCompositionUnderline.cs">
+      <Link>Generated\CfxCompositionUnderline.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxContextMenuHandler.cs">
+      <Link>Generated\CfxContextMenuHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxContextMenuParams.cs">
+      <Link>Generated\CfxContextMenuParams.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCookie.cs">
+      <Link>Generated\CfxCookie.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCookieManager.cs">
+      <Link>Generated\CfxCookieManager.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCookieVisitor.cs">
+      <Link>Generated\CfxCookieVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxCursorInfo.cs">
+      <Link>Generated\CfxCursorInfo.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDeleteCookiesCallback.cs">
+      <Link>Generated\CfxDeleteCookiesCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDialogHandler.cs">
+      <Link>Generated\CfxDialogHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDictionaryValue.cs">
+      <Link>Generated\CfxDictionaryValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDisplayHandler.cs">
+      <Link>Generated\CfxDisplayHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDomDocument.cs">
+      <Link>Generated\CfxDomDocument.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDomNode.cs">
+      <Link>Generated\CfxDomNode.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDomVisitor.cs">
+      <Link>Generated\CfxDomVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDownloadHandler.cs">
+      <Link>Generated\CfxDownloadHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDownloadImageCallback.cs">
+      <Link>Generated\CfxDownloadImageCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDownloadItem.cs">
+      <Link>Generated\CfxDownloadItem.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDownloadItemCallback.cs">
+      <Link>Generated\CfxDownloadItemCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDragData.cs">
+      <Link>Generated\CfxDragData.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDraggableRegion.cs">
+      <Link>Generated\CfxDraggableRegion.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxDragHandler.cs">
+      <Link>Generated\CfxDragHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxEndTracingCallback.cs">
+      <Link>Generated\CfxEndTracingCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxEnums.cs">
+      <Link>Generated\CfxEnums.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxFileDialogCallback.cs">
+      <Link>Generated\CfxFileDialogCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxFindHandler.cs">
+      <Link>Generated\CfxFindHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxFocusHandler.cs">
+      <Link>Generated\CfxFocusHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxFrame.cs">
+      <Link>Generated\CfxFrame.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxGeolocationCallback.cs">
+      <Link>Generated\CfxGeolocationCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxGeolocationHandler.cs">
+      <Link>Generated\CfxGeolocationHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxGeoposition.cs">
+      <Link>Generated\CfxGeoposition.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxGetGeolocationCallback.cs">
+      <Link>Generated\CfxGetGeolocationCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxImage.cs">
+      <Link>Generated\CfxImage.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxInsets.cs">
+      <Link>Generated\CfxInsets.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxJsDialogCallback.cs">
+      <Link>Generated\CfxJsDialogCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxJsDialogHandler.cs">
+      <Link>Generated\CfxJsDialogHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxKeyboardHandler.cs">
+      <Link>Generated\CfxKeyboardHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxKeyEvent.cs">
+      <Link>Generated\CfxKeyEvent.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxLifeSpanHandler.cs">
+      <Link>Generated\CfxLifeSpanHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxListValue.cs">
+      <Link>Generated\CfxListValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxLoadHandler.cs">
+      <Link>Generated\CfxLoadHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxMainArgsLinux.cs">
+      <Link>Generated\CfxMainArgsLinux.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxMainArgsWindows.cs">
+      <Link>Generated\CfxMainArgsWindows.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxMenuModel.cs">
+      <Link>Generated\CfxMenuModel.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxMenuModelDelegate.cs">
+      <Link>Generated\CfxMenuModelDelegate.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxMouseEvent.cs">
+      <Link>Generated\CfxMouseEvent.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxNavigationEntry.cs">
+      <Link>Generated\CfxNavigationEntry.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxNavigationEntryVisitor.cs">
+      <Link>Generated\CfxNavigationEntryVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPdfPrintCallback.cs">
+      <Link>Generated\CfxPdfPrintCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPdfPrintSettings.cs">
+      <Link>Generated\CfxPdfPrintSettings.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPoint.cs">
+      <Link>Generated\CfxPoint.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPopupFeatures.cs">
+      <Link>Generated\CfxPopupFeatures.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPostData.cs">
+      <Link>Generated\CfxPostData.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPostDataElement.cs">
+      <Link>Generated\CfxPostDataElement.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPrintDialogCallback.cs">
+      <Link>Generated\CfxPrintDialogCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPrintHandler.cs">
+      <Link>Generated\CfxPrintHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPrintJobCallback.cs">
+      <Link>Generated\CfxPrintJobCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxPrintSettings.cs">
+      <Link>Generated\CfxPrintSettings.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxProcessMessage.cs">
+      <Link>Generated\CfxProcessMessage.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRange.cs">
+      <Link>Generated\CfxRange.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxReadHandler.cs">
+      <Link>Generated\CfxReadHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRect.cs">
+      <Link>Generated\CfxRect.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRegisterCdmCallback.cs">
+      <Link>Generated\CfxRegisterCdmCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRenderHandler.cs">
+      <Link>Generated\CfxRenderHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRenderProcessHandler.cs">
+      <Link>Generated\CfxRenderProcessHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRequest.cs">
+      <Link>Generated\CfxRequest.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRequestCallback.cs">
+      <Link>Generated\CfxRequestCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRequestContext.cs">
+      <Link>Generated\CfxRequestContext.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRequestContextHandler.cs">
+      <Link>Generated\CfxRequestContextHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRequestContextSettings.cs">
+      <Link>Generated\CfxRequestContextSettings.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRequestHandler.cs">
+      <Link>Generated\CfxRequestHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxResolveCallback.cs">
+      <Link>Generated\CfxResolveCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxResourceBundle.cs">
+      <Link>Generated\CfxResourceBundle.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxResourceBundleHandler.cs">
+      <Link>Generated\CfxResourceBundleHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxResourceHandler.cs">
+      <Link>Generated\CfxResourceHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxResponse.cs">
+      <Link>Generated\CfxResponse.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxResponseFilter.cs">
+      <Link>Generated\CfxResponseFilter.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRunContextMenuCallback.cs">
+      <Link>Generated\CfxRunContextMenuCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRunFileDialogCallback.cs">
+      <Link>Generated\CfxRunFileDialogCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxRuntime.cs">
+      <Link>Generated\CfxRuntime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSchemeHandlerFactory.cs">
+      <Link>Generated\CfxSchemeHandlerFactory.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSchemeRegistrar.cs">
+      <Link>Generated\CfxSchemeRegistrar.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxScreenInfo.cs">
+      <Link>Generated\CfxScreenInfo.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSelectClientCertificateCallback.cs">
+      <Link>Generated\CfxSelectClientCertificateCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSetCookieCallback.cs">
+      <Link>Generated\CfxSetCookieCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSettings.cs">
+      <Link>Generated\CfxSettings.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSize.cs">
+      <Link>Generated\CfxSize.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSslInfo.cs">
+      <Link>Generated\CfxSslInfo.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxSslStatus.cs">
+      <Link>Generated\CfxSslStatus.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxStreamReader.cs">
+      <Link>Generated\CfxStreamReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxStreamWriter.cs">
+      <Link>Generated\CfxStreamWriter.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxStringVisitor.cs">
+      <Link>Generated\CfxStringVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxTask.cs">
+      <Link>Generated\CfxTask.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxTaskRunner.cs">
+      <Link>Generated\CfxTaskRunner.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxThread.cs">
+      <Link>Generated\CfxThread.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxTime.cs">
+      <Link>Generated\CfxTime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxUrlParts.cs">
+      <Link>Generated\CfxUrlParts.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxUrlRequest.cs">
+      <Link>Generated\CfxUrlRequest.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxUrlRequestClient.cs">
+      <Link>Generated\CfxUrlRequestClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8Accessor.cs">
+      <Link>Generated\CfxV8Accessor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8Context.cs">
+      <Link>Generated\CfxV8Context.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8Exception.cs">
+      <Link>Generated\CfxV8Exception.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8Handler.cs">
+      <Link>Generated\CfxV8Handler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8Interceptor.cs">
+      <Link>Generated\CfxV8Interceptor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8StackFrame.cs">
+      <Link>Generated\CfxV8StackFrame.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8StackTrace.cs">
+      <Link>Generated\CfxV8StackTrace.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxV8Value.cs">
+      <Link>Generated\CfxV8Value.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxValue.cs">
+      <Link>Generated\CfxValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWaitableEvent.cs">
+      <Link>Generated\CfxWaitableEvent.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWebPluginInfo.cs">
+      <Link>Generated\CfxWebPluginInfo.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWebPluginInfoVisitor.cs">
+      <Link>Generated\CfxWebPluginInfoVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWebPluginUnstableCallback.cs">
+      <Link>Generated\CfxWebPluginUnstableCallback.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWindowInfoLinux.cs">
+      <Link>Generated\CfxWindowInfoLinux.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWindowInfoWindows.cs">
+      <Link>Generated\CfxWindowInfoWindows.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxWriteHandler.cs">
+      <Link>Generated\CfxWriteHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxX509Certificate.cs">
+      <Link>Generated\CfxX509Certificate.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxX509CertPrincipal.cs">
+      <Link>Generated\CfxX509CertPrincipal.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxXmlReader.cs">
+      <Link>Generated\CfxXmlReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\CfxZipReader.cs">
+      <Link>Generated\CfxZipReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrApp.cs">
+      <Link>Generated\Remote\CfrApp.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrBinaryValue.cs">
+      <Link>Generated\Remote\CfrBinaryValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrBrowser.cs">
+      <Link>Generated\Remote\CfrBrowser.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrCommandLine.cs">
+      <Link>Generated\Remote\CfrCommandLine.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrDictionaryValue.cs">
+      <Link>Generated\Remote\CfrDictionaryValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrDomDocument.cs">
+      <Link>Generated\Remote\CfrDomDocument.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrDomNode.cs">
+      <Link>Generated\Remote\CfrDomNode.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrDomVisitor.cs">
+      <Link>Generated\Remote\CfrDomVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrFrame.cs">
+      <Link>Generated\Remote\CfrFrame.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrListValue.cs">
+      <Link>Generated\Remote\CfrListValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrLoadHandler.cs">
+      <Link>Generated\Remote\CfrLoadHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrPostData.cs">
+      <Link>Generated\Remote\CfrPostData.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrPostDataElement.cs">
+      <Link>Generated\Remote\CfrPostDataElement.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrProcessMessage.cs">
+      <Link>Generated\Remote\CfrProcessMessage.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrReadHandler.cs">
+      <Link>Generated\Remote\CfrReadHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrRect.cs">
+      <Link>Generated\Remote\CfrRect.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrRenderProcessHandler.cs">
+      <Link>Generated\Remote\CfrRenderProcessHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrRequest.cs">
+      <Link>Generated\Remote\CfrRequest.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrResourceBundle.cs">
+      <Link>Generated\Remote\CfrResourceBundle.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrResourceBundleHandler.cs">
+      <Link>Generated\Remote\CfrResourceBundleHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrResponse.cs">
+      <Link>Generated\Remote\CfrResponse.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrRuntime.cs">
+      <Link>Generated\Remote\CfrRuntime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrSchemeRegistrar.cs">
+      <Link>Generated\Remote\CfrSchemeRegistrar.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrStreamReader.cs">
+      <Link>Generated\Remote\CfrStreamReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrStreamWriter.cs">
+      <Link>Generated\Remote\CfrStreamWriter.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrStringVisitor.cs">
+      <Link>Generated\Remote\CfrStringVisitor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrTask.cs">
+      <Link>Generated\Remote\CfrTask.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrTaskRunner.cs">
+      <Link>Generated\Remote\CfrTaskRunner.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrThread.cs">
+      <Link>Generated\Remote\CfrThread.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrTime.cs">
+      <Link>Generated\Remote\CfrTime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8Accessor.cs">
+      <Link>Generated\Remote\CfrV8Accessor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8Context.cs">
+      <Link>Generated\Remote\CfrV8Context.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8Exception.cs">
+      <Link>Generated\Remote\CfrV8Exception.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8Handler.cs">
+      <Link>Generated\Remote\CfrV8Handler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8Interceptor.cs">
+      <Link>Generated\Remote\CfrV8Interceptor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8StackFrame.cs">
+      <Link>Generated\Remote\CfrV8StackFrame.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8StackTrace.cs">
+      <Link>Generated\Remote\CfrV8StackTrace.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrV8Value.cs">
+      <Link>Generated\Remote\CfrV8Value.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrValue.cs">
+      <Link>Generated\Remote\CfrValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrWaitableEvent.cs">
+      <Link>Generated\Remote\CfrWaitableEvent.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrWriteHandler.cs">
+      <Link>Generated\Remote\CfrWriteHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrXmlReader.cs">
+      <Link>Generated\Remote\CfrXmlReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfrZipReader.cs">
+      <Link>Generated\Remote\CfrZipReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxAppRemoteCalls.cs">
+      <Link>Generated\Remote\CfxAppRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxAppRemoteClient.cs">
+      <Link>Generated\Remote\CfxAppRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxBinaryValueRemoteCalls.cs">
+      <Link>Generated\Remote\CfxBinaryValueRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxBrowserRemoteCalls.cs">
+      <Link>Generated\Remote\CfxBrowserRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxCommandLineRemoteCalls.cs">
+      <Link>Generated\Remote\CfxCommandLineRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxDictionaryValueRemoteCalls.cs">
+      <Link>Generated\Remote\CfxDictionaryValueRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxDomDocumentRemoteCalls.cs">
+      <Link>Generated\Remote\CfxDomDocumentRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxDomNodeRemoteCalls.cs">
+      <Link>Generated\Remote\CfxDomNodeRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxDomVisitorRemoteCalls.cs">
+      <Link>Generated\Remote\CfxDomVisitorRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxDomVisitorRemoteClient.cs">
+      <Link>Generated\Remote\CfxDomVisitorRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxFrameRemoteCalls.cs">
+      <Link>Generated\Remote\CfxFrameRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxListValueRemoteCalls.cs">
+      <Link>Generated\Remote\CfxListValueRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxLoadHandlerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxLoadHandlerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxLoadHandlerRemoteClient.cs">
+      <Link>Generated\Remote\CfxLoadHandlerRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxPostDataElementRemoteCalls.cs">
+      <Link>Generated\Remote\CfxPostDataElementRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxPostDataRemoteCalls.cs">
+      <Link>Generated\Remote\CfxPostDataRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxProcessMessageRemoteCalls.cs">
+      <Link>Generated\Remote\CfxProcessMessageRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxReadHandlerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxReadHandlerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxReadHandlerRemoteClient.cs">
+      <Link>Generated\Remote\CfxReadHandlerRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxRectRemoteCalls.cs">
+      <Link>Generated\Remote\CfxRectRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxRenderProcessHandlerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxRenderProcessHandlerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxRenderProcessHandlerRemoteClient.cs">
+      <Link>Generated\Remote\CfxRenderProcessHandlerRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxRequestRemoteCalls.cs">
+      <Link>Generated\Remote\CfxRequestRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxResourceBundleHandlerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxResourceBundleHandlerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxResourceBundleHandlerRemoteClient.cs">
+      <Link>Generated\Remote\CfxResourceBundleHandlerRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxResourceBundleRemoteCalls.cs">
+      <Link>Generated\Remote\CfxResourceBundleRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxResponseRemoteCalls.cs">
+      <Link>Generated\Remote\CfxResponseRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxRuntimeRemoteCalls.cs">
+      <Link>Generated\Remote\CfxRuntimeRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxSchemeRegistrarRemoteCalls.cs">
+      <Link>Generated\Remote\CfxSchemeRegistrarRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxStreamReaderRemoteCalls.cs">
+      <Link>Generated\Remote\CfxStreamReaderRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxStreamWriterRemoteCalls.cs">
+      <Link>Generated\Remote\CfxStreamWriterRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxStringVisitorRemoteCalls.cs">
+      <Link>Generated\Remote\CfxStringVisitorRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxStringVisitorRemoteClient.cs">
+      <Link>Generated\Remote\CfxStringVisitorRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxTaskRemoteCalls.cs">
+      <Link>Generated\Remote\CfxTaskRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxTaskRemoteClient.cs">
+      <Link>Generated\Remote\CfxTaskRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxTaskRunnerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxTaskRunnerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxThreadRemoteCalls.cs">
+      <Link>Generated\Remote\CfxThreadRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxTimeRemoteCalls.cs">
+      <Link>Generated\Remote\CfxTimeRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8AccessorRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8AccessorRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8AccessorRemoteClient.cs">
+      <Link>Generated\Remote\CfxV8AccessorRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8ContextRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8ContextRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8ExceptionRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8ExceptionRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8HandlerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8HandlerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8HandlerRemoteClient.cs">
+      <Link>Generated\Remote\CfxV8HandlerRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8InterceptorRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8InterceptorRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8InterceptorRemoteClient.cs">
+      <Link>Generated\Remote\CfxV8InterceptorRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8StackFrameRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8StackFrameRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8StackTraceRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8StackTraceRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxV8ValueRemoteCalls.cs">
+      <Link>Generated\Remote\CfxV8ValueRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxValueRemoteCalls.cs">
+      <Link>Generated\Remote\CfxValueRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxWaitableEventRemoteCalls.cs">
+      <Link>Generated\Remote\CfxWaitableEventRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxWriteHandlerRemoteCalls.cs">
+      <Link>Generated\Remote\CfxWriteHandlerRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxWriteHandlerRemoteClient.cs">
+      <Link>Generated\Remote\CfxWriteHandlerRemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxXmlReaderRemoteCalls.cs">
+      <Link>Generated\Remote\CfxXmlReaderRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\CfxZipReaderRemoteCalls.cs">
+      <Link>Generated\Remote\CfxZipReaderRemoteCalls.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\RemoteCallFactory.cs">
+      <Link>Generated\Remote\RemoteCallFactory.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Generated\Remote\RemoteCallId.cs">
+      <Link>Generated\Remote\RemoteCallId.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxApi.cs">
+      <Link>Source\CfxApi.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxArray.cs">
+      <Link>Source\CfxArray.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxBaseClient.cs">
+      <Link>Source\CfxBaseClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxBaseLibrary.cs">
+      <Link>Source\CfxBaseLibrary.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxBaseRefCounted.cs">
+      <Link>Source\CfxBaseRefCounted.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxBaseScoped.cs">
+      <Link>Source\CfxBaseScoped.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxBinaryValue.cs">
+      <Link>Source\CfxBinaryValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxColor.cs">
+      <Link>Source\CfxColor.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxDebug.cs">
+      <Link>Source\CfxDebug.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxEventArgs.cs">
+      <Link>Source\CfxEventArgs.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxException.cs">
+      <Link>Source\CfxException.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxMainArgs.cs">
+      <Link>Source\CfxMainArgs.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxMainArgsLinux.cs">
+      <Link>Source\CfxMainArgsLinux.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxObject.cs">
+      <Link>Source\CfxObject.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxPlatform.cs">
+      <Link>Source\CfxPlatform.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxRemoteCallbackManager.cs">
+      <Link>Source\CfxRemoteCallbackManager.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxRemoteCallContext.cs">
+      <Link>Source\CfxRemoteCallContext.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxRuntime.cs">
+      <Link>Source\CfxRuntime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxStructure.cs">
+      <Link>Source\CfxStructure.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxTime.cs">
+      <Link>Source\CfxTime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxV8Value.cs">
+      <Link>Source\CfxV8Value.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxWindowInfo.cs">
+      <Link>Source\CfxWindowInfo.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\CfxZipReader.cs">
+      <Link>Source\CfxZipReader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\NativeFunctionLoader.cs">
+      <Link>Source\NativeFunctionLoader.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\PinnedObject.cs">
+      <Link>Source\PinnedObject.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\PinnedString.cs">
+      <Link>Source\PinnedString.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Properties\AssemblyInfo.cs">
+      <Link>Properties\AssemblyInfo.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrBaseClient.cs">
+      <Link>Source\Remote\CfrBaseClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrBaseLibrary.cs">
+      <Link>Source\Remote\CfrBaseLibrary.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrBaseRefCounted.cs">
+      <Link>Source\Remote\CfrBaseRefCounted.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrBaseScoped.cs">
+      <Link>Source\Remote\CfrBaseScoped.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrBinaryValue.cs">
+      <Link>Source\Remote\CfrBinaryValue.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrEventArgs.cs">
+      <Link>Source\Remote\CfrEventArgs.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrMarshal.cs">
+      <Link>Source\Remote\CfrMarshal.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrMayBlockEventArgs.cs">
+      <Link>Source\Remote\CfrMayBlockEventArgs.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrObject.cs">
+      <Link>Source\Remote\CfrObject.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrRuntime.cs">
+      <Link>Source\Remote\CfrRuntime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrSeekEventArgs.cs">
+      <Link>Source\Remote\CfrSeekEventArgs.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrStructure.cs">
+      <Link>Source\Remote\CfrStructure.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrTellEventArgs.cs">
+      <Link>Source\Remote\CfrTellEventArgs.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrTime.cs">
+      <Link>Source\Remote\CfrTime.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\CfrV8Value.cs">
+      <Link>Source\Remote\CfrV8Value.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\DefaultPipeFactory.cs">
+      <Link>Source\Remote\DefaultPipeFactory.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\PipeBufferStream.cs">
+      <Link>Source\Remote\PipeBufferStream.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\PipeFactory.cs">
+      <Link>Source\Remote\PipeFactory.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\RemoteCall.cs">
+      <Link>Source\Remote\RemoteCall.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\RemoteCallBases.cs">
+      <Link>Source\Remote\RemoteCallBases.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\RemoteClient.cs">
+      <Link>Source\Remote\RemoteClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\RemoteConnection.cs">
+      <Link>Source\Remote\RemoteConnection.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\RemotePtr.cs">
+      <Link>Source\Remote\RemotePtr.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\RemoteService.cs">
+      <Link>Source\Remote\RemoteService.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\StreamHandler.cs">
+      <Link>Source\Remote\StreamHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\Remote\WorkerPool.cs">
+      <Link>Source\Remote\WorkerPool.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\StringFunctions.cs">
+      <Link>Source\StringFunctions.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\TimeFunctions.cs">
+      <Link>Source\TimeFunctions.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\WeakCache.cs">
+      <Link>Source\WeakCache.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumFX\Source\WindowStyle.cs">
+      <Link>Source\WindowStyle.cs</Link>
+    </Compile>
+  </ItemGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <ItemGroup />
+</Project>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/ChromiumWebBrowser/ChromiumWebBrowser.csproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/ChromiumWebBrowser/ChromiumWebBrowser.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,101 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{2930E03D-89B3-427E-B86C-0B73F76FEB92}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <RootNamespace>ChromiumWebBrowser</RootNamespace>
+    <AssemblyName>ChromiumWebBrowser</AssemblyName>
+    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>..\Build\Debug</OutputPath>
+    <DefineConstants>DEBUG;</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>full</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>..\Build\Release</OutputPath>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <ConsolePause>false</ConsolePause>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System.Drawing" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="..\..\ChromiumWebBrowser\ChromiumWebBrowser.cs">
+      <Link>ChromiumWebBrowser.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\ChromiumWebBrowserException.cs">
+      <Link>ChromiumWebBrowserException.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\FindToolbar.cs">
+      <Link>FindToolbar.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\Images.cs">
+      <Link>Images.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\JSDynamicProperty.cs">
+      <Link>JSDynamicProperty.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\JSFunction.cs">
+      <Link>JSFunction.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\JSObject.cs">
+      <Link>JSObject.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\JSProperty.cs">
+      <Link>JSProperty.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\WebResource.cs">
+      <Link>WebResource.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\BrowserProcess\BrowserClient.cs">
+      <Link>BrowserProcess\BrowserClient.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\BrowserProcess\BrowserProcess.cs">
+      <Link>BrowserProcess\BrowserProcess.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\BrowserProcess\Events.cs">
+      <Link>BrowserProcess\Events.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\BrowserProcess\LifeSpanHandler.cs">
+      <Link>BrowserProcess\LifeSpanHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\BrowserProcess\RequestHandler.cs">
+      <Link>BrowserProcess\RequestHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\RenderProcess\RenderProcess.cs">
+      <Link>RenderProcess\RenderProcess.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\RenderProcess\RenderProcessHandler.cs">
+      <Link>RenderProcess\RenderProcessHandler.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\NativeWindow.cs">
+      <Link>NativeWindow.cs</Link>
+    </Compile>
+    <Compile Include="..\..\ChromiumWebBrowser\Properties\AssemblyInfo.cs">
+      <Link>Properties\AssemblyInfo.cs</Link>
+    </Compile>
+  </ItemGroup>
+  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
+  <ItemGroup>
+    <ProjectReference Include="..\ChromiumFX\ChromiumFX.csproj">
+      <Project>{C135345E-9F5A-44E5-8609-037C178FEAF0}</Project>
+      <Name>ChromiumFX</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <ItemGroup>
+    <Folder Include="Properties\" />
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/Mono.sln
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/Mono.sln	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,199 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 2012
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ChromiumFX", "ChromiumFX\ChromiumFX.csproj", "{C135345E-9F5A-44E5-8609-037C178FEAF0}"
+EndProject
+Project("{2857B73E-F847-4B02-9238-064979017E93}") = "libcfx64", "libcfx64\libcfx64.cproj", "{660A63B1-3101-4AB4-9BFD-AB5110458D44}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ChromiumWebBrowser", "ChromiumWebBrowser\ChromiumWebBrowser.csproj", "{2930E03D-89B3-427E-B86C-0B73F76FEB92}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "CfxTestApp", "CfxTestApp\CfxTestApp.csproj", "{D2AB47D9-04A6-4598-96EB-081605302351}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Any CPU = Debug|Any CPU
+		Release|Any CPU = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{2930E03D-89B3-427E-B86C-0B73F76FEB92}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{2930E03D-89B3-427E-B86C-0B73F76FEB92}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{2930E03D-89B3-427E-B86C-0B73F76FEB92}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{2930E03D-89B3-427E-B86C-0B73F76FEB92}.Release|Any CPU.Build.0 = Release|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{660A63B1-3101-4AB4-9BFD-AB5110458D44}.Release|Any CPU.Build.0 = Release|Any CPU
+		{C135345E-9F5A-44E5-8609-037C178FEAF0}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{C135345E-9F5A-44E5-8609-037C178FEAF0}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{C135345E-9F5A-44E5-8609-037C178FEAF0}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{C135345E-9F5A-44E5-8609-037C178FEAF0}.Release|Any CPU.Build.0 = Release|Any CPU
+		{D2AB47D9-04A6-4598-96EB-081605302351}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{D2AB47D9-04A6-4598-96EB-081605302351}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{D2AB47D9-04A6-4598-96EB-081605302351}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{D2AB47D9-04A6-4598-96EB-081605302351}.Release|Any CPU.Build.0 = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(MonoDevelopProperties) = preSolution
+		Policies = $0
+		$0.StandardHeader = $1
+		$1.Text = 
+		$1.IncludeInNewFiles = True
+		$0.NameConventionPolicy = $2
+		$2.Rules = $3
+		$3.NamingRule = $4
+		$4.Name = Namespaces
+		$4.AffectedEntity = Namespace
+		$4.VisibilityMask = VisibilityMask
+		$4.NamingStyle = PascalCase
+		$4.IncludeInstanceMembers = True
+		$4.IncludeStaticEntities = True
+		$3.NamingRule = $5
+		$5.Name = Types
+		$5.AffectedEntity = Class, Struct, Enum, Delegate
+		$5.VisibilityMask = Public
+		$5.NamingStyle = PascalCase
+		$5.IncludeInstanceMembers = True
+		$5.IncludeStaticEntities = True
+		$3.NamingRule = $6
+		$6.Name = Interfaces
+		$6.RequiredPrefixes = $7
+		$7.String = I
+		$6.AffectedEntity = Interface
+		$6.VisibilityMask = Public
+		$6.NamingStyle = PascalCase
+		$6.IncludeInstanceMembers = True
+		$6.IncludeStaticEntities = True
+		$3.NamingRule = $8
+		$8.Name = Attributes
+		$8.RequiredSuffixes = $9
+		$9.String = Attribute
+		$8.AffectedEntity = CustomAttributes
+		$8.VisibilityMask = Public
+		$8.NamingStyle = PascalCase
+		$8.IncludeInstanceMembers = True
+		$8.IncludeStaticEntities = True
+		$3.NamingRule = $10
+		$10.Name = Event Arguments
+		$10.RequiredSuffixes = $11
+		$11.String = EventArgs
+		$10.AffectedEntity = CustomEventArgs
+		$10.VisibilityMask = Public
+		$10.NamingStyle = PascalCase
+		$10.IncludeInstanceMembers = True
+		$10.IncludeStaticEntities = True
+		$3.NamingRule = $12
+		$12.Name = Exceptions
+		$12.RequiredSuffixes = $13
+		$13.String = Exception
+		$12.AffectedEntity = CustomExceptions
+		$12.VisibilityMask = VisibilityMask
+		$12.NamingStyle = PascalCase
+		$12.IncludeInstanceMembers = True
+		$12.IncludeStaticEntities = True
+		$3.NamingRule = $14
+		$14.Name = Methods
+		$14.AffectedEntity = Methods
+		$14.VisibilityMask = Protected, Public
+		$14.NamingStyle = PascalCase
+		$14.IncludeInstanceMembers = True
+		$14.IncludeStaticEntities = True
+		$3.NamingRule = $15
+		$15.Name = Static Readonly Fields
+		$15.AffectedEntity = ReadonlyField
+		$15.VisibilityMask = Protected, Public
+		$15.NamingStyle = PascalCase
+		$15.IncludeInstanceMembers = False
+		$15.IncludeStaticEntities = True
+		$3.NamingRule = $16
+		$16.Name = Fields
+		$16.AffectedEntity = Field
+		$16.VisibilityMask = Protected, Public
+		$16.NamingStyle = PascalCase
+		$16.IncludeInstanceMembers = True
+		$16.IncludeStaticEntities = True
+		$3.NamingRule = $17
+		$17.Name = ReadOnly Fields
+		$17.AffectedEntity = ReadonlyField
+		$17.VisibilityMask = Protected, Public
+		$17.NamingStyle = PascalCase
+		$17.IncludeInstanceMembers = True
+		$17.IncludeStaticEntities = False
+		$3.NamingRule = $18
+		$18.Name = Constant Fields
+		$18.AffectedEntity = ConstantField
+		$18.VisibilityMask = Protected, Public
+		$18.NamingStyle = PascalCase
+		$18.IncludeInstanceMembers = True
+		$18.IncludeStaticEntities = True
+		$3.NamingRule = $19
+		$19.Name = Properties
+		$19.AffectedEntity = Property
+		$19.VisibilityMask = Protected, Public
+		$19.NamingStyle = PascalCase
+		$19.IncludeInstanceMembers = True
+		$19.IncludeStaticEntities = True
+		$3.NamingRule = $20
+		$20.Name = Events
+		$20.AffectedEntity = Event
+		$20.VisibilityMask = Protected, Public
+		$20.NamingStyle = PascalCase
+		$20.IncludeInstanceMembers = True
+		$20.IncludeStaticEntities = True
+		$3.NamingRule = $21
+		$21.Name = Enum Members
+		$21.AffectedEntity = EnumMember
+		$21.VisibilityMask = VisibilityMask
+		$21.NamingStyle = PascalCase
+		$21.IncludeInstanceMembers = True
+		$21.IncludeStaticEntities = True
+		$3.NamingRule = $22
+		$22.Name = Parameters
+		$22.AffectedEntity = Parameter
+		$22.VisibilityMask = VisibilityMask
+		$22.NamingStyle = CamelCase
+		$22.IncludeInstanceMembers = True
+		$22.IncludeStaticEntities = True
+		$3.NamingRule = $23
+		$23.Name = Type Parameters
+		$23.RequiredPrefixes = $24
+		$24.String = T
+		$23.AffectedEntity = TypeParameter
+		$23.VisibilityMask = VisibilityMask
+		$23.NamingStyle = PascalCase
+		$23.IncludeInstanceMembers = True
+		$23.IncludeStaticEntities = True
+		$0.TextStylePolicy = $25
+		$25.EolMarker = Windows
+		$25.inheritsSet = VisualStudio
+		$25.inheritsScope = text/plain
+		$25.scope = text/x-csharp
+		$0.CSharpFormattingPolicy = $26
+		$26.IndentSwitchBody = True
+		$26.IndentBlocksInsideExpressions = True
+		$26.AnonymousMethodBraceStyle = NextLine
+		$26.PropertyBraceStyle = NextLine
+		$26.PropertyGetBraceStyle = NextLine
+		$26.PropertySetBraceStyle = NextLine
+		$26.EventBraceStyle = NextLine
+		$26.EventAddBraceStyle = NextLine
+		$26.EventRemoveBraceStyle = NextLine
+		$26.StatementBraceStyle = NextLine
+		$26.ElseNewLinePlacement = NewLine
+		$26.CatchNewLinePlacement = NewLine
+		$26.FinallyNewLinePlacement = NewLine
+		$26.WhileNewLinePlacement = DoNotCare
+		$26.ArrayInitializerWrapping = DoNotChange
+		$26.ArrayInitializerBraceStyle = NextLine
+		$26.BeforeMethodDeclarationParentheses = False
+		$26.BeforeMethodCallParentheses = False
+		$26.BeforeConstructorDeclarationParentheses = False
+		$26.NewLineBeforeConstructorInitializerColon = NewLine
+		$26.NewLineAfterConstructorInitializerColon = SameLine
+		$26.BeforeDelegateDeclarationParentheses = False
+		$26.NewParentheses = False
+		$26.SpacesBeforeBrackets = False
+		$26.inheritsSet = Mono
+		$26.inheritsScope = text/x-csharp
+		$26.scope = text/x-csharp
+		outputpath = Build\
+	EndGlobalSection
+EndGlobal
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/libcfx64/libcfx64.cproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/libcfx64/libcfx64.cproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{660A63B1-3101-4AB4-9BFD-AB5110458D44}</ProjectGuid>
+    <Compiler>
+      <Compiler ctype="GccCompiler" />
+    </Compiler>
+    <Language>C</Language>
+    <Target>Bin</Target>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <OutputPath>..\Build\Debug</OutputPath>
+    <OutputName>libcfx64</OutputName>
+    <CompileTarget>SharedLibrary</CompileTarget>
+    <DefineSymbols>DEBUG CFX_LINUX</DefineSymbols>
+    <SourceDirectory>.</SourceDirectory>
+    <WarningLevel>All</WarningLevel>
+    <Includes>
+      <Includes>
+        <Include>${ProjectDir}/../../cef/</Include>
+        <Include>${ProjectDir}/../../libcfx/Generated</Include>
+      </Includes>
+    </Includes>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <OutputPath>..\Build\Release</OutputPath>
+    <OutputName>libcfx64</OutputName>
+    <CompileTarget>SharedLibrary</CompileTarget>
+    <OptimizationLevel>3</OptimizationLevel>
+    <DefineSymbols>CFX_LINUX</DefineSymbols>
+    <SourceDirectory>.</SourceDirectory>
+    <Includes>
+      <Includes>
+        <Include>${ProjectDir}/../../cef/</Include>
+        <Include>${ProjectDir}/../../libcfx/Generated</Include>
+      </Includes>
+    </Includes>
+    <WarningLevel>All</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Compile Include="..\..\libcfx\Source\libcfx.c">
+      <Link>libcfx.c</Link>
+    </Compile>
+  </ItemGroup>
+</Project>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 Mono/libcfx64/libcfx64.md.pc
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/Mono/libcfx64/libcfx64.md.pc	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,5 @@
+Name: libcfx64
+Description: 
+Version: 0.1
+Libs: -L"/mnt/d/WorkRoot/Open/bitbucket/chromiumfx-chromiumfx-971831fead36/Mono/Build/Debug" -lcfx64
+Cflags: -I""
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/App.config
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/App.config	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,6 @@
+﻿<?xml version="1.0" encoding="utf-8" ?>
+<configuration>
+    <startup> 
+        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7" />
+    </startup>
+</configuration>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Form1.Designer.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Form1.Designer.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,112 @@
+﻿namespace ceftest
+{
+    partial class Form1
+    {
+        /// <summary>
+        /// 必需的设计器变量。
+        /// </summary>
+        private System.ComponentModel.IContainer components = null;
+
+        /// <summary>
+        /// 清理所有正在使用的资源。
+        /// </summary>
+        /// <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
+        protected override void Dispose(bool disposing)
+        {
+            if (disposing && (components != null))
+            {
+                components.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+
+        #region Windows 窗体设计器生成的代码
+
+        /// <summary>
+        /// 设计器支持所需的方法 - 不要修改
+        /// 使用代码编辑器修改此方法的内容。
+        /// </summary>
+        private void InitializeComponent()
+        {
+            this.splitContainer1 = new System.Windows.Forms.SplitContainer();
+            this.panel1 = new System.Windows.Forms.Panel();
+            this.button1 = new System.Windows.Forms.Button();
+            this.textBox1 = new System.Windows.Forms.TextBox();
+            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).BeginInit();
+            this.splitContainer1.Panel1.SuspendLayout();
+            this.splitContainer1.Panel2.SuspendLayout();
+            this.splitContainer1.SuspendLayout();
+            this.SuspendLayout();
+            // 
+            // splitContainer1
+            // 
+            this.splitContainer1.Dock = System.Windows.Forms.DockStyle.Fill;
+            this.splitContainer1.Location = new System.Drawing.Point(0, 0);
+            this.splitContainer1.Name = "splitContainer1";
+            this.splitContainer1.Orientation = System.Windows.Forms.Orientation.Horizontal;
+            // 
+            // splitContainer1.Panel1
+            // 
+            this.splitContainer1.Panel1.Controls.Add(this.textBox1);
+            this.splitContainer1.Panel1.Controls.Add(this.button1);
+            // 
+            // splitContainer1.Panel2
+            // 
+            this.splitContainer1.Panel2.Controls.Add(this.panel1);
+            this.splitContainer1.Size = new System.Drawing.Size(809, 446);
+            this.splitContainer1.SplitterDistance = 57;
+            this.splitContainer1.TabIndex = 0;
+            // 
+            // panel1
+            // 
+            this.panel1.Dock = System.Windows.Forms.DockStyle.Fill;
+            this.panel1.Location = new System.Drawing.Point(0, 0);
+            this.panel1.Name = "panel1";
+            this.panel1.Size = new System.Drawing.Size(809, 385);
+            this.panel1.TabIndex = 0;
+            // 
+            // button1
+            // 
+            this.button1.Location = new System.Drawing.Point(629, 19);
+            this.button1.Name = "button1";
+            this.button1.Size = new System.Drawing.Size(75, 23);
+            this.button1.TabIndex = 0;
+            this.button1.Text = "load";
+            this.button1.UseVisualStyleBackColor = true;
+            this.button1.Click += new System.EventHandler(this.button1_Click_1);
+            // 
+            // textBox1
+            // 
+            this.textBox1.Location = new System.Drawing.Point(105, 21);
+            this.textBox1.Name = "textBox1";
+            this.textBox1.Size = new System.Drawing.Size(497, 21);
+            this.textBox1.TabIndex = 1;
+            this.textBox1.Text = "http://www.baidu.com";
+            // 
+            // Form1
+            // 
+            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 12F);
+            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
+            this.ClientSize = new System.Drawing.Size(809, 446);
+            this.Controls.Add(this.splitContainer1);
+            this.Name = "Form1";
+            this.Text = "Form1";
+            this.Load += new System.EventHandler(this.Form1_Load);
+            this.splitContainer1.Panel1.ResumeLayout(false);
+            this.splitContainer1.Panel1.PerformLayout();
+            this.splitContainer1.Panel2.ResumeLayout(false);
+            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).EndInit();
+            this.splitContainer1.ResumeLayout(false);
+            this.ResumeLayout(false);
+
+        }
+
+        #endregion
+
+        private System.Windows.Forms.SplitContainer splitContainer1;
+        private System.Windows.Forms.Panel panel1;
+        private System.Windows.Forms.TextBox textBox1;
+        private System.Windows.Forms.Button button1;
+    }
+}
+
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Form1.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Form1.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,151 @@
+﻿using System;
+using System.Collections.Generic;
+using System.ComponentModel;
+using System.Data;
+using System.Diagnostics;
+using System.Drawing;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Windows.Forms;
+using Chromium;
+using Chromium.WebBrowser;
+
+namespace ceftest
+{
+    public partial class Form1 : Form
+    {
+        private Chromium.WebBrowser.ChromiumWebBrowser webBrowser;
+        public Form1()
+        {
+            InitializeComponent();
+        }
+
+        private void Form1_Load(object sender, EventArgs es)
+        {
+            //ChromiumWebBrowser.RemoteProcessCreated += (e) => {
+            //    LogWriteLine("Remote render process created with process id {0}", CfxRemoteCallContext.CurrentContext.ProcessId, CfxRemoteCallContext.CurrentContext.ThreadId);
+            //    e.RenderProcessHandler.OnRenderThreadCreated += (s, e1) => {
+            //        LogWriteLine("RenderProcessHandler.OnRenderThreadCreated, process id = {0}", CfxRemoteCallContext.CurrentContext.ProcessId);
+            //    };
+            //    e.RenderProcessHandler.OnBrowserDestroyed += (s, e1) => {
+            //        // this is never reached. 
+            //        LogWriteLine("RenderProcessHandler.OnBrowserDestroyed, process id = {0}, browser id = {1}", CfxRemoteCallContext.CurrentContext.ProcessId, e1.Browser.Identifier);
+            //    };
+            //    e.RenderProcessHandler.OnBrowserCreated += (s, e1) => {
+            //        LogWriteLine("RenderProcessHandler.OnBrowserCreated, process id = {0}, browser id = {1}", CfxRemoteCallContext.CurrentContext.ProcessId, e1.Browser.Identifier);
+            //    };
+            //};
+
+            webBrowser =new ChromiumWebBrowser();
+           webBrowser.Dock=DockStyle.Fill;
+
+
+
+            //webBrowser.DisplayHandler.OnConsoleMessage += (s, e) => LogCallback(s, e);
+            //webBrowser.DisplayHandler.OnTitleChange += (s, e) => LogCallback(s, e);
+            //webBrowser.DisplayHandler.OnStatusMessage += (s, e) => LogCallback(s, e);
+
+            //webBrowser.DisplayHandler.OnTitleChange += (s, e) => {
+            //    var wb = ChromiumWebBrowser.FromCfxBrowser(e.Browser);
+            //    LogWriteLine("ChromiumWebBrowser.FromCfxBrowser(e.Browser) == WebBrowser: {0}", wb == webBrowser);
+            //    var title = e.Title;
+            //    BeginInvoke((MethodInvoker)(() => Text = "ChromiumWebBrowser - " + title));
+            //};
+
+            //加上这句,弹出的窗口就会有标题栏,可以关闭,否则无法操作弹出的新窗口,无法关闭...
+            webBrowser.LifeSpanHandler.OnBeforePopup += (s, e) =>
+            {
+                //LogCallback(s, e);
+            };
+
+            //webBrowser.LoadHandler.OnLoadingStateChange += (s, e) => {
+            //    if (e.IsLoading) return;
+            //    //BeginInvoke((MethodInvoker)(() => {
+                    
+            //    //}));
+            //};
+
+            //webBrowser.FindToolbar.Visible = true;
+
+            panel1.Controls.Add(webBrowser);
+            panel1.Refresh();
+            //CfxRuntime.DoMessageLoopWork();
+        }
+
+        void LogCallback(params object[] parameters)
+        {
+
+            var callee = new StackFrame(1, false).GetMethod();
+            //System.Text.StringBuilder sb = new System.Text.StringBuilder();
+            //sb.Append("Callback: ");
+            //sb.Append(callee.Name);
+            //sb.Append("(");
+            var pm = callee.GetParameters();
+            //for (var i = 0; i <= pm.Length - 1; i++)
+            //{
+            //    sb.Append(pm[i].Name);
+            //    if (parameters.Length > i)
+            //    {
+            //        sb.Append(" = {");
+            //        if (parameters[i] != null)
+            //        {
+            //            sb.Append(parameters[i].ToString());
+            //        }
+            //        else
+            //        {
+            //            sb.Append("null");
+            //        }
+            //        sb.Append("}");
+            //    }
+            //    if (i < pm.Length - 1)
+            //    {
+            //        sb.Append(", ");
+            //    }
+            //}
+            //sb.Append(")");
+            //LogWriteLine(sb.ToString());
+        }
+
+        private void button1_Click_1(object sender, EventArgs e)
+        {
+            var url = textBox1.Text;
+
+            webBrowser.LoadUrl(url);
+            webBrowser.Refresh();
+        }
+
+        public void LogWriteLine()
+        {
+            LogWrite(Environment.NewLine);
+        }
+
+        public void LogWriteLine(string msg)
+        {
+            LogWrite(msg + Environment.NewLine);
+        }
+
+        public void LogWriteLine(string msg, params object[] parameters)
+        {
+            LogWrite(msg + Environment.NewLine, parameters);
+        }
+
+        public void LogWrite(string msg, params object[] parameters)
+        {
+            LogWrite(string.Format(msg, parameters));
+        }
+
+        public void LogWrite(string msg)
+        {
+
+            if (InvokeRequired)
+            {
+                Invoke((MethodInvoker)(() => { LogWrite("(*)" + msg); }));
+                return;
+            }
+
+           Console.WriteLine(msg);
+
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Form1.resx
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Form1.resx	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,120 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Program.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Program.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,117 @@
+﻿using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Linq;
+using System.Threading.Tasks;
+using System.Windows.Forms;
+using Chromium;
+using Chromium.Event;
+using Chromium.WebBrowser;
+using Chromium.WebBrowser.Event;
+
+namespace ceftest
+{
+    static class Program
+    {
+        static string logPath;
+        private static string cachePath;
+        private static string userPath;
+        /// <summary>
+        /// 应用程序的主入口点。
+        /// </summary>
+        [STAThread]
+        static void Main()
+        {
+            var assemblyDir = System.IO.Path.GetDirectoryName(new System.Uri(System.Reflection.Assembly.GetExecutingAssembly().CodeBase).LocalPath);
+
+            logPath = Path.Combine(assemblyDir, "debug.log");
+
+            cachePath = Path.Combine(assemblyDir, "cache");
+            if (!Directory.Exists(cachePath))
+            {
+                Directory.CreateDirectory(cachePath);
+            }
+            userPath= Path.Combine(assemblyDir, "temp");
+            if (!Directory.Exists(userPath))
+            {
+                Directory.CreateDirectory(userPath);
+            }
+
+
+            Console.WriteLine(assemblyDir);
+            Environment.CurrentDirectory = assemblyDir;//System.IO.Path.Combine(assemblyDir, @"..\..\");
+
+            if (CfxRuntime.PlatformArch == CfxPlatformArch.x64)
+                CfxRuntime.LibCefDirPath = @"cef/Release64";
+            else
+                CfxRuntime.LibCefDirPath = @"cef/Release";
+
+           
+            
+
+            Chromium.WebBrowser.ChromiumWebBrowser.OnBeforeCfxInitialize += ChromiumWebBrowser_OnBeforeCfxInitialize;
+            ChromiumWebBrowser.OnBeforeCommandLineProcessing += ChromiumWebBrowser_OnBeforeCommandLineProcessing;
+            Chromium.WebBrowser.ChromiumWebBrowser.Initialize();
+
+
+            //Walkthrough01.Main();
+            //return;
+            //CfxRuntime.RunMessageLoop();
+
+
+            Application.ApplicationExit += Application_ApplicationExit;
+            Application.EnableVisualStyles();
+            Application.SetCompatibleTextRenderingDefault(false);
+            Application.Run(new Form1());
+
+            //CfxRuntime.Shutdown();
+
+
+        }
+
+        private static void Application_ApplicationExit(object sender, EventArgs e)
+        {
+
+            //CfxRuntime.QuitMessageLoop();
+            CfxRuntime.Shutdown();
+        }
+
+        static void ChromiumWebBrowser_OnBeforeCommandLineProcessing(CfxOnBeforeCommandLineProcessingEventArgs e)
+        {
+            Console.WriteLine("ChromiumWebBrowser_OnBeforeCommandLineProcessing");
+            e.CommandLine.AppendArgument("--disable-gpu");
+
+            //e.CommandLine.AppendSwitchWithValue("renderer-cmd-prefix", "spawnscript");
+            //e.CommandLine.AppendSwitchWithValue("utility-cmd-prefix", "spawnscript");
+
+            e.CommandLine.AppendSwitch("disable-gpu-compositing");
+            // e.CommandLine.AppendSwitch("disable-gpu-vsync");
+            Console.WriteLine(e.CommandLine.CommandLineString);
+
+        }
+
+        static void ChromiumWebBrowser_OnBeforeCfxInitialize(OnBeforeCfxInitializeEventArgs e)
+        {
+            // e.Settings.MultiThreadedMessageLoop = false;
+            // e.Settings.ExternalMessagePump = true;//ExternalMessagePump= true;
+            var lang = e.Settings.AcceptLanguageList;
+            Console.WriteLine("lang-list" + lang);
+            Console.WriteLine("ua" + e.Settings.UserAgent);
+            e.Settings.NoSandbox = true;
+            e.Settings.CachePath = cachePath;
+            e.Settings.UserDataPath = userPath;
+            e.Settings.LogFile = logPath;
+            e.Settings.WindowlessRenderingEnabled = false;
+
+            e.Settings.LogSeverity = CfxLogSeverity.Verbose;
+            e.Settings.AcceptLanguageList = "*";
+            e.Settings.IgnoreCertificateErrors = true;
+            e.Settings.EnableNetSecurityExpiration = false;
+            e.Settings.PersistUserPreferences = false;
+            e.Settings.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36";
+
+            e.Settings.LocalesDirPath = System.IO.Path.GetFullPath(@"cef/Resources/locales");
+            e.Settings.ResourcesDirPath = System.IO.Path.GetFullPath(@"cef/Resources");
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Properties/AssemblyInfo.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Properties/AssemblyInfo.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,36 @@
+﻿using System.Reflection;
+using System.Runtime.CompilerServices;
+using System.Runtime.InteropServices;
+
+// 有关程序集的一般信息由以下
+// 控制。更改这些特性值可修改
+// 与程序集关联的信息。
+[assembly: AssemblyTitle("ceftest")]
+[assembly: AssemblyDescription("")]
+[assembly: AssemblyConfiguration("")]
+[assembly: AssemblyCompany("")]
+[assembly: AssemblyProduct("ceftest")]
+[assembly: AssemblyCopyright("Copyright ©  2017")]
+[assembly: AssemblyTrademark("")]
+[assembly: AssemblyCulture("")]
+
+// 将 ComVisible 设置为 false 会使此程序集中的类型
+//对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型
+//请将此类型的 ComVisible 特性设置为 true。
+[assembly: ComVisible(false)]
+
+// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID
+[assembly: Guid("5dfd720f-8a74-4d3b-855d-0e624a497e58")]
+
+// 程序集的版本信息由下列四个值组成: 
+//
+//      主版本
+//      次版本
+//      生成号
+//      修订号
+//
+// 可以指定所有值，也可以使用以下所示的 "*" 预置版本号和修订号
+// 方法是按如下所示使用“*”: :
+// [assembly: AssemblyVersion("1.0.*")]
+[assembly: AssemblyVersion("1.0.0.0")]
+[assembly: AssemblyFileVersion("1.0.0.0")]
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Properties/Resources.Designer.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Properties/Resources.Designer.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,71 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     此代码由工具生成。
+//     运行时版本: 4.0.30319.42000
+//
+//     对此文件的更改可能导致不正确的行为，如果
+//     重新生成代码，则所做更改将丢失。
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace ceftest.Properties
+{
+
+
+    /// <summary>
+    ///   强类型资源类，用于查找本地化字符串等。
+    /// </summary>
+    // 此类是由 StronglyTypedResourceBuilder
+    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
+    // 若要添加或删除成员，请编辑 .ResX 文件，然后重新运行 ResGen
+    // (以 /str 作为命令选项)，或重新生成 VS 项目。
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
+    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    internal class Resources
+    {
+
+        private static global::System.Resources.ResourceManager resourceMan;
+
+        private static global::System.Globalization.CultureInfo resourceCulture;
+
+        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        internal Resources()
+        {
+        }
+
+        /// <summary>
+        ///   返回此类使用的缓存 ResourceManager 实例。
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Resources.ResourceManager ResourceManager
+        {
+            get
+            {
+                if ((resourceMan == null))
+                {
+                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ceftest.Properties.Resources", typeof(Resources).Assembly);
+                    resourceMan = temp;
+                }
+                return resourceMan;
+            }
+        }
+
+        /// <summary>
+        ///   覆盖当前线程的 CurrentUICulture 属性
+        ///   使用此强类型的资源类的资源查找。
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Globalization.CultureInfo Culture
+        {
+            get
+            {
+                return resourceCulture;
+            }
+            set
+            {
+                resourceCulture = value;
+            }
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Properties/Resources.resx
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Properties/Resources.resx	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,117 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Properties/Settings.Designer.cs
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Properties/Settings.Designer.cs	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,30 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace ceftest.Properties
+{
+
+
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
+    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
+    {
+
+        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
+
+        public static Settings Default
+        {
+            get
+            {
+                return defaultInstance;
+            }
+        }
+    }
+}
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/Properties/Settings.settings
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/Properties/Settings.settings	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,7 @@
+﻿<?xml version='1.0' encoding='utf-8'?>
+<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)">
+  <Profiles>
+    <Profile Name="(Default)" />
+  </Profiles>
+  <Settings />
+</SettingsFile>
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/ceftest-mono.csproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/ceftest-mono.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,106 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
+    <ProjectGuid>{7D309C8E-15B1-4988-BE6B-49037C57E69F}</ProjectGuid>
+    <OutputType>WinExe</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>ceftest</RootNamespace>
+    <FileAlignment>512</FileAlignment>
+    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
+    <PlatformTarget>x64</PlatformTarget>
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <UseVSHostingProcess>false</UseVSHostingProcess>
+    <AssemblyName>ceftest</AssemblyName>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
+    <PlatformTarget>x86</PlatformTarget>
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <UseVSHostingProcess>false</UseVSHostingProcess>
+    <AssemblyName>ceftest</AssemblyName>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <PropertyGroup>
+    <StartupObject>ceftest.Program</StartupObject>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
+    <DebugSymbols>true</DebugSymbols>
+    <OutputPath>..\Build\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <DebugType>full</DebugType>
+    <UseVSHostingProcess>false</UseVSHostingProcess>
+    <ErrorReport>prompt</ErrorReport>
+    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
+    <WarningLevel>4</WarningLevel>
+    <Optimize>false</Optimize>
+    <AssemblyName>CfxTestBrowser</AssemblyName>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
+    <OutputPath>..\Build\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <Optimize>true</Optimize>
+    <DebugType>pdbonly</DebugType>
+    <PlatformTarget>AnyCPU</PlatformTarget>
+    <UseVSHostingProcess>false</UseVSHostingProcess>
+    <ErrorReport>prompt</ErrorReport>
+    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
+    <WarningLevel>4</WarningLevel>
+    <AssemblyName>CfxTestBrowser</AssemblyName>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'x64|AnyCPU' ">
+    <Optimize>false</Optimize>
+    <OutputPath>bin\x64</OutputPath>
+    <WarningLevel>4</WarningLevel>
+    <AssemblyName>ceftest-mono</AssemblyName>
+    <PlatformTarget>x64</PlatformTarget>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="Microsoft.CSharp" />
+    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System.Drawing" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="Properties\AssemblyInfo.cs" />
+    <Compile Include="Form1.cs" />
+    <Compile Include="Form1.Designer.cs" />
+    <None Include="Form1.resx" />
+    <Compile Include="Program.cs" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\ChromiumFX\ChromiumFX.csproj">
+      <Project>{36972B7C-3A3A-465F-B064-51B525FD4C14}</Project>
+      <Name>ChromiumFX</Name>
+    </ProjectReference>
+    <ProjectReference Include="..\ChromiumWebBrowser\ChromiumWebBrowser.csproj">
+      <Project>{F94EAB75-C33F-4F69-9E26-8C3B48141DAA}</Project>
+      <Name>ChromiumWebBrowser</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+</Project>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 ceftest/ceftest.csproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ceftest/ceftest.csproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,93 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{5DFD720F-8A74-4D3B-855D-0E624A497E58}</ProjectGuid>
+    <OutputType>WinExe</OutputType>
+    <RootNamespace>ceftest</RootNamespace>
+    <AssemblyName>ceftest</AssemblyName>
+    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
+    <FileAlignment>512</FileAlignment>
+    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <PlatformTarget>AnyCPU</PlatformTarget>
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+    <Prefer32Bit>false</Prefer32Bit>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <PlatformTarget>AnyCPU</PlatformTarget>
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="System" />
+    <Reference Include="System.Core" />
+    <Reference Include="System.Xml.Linq" />
+    <Reference Include="System.Data.DataSetExtensions" />
+    <Reference Include="Microsoft.CSharp" />
+    <Reference Include="System.Data" />
+    <Reference Include="System.Deployment" />
+    <Reference Include="System.Drawing" />
+    <Reference Include="System.Net.Http" />
+    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="Form1.cs">
+      <SubType>Form</SubType>
+    </Compile>
+    <Compile Include="Form1.Designer.cs">
+      <DependentUpon>Form1.cs</DependentUpon>
+    </Compile>
+    <Compile Include="Program.cs" />
+    <Compile Include="Properties\AssemblyInfo.cs" />
+    <EmbeddedResource Include="Form1.resx">
+      <DependentUpon>Form1.cs</DependentUpon>
+    </EmbeddedResource>
+    <EmbeddedResource Include="Properties\Resources.resx">
+      <Generator>ResXFileCodeGenerator</Generator>
+      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
+      <SubType>Designer</SubType>
+    </EmbeddedResource>
+    <Compile Include="Properties\Resources.Designer.cs">
+      <AutoGen>True</AutoGen>
+      <DependentUpon>Resources.resx</DependentUpon>
+    </Compile>
+    <None Include="Properties\Settings.settings">
+      <Generator>SettingsSingleFileGenerator</Generator>
+      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
+    </None>
+    <Compile Include="Properties\Settings.Designer.cs">
+      <AutoGen>True</AutoGen>
+      <DependentUpon>Settings.settings</DependentUpon>
+      <DesignTimeSharedInput>True</DesignTimeSharedInput>
+    </Compile>
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="App.config" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\ChromiumFX\ChromiumFX.csproj">
+      <Project>{36972b7c-3a3a-465f-b064-51b525fd4c14}</Project>
+      <Name>ChromiumFX</Name>
+    </ProjectReference>
+    <ProjectReference Include="..\ChromiumWebBrowser\ChromiumWebBrowser.csproj">
+      <Project>{f94eab75-c33f-4f69-9e26-8c3b48141daa}</Project>
+      <Name>ChromiumWebBrowser</Name>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+</Project>
\ No newline at end of file
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx/Generated/cfx_display_handler.c
--- a/libcfx/Generated/cfx_display_handler.c	Wed Aug 02 13:11:56 2017 +0800
+++ b/libcfx/Generated/cfx_display_handler.c	Wed Aug 02 14:10:44 2017 +0800
@@ -102,7 +102,7 @@
     if(text_tmp_str != text->str) {
         if(text->dtor) text->dtor(text->str);
         cef_string_set(text_tmp_str, text_tmp_length, text, 1);
-        cfx_gc_handle_switch(&(gc_handle_t)text_tmp_str, GC_HANDLE_FREE);
+        cfx_gc_handle_switch((gc_handle_t)text_tmp_str, GC_HANDLE_FREE);
     }
     return __retval;
 }
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx/Generated/cfx_menu_model_delegate.c
--- a/libcfx/Generated/cfx_menu_model_delegate.c	Wed Aug 02 13:11:56 2017 +0800
+++ b/libcfx/Generated/cfx_menu_model_delegate.c	Wed Aug 02 14:10:44 2017 +0800
@@ -116,7 +116,7 @@
     if(label_tmp_str != label->str) {
         if(label->dtor) label->dtor(label->str);
         cef_string_set(label_tmp_str, label_tmp_length, label, 1);
-        cfx_gc_handle_switch(&(gc_handle_t)label_tmp_str, GC_HANDLE_FREE);
+        cfx_gc_handle_switch((gc_handle_t)label_tmp_str, GC_HANDLE_FREE);
     }
     return __retval;
 }
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx/Generated/cfx_request_handler.c
--- a/libcfx/Generated/cfx_request_handler.c	Wed Aug 02 13:11:56 2017 +0800
+++ b/libcfx/Generated/cfx_request_handler.c	Wed Aug 02 14:10:44 2017 +0800
@@ -141,7 +141,7 @@
     if(new_url_tmp_str != new_url->str) {
         if(new_url->dtor) new_url->dtor(new_url->str);
         cef_string_set(new_url_tmp_str, new_url_tmp_length, new_url, 1);
-        cfx_gc_handle_switch(&(gc_handle_t)new_url_tmp_str, GC_HANDLE_FREE);
+        cfx_gc_handle_switch((gc_handle_t)new_url_tmp_str, GC_HANDLE_FREE);
     }
 }
 
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx/libcfx.vcxproj
--- a/libcfx/libcfx.vcxproj	Wed Aug 02 13:11:56 2017 +0800
+++ b/libcfx/libcfx.vcxproj	Wed Aug 02 14:10:44 2017 +0800
@@ -27,6 +27,7 @@
   <PropertyGroup Label="Globals">
     <ProjectGuid>{64ED684B-187D-4D21-903C-DA5067F8F066}</ProjectGuid>
     <RootNamespace>CfxBindings</RootNamespace>
+    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx64/libcfx64-Mono.cproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/libcfx64/libcfx64-Mono.cproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{660A63B1-3101-4AB4-9BFD-AB5110458D44}</ProjectGuid>
+    <Compiler>
+      <Compiler ctype="GppCompiler" />
+    </Compiler>
+    <Language>CPP</Language>
+    <Target>Bin</Target>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <OutputPath>..\Build\Debug</OutputPath>
+    <OutputName>libcfx64</OutputName>
+    <CompileTarget>StaticLibrary</CompileTarget>
+    <DefineSymbols>DEBUG CFX_LINUX</DefineSymbols>
+    <SourceDirectory>.</SourceDirectory>
+    <WarningLevel>All</WarningLevel>
+    <Includes>
+      <Includes>
+        <Include>${ProjectDir}/../cef/</Include>
+        <Include>${ProjectDir}/../libcfx/Generated</Include>
+      </Includes>
+    </Includes>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <OutputPath>..\Build\Release</OutputPath>
+    <OutputName>libcfx64</OutputName>
+    <CompileTarget>SharedLibrary</CompileTarget>
+    <OptimizationLevel>3</OptimizationLevel>
+    <DefineSymbols>CFX_LINUX</DefineSymbols>
+    <SourceDirectory>.</SourceDirectory>
+    <Includes>
+      <Includes>
+        <Include>${ProjectDir}/../cef/</Include>
+        <Include>${ProjectDir}/../libcfx/Generated</Include>
+      </Includes>
+    </Includes>
+    <WarningLevel>All</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Compile Include="..\libcfx\Source\libcfx.c">
+      <Link>libcfx.c</Link>
+    </Compile>
+  </ItemGroup>
+</Project>
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx64/libcfx64-Mono.md.pc
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/libcfx64/libcfx64-Mono.md.pc	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,5 @@
+Name: libcfx64-Mono
+Description: 
+Version: 0.1
+Libs: -L"/zfspool/pdata/azraelrabbit/chromiumfx/Build/Debug" -lcfx64
+Cflags: -I""
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx64/libcfx64.cproj
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/libcfx64/libcfx64.cproj	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{660A63B1-3101-4AB4-9BFD-AB5110458D44}</ProjectGuid>
+    <Compiler>
+      <Compiler ctype="GccCompiler" />
+    </Compiler>
+    <Language>C</Language>
+    <Target>Bin</Target>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <OutputPath>..\Build\Debug</OutputPath>
+    <OutputName>libcfx64</OutputName>
+    <CompileTarget>SharedLibrary</CompileTarget>
+    <DefineSymbols>DEBUG CFX_LINUX</DefineSymbols>
+    <SourceDirectory>.</SourceDirectory>
+    <WarningLevel>All</WarningLevel>
+    <Includes>
+      <Includes>
+        <Include>${ProjectDir}/../cef/</Include>
+        <Include>${ProjectDir}/../libcfx/Generated</Include>
+      </Includes>
+    </Includes>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <OutputPath>..\Build\Release</OutputPath>
+    <OutputName>libcfx64</OutputName>
+    <CompileTarget>SharedLibrary</CompileTarget>
+    <OptimizationLevel>3</OptimizationLevel>
+    <DefineSymbols>CFX_LINUX</DefineSymbols>
+    <SourceDirectory>.</SourceDirectory>
+    <Includes>
+      <Includes>
+        <Include>${ProjectDir}/../cef/</Include>
+        <Include>${ProjectDir}/../libcfx/Generated</Include>
+      </Includes>
+    </Includes>
+    <WarningLevel>All</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Compile Include="..\libcfx\Source\libcfx.c">
+      <Link>libcfx.c</Link>
+    </Compile>
+  </ItemGroup>
+</Project>
diff -r 2f7a09cb4d98 -r f4ebc01d1aa9 libcfx64/libcfx64.md.pc
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/libcfx64/libcfx64.md.pc	Wed Aug 02 14:10:44 2017 +0800
@@ -0,0 +1,5 @@
+Name: libcfx64
+Description: 
+Version: 0.1
+Libs: -L"/zfspool/pdata/chromiumfx/Build/Debug" -lcfx64
+Cflags: -I""
