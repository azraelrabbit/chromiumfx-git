// Copyright (c) 2014-2015 Wolfgang BorgsmÃ¼ller
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions 
// are met:
// 
// 1. Redistributions of source code must retain the above copyright 
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
//    notice, this list of conditions and the following disclaimer in the 
//    documentation and/or other materials provided with the distribution.
// 
// 3. Neither the name of the copyright holder nor the names of its 
//    contributors may be used to endorse or promote products derived 
//    from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
// OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
// TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Generated file. Do not edit.


using System;

namespace Chromium.Remote {
    internal class RemoteCallFactory {
        private delegate RemoteCall RemoteCallCtor();
        private static RemoteCallCtor[] callConstructors =  {
            () => { return new CfrMarshalAllocHGlobalRemoteCall(); },
            () => { return new CfrMarshalCopyToManagedRemoteCall(); },
            () => { return new CfrMarshalCopyToNativeRemoteCall(); },
            () => { return new CfrMarshalFreeHGlobalRemoteCall(); },
            () => { return new CfxAppCtorRemoteCall(); },
            () => { return new CfxBinaryValueCopyRemoteCall(); },
            () => { return new CfxBinaryValueCreateFromArrayRemoteCall(); },
            () => { return new CfxBinaryValueCreateRemoteCall(); },
            () => { return new CfxBinaryValueGetDataRemoteCall(); },
            () => { return new CfxBinaryValueGetSizeRemoteCall(); },
            () => { return new CfxBinaryValueIsEqualRemoteCall(); },
            () => { return new CfxBinaryValueIsOwnedRemoteCall(); },
            () => { return new CfxBinaryValueIsSameRemoteCall(); },
            () => { return new CfxBinaryValueIsValidRemoteCall(); },
            () => { return new CfxBrowserCanGoBackRemoteCall(); },
            () => { return new CfxBrowserCanGoForwardRemoteCall(); },
            () => { return new CfxBrowserGetFocusedFrameRemoteCall(); },
            () => { return new CfxBrowserGetFrameByIdentifierRemoteCall(); },
            () => { return new CfxBrowserGetFrameCountRemoteCall(); },
            () => { return new CfxBrowserGetFrameIdentifiersRemoteCall(); },
            () => { return new CfxBrowserGetFrameNamesRemoteCall(); },
            () => { return new CfxBrowserGetFrameRemoteCall(); },
            () => { return new CfxBrowserGetIdentifierRemoteCall(); },
            () => { return new CfxBrowserGetMainFrameRemoteCall(); },
            () => { return new CfxBrowserGoBackRemoteCall(); },
            () => { return new CfxBrowserGoForwardRemoteCall(); },
            () => { return new CfxBrowserHasDocumentRemoteCall(); },
            () => { return new CfxBrowserIsLoadingRemoteCall(); },
            () => { return new CfxBrowserIsPopupRemoteCall(); },
            () => { return new CfxBrowserIsSameRemoteCall(); },
            () => { return new CfxBrowserReloadIgnoreCacheRemoteCall(); },
            () => { return new CfxBrowserReloadRemoteCall(); },
            () => { return new CfxBrowserSendProcessMessageRemoteCall(); },
            () => { return new CfxBrowserStopLoadRemoteCall(); },
            () => { return new CfxCommandLineAppendArgumentRemoteCall(); },
            () => { return new CfxCommandLineAppendSwitchRemoteCall(); },
            () => { return new CfxCommandLineAppendSwitchWithValueRemoteCall(); },
            () => { return new CfxCommandLineCopyRemoteCall(); },
            () => { return new CfxCommandLineCreateRemoteCall(); },
            () => { return new CfxCommandLineGetArgumentsRemoteCall(); },
            () => { return new CfxCommandLineGetArgvRemoteCall(); },
            () => { return new CfxCommandLineGetCommandLineStringRemoteCall(); },
            () => { return new CfxCommandLineGetGlobalRemoteCall(); },
            () => { return new CfxCommandLineGetProgramRemoteCall(); },
            () => { return new CfxCommandLineGetSwitchesRemoteCall(); },
            () => { return new CfxCommandLineGetSwitchValueRemoteCall(); },
            () => { return new CfxCommandLineHasArgumentsRemoteCall(); },
            () => { return new CfxCommandLineHasSwitchesRemoteCall(); },
            () => { return new CfxCommandLineHasSwitchRemoteCall(); },
            () => { return new CfxCommandLineInitFromArgvRemoteCall(); },
            () => { return new CfxCommandLineInitFromStringRemoteCall(); },
            () => { return new CfxCommandLineIsReadOnlyRemoteCall(); },
            () => { return new CfxCommandLineIsValidRemoteCall(); },
            () => { return new CfxCommandLinePrependWrapperRemoteCall(); },
            () => { return new CfxCommandLineResetRemoteCall(); },
            () => { return new CfxCommandLineSetProgramRemoteCall(); },
            () => { return new CfxDictionaryValueClearRemoteCall(); },
            () => { return new CfxDictionaryValueCopyRemoteCall(); },
            () => { return new CfxDictionaryValueCreateRemoteCall(); },
            () => { return new CfxDictionaryValueGetBinaryRemoteCall(); },
            () => { return new CfxDictionaryValueGetBoolRemoteCall(); },
            () => { return new CfxDictionaryValueGetDictionaryRemoteCall(); },
            () => { return new CfxDictionaryValueGetDoubleRemoteCall(); },
            () => { return new CfxDictionaryValueGetIntRemoteCall(); },
            () => { return new CfxDictionaryValueGetKeysRemoteCall(); },
            () => { return new CfxDictionaryValueGetListRemoteCall(); },
            () => { return new CfxDictionaryValueGetSizeRemoteCall(); },
            () => { return new CfxDictionaryValueGetStringRemoteCall(); },
            () => { return new CfxDictionaryValueGetTypeRemoteCall(); },
            () => { return new CfxDictionaryValueGetValueRemoteCall(); },
            () => { return new CfxDictionaryValueHasKeyRemoteCall(); },
            () => { return new CfxDictionaryValueIsEqualRemoteCall(); },
            () => { return new CfxDictionaryValueIsOwnedRemoteCall(); },
            () => { return new CfxDictionaryValueIsReadOnlyRemoteCall(); },
            () => { return new CfxDictionaryValueIsSameRemoteCall(); },
            () => { return new CfxDictionaryValueIsValidRemoteCall(); },
            () => { return new CfxDictionaryValueRemoveRemoteCall(); },
            () => { return new CfxDictionaryValueSetBinaryRemoteCall(); },
            () => { return new CfxDictionaryValueSetBoolRemoteCall(); },
            () => { return new CfxDictionaryValueSetDictionaryRemoteCall(); },
            () => { return new CfxDictionaryValueSetDoubleRemoteCall(); },
            () => { return new CfxDictionaryValueSetIntRemoteCall(); },
            () => { return new CfxDictionaryValueSetListRemoteCall(); },
            () => { return new CfxDictionaryValueSetNullRemoteCall(); },
            () => { return new CfxDictionaryValueSetStringRemoteCall(); },
            () => { return new CfxDictionaryValueSetValueRemoteCall(); },
            () => { return new CfxDomDocumentGetBaseUrlRemoteCall(); },
            () => { return new CfxDomDocumentGetBodyRemoteCall(); },
            () => { return new CfxDomDocumentGetCompleteUrlRemoteCall(); },
            () => { return new CfxDomDocumentGetDocumentRemoteCall(); },
            () => { return new CfxDomDocumentGetElementByIdRemoteCall(); },
            () => { return new CfxDomDocumentGetFocusedNodeRemoteCall(); },
            () => { return new CfxDomDocumentGetHeadRemoteCall(); },
            () => { return new CfxDomDocumentGetSelectionAsMarkupRemoteCall(); },
            () => { return new CfxDomDocumentGetSelectionAsTextRemoteCall(); },
            () => { return new CfxDomDocumentGetSelectionEndOffsetRemoteCall(); },
            () => { return new CfxDomDocumentGetSelectionStartOffsetRemoteCall(); },
            () => { return new CfxDomDocumentGetTitleRemoteCall(); },
            () => { return new CfxDomDocumentGetTypeRemoteCall(); },
            () => { return new CfxDomDocumentHasSelectionRemoteCall(); },
            () => { return new CfxDomNodeGetAsMarkupRemoteCall(); },
            () => { return new CfxDomNodeGetDocumentRemoteCall(); },
            () => { return new CfxDomNodeGetElementAttributeRemoteCall(); },
            () => { return new CfxDomNodeGetElementAttributesRemoteCall(); },
            () => { return new CfxDomNodeGetElementBoundsRemoteCall(); },
            () => { return new CfxDomNodeGetElementInnerTextRemoteCall(); },
            () => { return new CfxDomNodeGetElementTagNameRemoteCall(); },
            () => { return new CfxDomNodeGetFirstChildRemoteCall(); },
            () => { return new CfxDomNodeGetFormControlElementTypeRemoteCall(); },
            () => { return new CfxDomNodeGetLastChildRemoteCall(); },
            () => { return new CfxDomNodeGetNameRemoteCall(); },
            () => { return new CfxDomNodeGetNextSiblingRemoteCall(); },
            () => { return new CfxDomNodeGetParentRemoteCall(); },
            () => { return new CfxDomNodeGetPreviousSiblingRemoteCall(); },
            () => { return new CfxDomNodeGetTypeRemoteCall(); },
            () => { return new CfxDomNodeGetValueRemoteCall(); },
            () => { return new CfxDomNodeHasChildrenRemoteCall(); },
            () => { return new CfxDomNodeHasElementAttributeRemoteCall(); },
            () => { return new CfxDomNodeHasElementAttributesRemoteCall(); },
            () => { return new CfxDomNodeIsEditableRemoteCall(); },
            () => { return new CfxDomNodeIsElementRemoteCall(); },
            () => { return new CfxDomNodeIsFormControlElementRemoteCall(); },
            () => { return new CfxDomNodeIsSameRemoteCall(); },
            () => { return new CfxDomNodeIsTextRemoteCall(); },
            () => { return new CfxDomNodeSetElementAttributeRemoteCall(); },
            () => { return new CfxDomNodeSetValueRemoteCall(); },
            () => { return new CfxDomVisitorCtorRemoteCall(); },
            () => { return new CfxDomVisitorVisitActivateRemoteCall(); },
            () => { return new CfxDomVisitorVisitDeactivateRemoteCall(); },
            () => { return new CfxDomVisitorVisitGetDocumentRemoteCall(); },
            () => { return new CfxDomVisitorVisitRemoteClientCall(); },
            () => { return new CfxFrameCopyRemoteCall(); },
            () => { return new CfxFrameCutRemoteCall(); },
            () => { return new CfxFrameDelRemoteCall(); },
            () => { return new CfxFrameExecuteJavaScriptRemoteCall(); },
            () => { return new CfxFrameGetBrowserRemoteCall(); },
            () => { return new CfxFrameGetIdentifierRemoteCall(); },
            () => { return new CfxFrameGetNameRemoteCall(); },
            () => { return new CfxFrameGetParentRemoteCall(); },
            () => { return new CfxFrameGetSourceRemoteCall(); },
            () => { return new CfxFrameGetTextRemoteCall(); },
            () => { return new CfxFrameGetUrlRemoteCall(); },
            () => { return new CfxFrameGetV8ContextRemoteCall(); },
            () => { return new CfxFrameIsFocusedRemoteCall(); },
            () => { return new CfxFrameIsMainRemoteCall(); },
            () => { return new CfxFrameIsValidRemoteCall(); },
            () => { return new CfxFrameLoadRequestRemoteCall(); },
            () => { return new CfxFrameLoadStringRemoteCall(); },
            () => { return new CfxFrameLoadUrlRemoteCall(); },
            () => { return new CfxFramePasteRemoteCall(); },
            () => { return new CfxFrameRedoRemoteCall(); },
            () => { return new CfxFrameSelectAllRemoteCall(); },
            () => { return new CfxFrameUndoRemoteCall(); },
            () => { return new CfxFrameVisitDomRemoteCall(); },
            () => { return new CfxGetByIndexActivateRemoteCall(); },
            () => { return new CfxGetByIndexDeactivateRemoteCall(); },
            () => { return new CfxGetByIndexGetExceptionRemoteCall(); },
            () => { return new CfxGetByIndexGetIndexRemoteCall(); },
            () => { return new CfxGetByIndexGetObjectRemoteCall(); },
            () => { return new CfxGetByIndexRemoteClientCall(); },
            () => { return new CfxGetByIndexSetExceptionRemoteCall(); },
            () => { return new CfxGetByIndexSetReturnValueRemoteCall(); },
            () => { return new CfxGetByIndexSetRetvalRemoteCall(); },
            () => { return new CfxGetByNameActivateRemoteCall(); },
            () => { return new CfxGetByNameDeactivateRemoteCall(); },
            () => { return new CfxGetByNameGetExceptionRemoteCall(); },
            () => { return new CfxGetByNameGetNameRemoteCall(); },
            () => { return new CfxGetByNameGetObjectRemoteCall(); },
            () => { return new CfxGetByNameRemoteClientCall(); },
            () => { return new CfxGetByNameSetExceptionRemoteCall(); },
            () => { return new CfxGetByNameSetReturnValueRemoteCall(); },
            () => { return new CfxGetByNameSetRetvalRemoteCall(); },
            () => { return new CfxGetDataResourceActivateRemoteCall(); },
            () => { return new CfxGetDataResourceDeactivateRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleActivateRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleDeactivateRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleGetResourceIdRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleGetScaleFactorRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleRemoteClientCall(); },
            () => { return new CfxGetDataResourceForScaleSetDataRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleSetDataSizeRemoteCall(); },
            () => { return new CfxGetDataResourceForScaleSetReturnValueRemoteCall(); },
            () => { return new CfxGetDataResourceGetResourceIdRemoteCall(); },
            () => { return new CfxGetDataResourceRemoteClientCall(); },
            () => { return new CfxGetDataResourceSetDataRemoteCall(); },
            () => { return new CfxGetDataResourceSetDataSizeRemoteCall(); },
            () => { return new CfxGetDataResourceSetReturnValueRemoteCall(); },
            () => { return new CfxGetLoadHandlerActivateRemoteCall(); },
            () => { return new CfxGetLoadHandlerDeactivateRemoteCall(); },
            () => { return new CfxGetLoadHandlerRemoteClientCall(); },
            () => { return new CfxGetLoadHandlerSetReturnValueRemoteCall(); },
            () => { return new CfxGetLocalizedStringActivateRemoteCall(); },
            () => { return new CfxGetLocalizedStringDeactivateRemoteCall(); },
            () => { return new CfxGetLocalizedStringGetStringIdRemoteCall(); },
            () => { return new CfxGetLocalizedStringGetStringRemoteCall(); },
            () => { return new CfxGetLocalizedStringRemoteClientCall(); },
            () => { return new CfxGetLocalizedStringSetReturnValueRemoteCall(); },
            () => { return new CfxGetLocalizedStringSetStringRemoteCall(); },
            () => { return new CfxGetRenderProcessHandlerActivateRemoteCall(); },
            () => { return new CfxGetRenderProcessHandlerDeactivateRemoteCall(); },
            () => { return new CfxGetRenderProcessHandlerRemoteClientCall(); },
            () => { return new CfxGetRenderProcessHandlerSetReturnValueRemoteCall(); },
            () => { return new CfxGetResourceBundleHandlerActivateRemoteCall(); },
            () => { return new CfxGetResourceBundleHandlerDeactivateRemoteCall(); },
            () => { return new CfxGetResourceBundleHandlerRemoteClientCall(); },
            () => { return new CfxGetResourceBundleHandlerSetReturnValueRemoteCall(); },
            () => { return new CfxListValueClearRemoteCall(); },
            () => { return new CfxListValueCopyRemoteCall(); },
            () => { return new CfxListValueCreateRemoteCall(); },
            () => { return new CfxListValueGetBinaryRemoteCall(); },
            () => { return new CfxListValueGetBoolRemoteCall(); },
            () => { return new CfxListValueGetDictionaryRemoteCall(); },
            () => { return new CfxListValueGetDoubleRemoteCall(); },
            () => { return new CfxListValueGetIntRemoteCall(); },
            () => { return new CfxListValueGetListRemoteCall(); },
            () => { return new CfxListValueGetSizeRemoteCall(); },
            () => { return new CfxListValueGetStringRemoteCall(); },
            () => { return new CfxListValueGetTypeRemoteCall(); },
            () => { return new CfxListValueGetValueRemoteCall(); },
            () => { return new CfxListValueIsEqualRemoteCall(); },
            () => { return new CfxListValueIsOwnedRemoteCall(); },
            () => { return new CfxListValueIsReadOnlyRemoteCall(); },
            () => { return new CfxListValueIsSameRemoteCall(); },
            () => { return new CfxListValueIsValidRemoteCall(); },
            () => { return new CfxListValueRemoveRemoteCall(); },
            () => { return new CfxListValueSetBinaryRemoteCall(); },
            () => { return new CfxListValueSetBoolRemoteCall(); },
            () => { return new CfxListValueSetDictionaryRemoteCall(); },
            () => { return new CfxListValueSetDoubleRemoteCall(); },
            () => { return new CfxListValueSetIntRemoteCall(); },
            () => { return new CfxListValueSetListRemoteCall(); },
            () => { return new CfxListValueSetNullRemoteCall(); },
            () => { return new CfxListValueSetSizeRemoteCall(); },
            () => { return new CfxListValueSetStringRemoteCall(); },
            () => { return new CfxListValueSetValueRemoteCall(); },
            () => { return new CfxLoadHandlerCtorRemoteCall(); },
            () => { return new CfxOnBeforeCommandLineProcessingActivateRemoteCall(); },
            () => { return new CfxOnBeforeCommandLineProcessingDeactivateRemoteCall(); },
            () => { return new CfxOnBeforeCommandLineProcessingGetCommandLineRemoteCall(); },
            () => { return new CfxOnBeforeCommandLineProcessingGetProcessTypeRemoteCall(); },
            () => { return new CfxOnBeforeCommandLineProcessingRemoteClientCall(); },
            () => { return new CfxOnBeforeNavigationActivateRemoteCall(); },
            () => { return new CfxOnBeforeNavigationDeactivateRemoteCall(); },
            () => { return new CfxOnBeforeNavigationGetBrowserRemoteCall(); },
            () => { return new CfxOnBeforeNavigationGetFrameRemoteCall(); },
            () => { return new CfxOnBeforeNavigationGetIsRedirectRemoteCall(); },
            () => { return new CfxOnBeforeNavigationGetNavigationTypeRemoteCall(); },
            () => { return new CfxOnBeforeNavigationGetRequestRemoteCall(); },
            () => { return new CfxOnBeforeNavigationRemoteClientCall(); },
            () => { return new CfxOnBeforeNavigationSetReturnValueRemoteCall(); },
            () => { return new CfxOnBrowserCreatedActivateRemoteCall(); },
            () => { return new CfxOnBrowserCreatedDeactivateRemoteCall(); },
            () => { return new CfxOnBrowserCreatedGetBrowserRemoteCall(); },
            () => { return new CfxOnBrowserCreatedRemoteClientCall(); },
            () => { return new CfxOnBrowserDestroyedActivateRemoteCall(); },
            () => { return new CfxOnBrowserDestroyedDeactivateRemoteCall(); },
            () => { return new CfxOnBrowserDestroyedGetBrowserRemoteCall(); },
            () => { return new CfxOnBrowserDestroyedRemoteClientCall(); },
            () => { return new CfxOnContextCreatedActivateRemoteCall(); },
            () => { return new CfxOnContextCreatedDeactivateRemoteCall(); },
            () => { return new CfxOnContextCreatedGetBrowserRemoteCall(); },
            () => { return new CfxOnContextCreatedGetContextRemoteCall(); },
            () => { return new CfxOnContextCreatedGetFrameRemoteCall(); },
            () => { return new CfxOnContextCreatedRemoteClientCall(); },
            () => { return new CfxOnContextReleasedActivateRemoteCall(); },
            () => { return new CfxOnContextReleasedDeactivateRemoteCall(); },
            () => { return new CfxOnContextReleasedGetBrowserRemoteCall(); },
            () => { return new CfxOnContextReleasedGetContextRemoteCall(); },
            () => { return new CfxOnContextReleasedGetFrameRemoteCall(); },
            () => { return new CfxOnContextReleasedRemoteClientCall(); },
            () => { return new CfxOnFocusedNodeChangedActivateRemoteCall(); },
            () => { return new CfxOnFocusedNodeChangedDeactivateRemoteCall(); },
            () => { return new CfxOnFocusedNodeChangedGetBrowserRemoteCall(); },
            () => { return new CfxOnFocusedNodeChangedGetFrameRemoteCall(); },
            () => { return new CfxOnFocusedNodeChangedGetNodeRemoteCall(); },
            () => { return new CfxOnFocusedNodeChangedRemoteClientCall(); },
            () => { return new CfxOnLoadEndActivateRemoteCall(); },
            () => { return new CfxOnLoadEndDeactivateRemoteCall(); },
            () => { return new CfxOnLoadEndGetBrowserRemoteCall(); },
            () => { return new CfxOnLoadEndGetFrameRemoteCall(); },
            () => { return new CfxOnLoadEndGetHttpStatusCodeRemoteCall(); },
            () => { return new CfxOnLoadEndRemoteClientCall(); },
            () => { return new CfxOnLoadErrorActivateRemoteCall(); },
            () => { return new CfxOnLoadErrorDeactivateRemoteCall(); },
            () => { return new CfxOnLoadErrorGetBrowserRemoteCall(); },
            () => { return new CfxOnLoadErrorGetErrorCodeRemoteCall(); },
            () => { return new CfxOnLoadErrorGetErrorTextRemoteCall(); },
            () => { return new CfxOnLoadErrorGetFailedUrlRemoteCall(); },
            () => { return new CfxOnLoadErrorGetFrameRemoteCall(); },
            () => { return new CfxOnLoadErrorRemoteClientCall(); },
            () => { return new CfxOnLoadingStateChangeActivateRemoteCall(); },
            () => { return new CfxOnLoadingStateChangeDeactivateRemoteCall(); },
            () => { return new CfxOnLoadingStateChangeGetBrowserRemoteCall(); },
            () => { return new CfxOnLoadingStateChangeGetCanGoBackRemoteCall(); },
            () => { return new CfxOnLoadingStateChangeGetCanGoForwardRemoteCall(); },
            () => { return new CfxOnLoadingStateChangeGetIsLoadingRemoteCall(); },
            () => { return new CfxOnLoadingStateChangeRemoteClientCall(); },
            () => { return new CfxOnLoadStartActivateRemoteCall(); },
            () => { return new CfxOnLoadStartDeactivateRemoteCall(); },
            () => { return new CfxOnLoadStartGetBrowserRemoteCall(); },
            () => { return new CfxOnLoadStartGetFrameRemoteCall(); },
            () => { return new CfxOnLoadStartGetTransitionTypeRemoteCall(); },
            () => { return new CfxOnLoadStartRemoteClientCall(); },
            () => { return new CfxOnProcessMessageReceivedActivateRemoteCall(); },
            () => { return new CfxOnProcessMessageReceivedDeactivateRemoteCall(); },
            () => { return new CfxOnProcessMessageReceivedGetBrowserRemoteCall(); },
            () => { return new CfxOnProcessMessageReceivedGetMessageRemoteCall(); },
            () => { return new CfxOnProcessMessageReceivedGetSourceProcessRemoteCall(); },
            () => { return new CfxOnProcessMessageReceivedRemoteClientCall(); },
            () => { return new CfxOnProcessMessageReceivedSetReturnValueRemoteCall(); },
            () => { return new CfxOnRegisterCustomSchemesActivateRemoteCall(); },
            () => { return new CfxOnRegisterCustomSchemesDeactivateRemoteCall(); },
            () => { return new CfxOnRegisterCustomSchemesGetRegistrarRemoteCall(); },
            () => { return new CfxOnRegisterCustomSchemesRemoteClientCall(); },
            () => { return new CfxOnRenderThreadCreatedActivateRemoteCall(); },
            () => { return new CfxOnRenderThreadCreatedDeactivateRemoteCall(); },
            () => { return new CfxOnRenderThreadCreatedGetExtraInfoRemoteCall(); },
            () => { return new CfxOnRenderThreadCreatedRemoteClientCall(); },
            () => { return new CfxOnUncaughtExceptionActivateRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionDeactivateRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionGetBrowserRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionGetContextRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionGetExceptionRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionGetFrameRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionGetStackTraceRemoteCall(); },
            () => { return new CfxOnUncaughtExceptionRemoteClientCall(); },
            () => { return new CfxOnWebKitInitializedActivateRemoteCall(); },
            () => { return new CfxOnWebKitInitializedDeactivateRemoteCall(); },
            () => { return new CfxOnWebKitInitializedRemoteClientCall(); },
            () => { return new CfxPostDataAddElementRemoteCall(); },
            () => { return new CfxPostDataCreateRemoteCall(); },
            () => { return new CfxPostDataElementCreateRemoteCall(); },
            () => { return new CfxPostDataElementGetBytesCountRemoteCall(); },
            () => { return new CfxPostDataElementGetBytesRemoteCall(); },
            () => { return new CfxPostDataElementGetFileRemoteCall(); },
            () => { return new CfxPostDataElementGetTypeRemoteCall(); },
            () => { return new CfxPostDataElementIsReadOnlyRemoteCall(); },
            () => { return new CfxPostDataElementSetToBytesRemoteCall(); },
            () => { return new CfxPostDataElementSetToEmptyRemoteCall(); },
            () => { return new CfxPostDataElementSetToFileRemoteCall(); },
            () => { return new CfxPostDataGetElementCountRemoteCall(); },
            () => { return new CfxPostDataGetElementsRemoteCall(); },
            () => { return new CfxPostDataHasExcludedElementsRemoteCall(); },
            () => { return new CfxPostDataIsReadOnlyRemoteCall(); },
            () => { return new CfxPostDataRemoveElementRemoteCall(); },
            () => { return new CfxPostDataRemoveElementsRemoteCall(); },
            () => { return new CfxProcessMessageCopyRemoteCall(); },
            () => { return new CfxProcessMessageCreateRemoteCall(); },
            () => { return new CfxProcessMessageGetArgumentListRemoteCall(); },
            () => { return new CfxProcessMessageGetNameRemoteCall(); },
            () => { return new CfxProcessMessageIsReadOnlyRemoteCall(); },
            () => { return new CfxProcessMessageIsValidRemoteCall(); },
            () => { return new CfxRectCtorRemoteCall(); },
            () => { return new CfxRectGetHeightRemoteCall(); },
            () => { return new CfxRectGetWidthRemoteCall(); },
            () => { return new CfxRectGetXRemoteCall(); },
            () => { return new CfxRectGetYRemoteCall(); },
            () => { return new CfxRectSetHeightRemoteCall(); },
            () => { return new CfxRectSetWidthRemoteCall(); },
            () => { return new CfxRectSetXRemoteCall(); },
            () => { return new CfxRectSetYRemoteCall(); },
            () => { return new CfxRenderProcessHandlerCtorRemoteCall(); },
            () => { return new CfxRequestCreateRemoteCall(); },
            () => { return new CfxRequestGetFirstPartyForCookiesRemoteCall(); },
            () => { return new CfxRequestGetFlagsRemoteCall(); },
            () => { return new CfxRequestGetHeaderMapRemoteCall(); },
            () => { return new CfxRequestGetIdentifierRemoteCall(); },
            () => { return new CfxRequestGetMethodRemoteCall(); },
            () => { return new CfxRequestGetPostDataRemoteCall(); },
            () => { return new CfxRequestGetReferrerPolicyRemoteCall(); },
            () => { return new CfxRequestGetReferrerUrlRemoteCall(); },
            () => { return new CfxRequestGetResourceTypeRemoteCall(); },
            () => { return new CfxRequestGetTransitionTypeRemoteCall(); },
            () => { return new CfxRequestGetUrlRemoteCall(); },
            () => { return new CfxRequestIsReadOnlyRemoteCall(); },
            () => { return new CfxRequestSetFirstPartyForCookiesRemoteCall(); },
            () => { return new CfxRequestSetFlagsRemoteCall(); },
            () => { return new CfxRequestSetHeaderMapRemoteCall(); },
            () => { return new CfxRequestSetMethodRemoteCall(); },
            () => { return new CfxRequestSetPostDataRemoteCall(); },
            () => { return new CfxRequestSetReferrerRemoteCall(); },
            () => { return new CfxRequestSetRemoteCall(); },
            () => { return new CfxRequestSetUrlRemoteCall(); },
            () => { return new CfxResourceBundleHandlerCtorRemoteCall(); },
            () => { return new CfxRuntimeCurrentlyOnRemoteCall(); },
            () => { return new CfxRuntimeExecuteProcessRemoteCall(); },
            () => { return new CfxRuntimeFormatUrlForSecurityDisplayRemoteCall(); },
            () => { return new CfxRuntimeIsCertStatusErrorRemoteCall(); },
            () => { return new CfxRuntimeIsCertStatusMinorErrorRemoteCall(); },
            () => { return new CfxRuntimePostDelayedTaskRemoteCall(); },
            () => { return new CfxRuntimePostTaskRemoteCall(); },
            () => { return new CfxRuntimeRegisterExtensionRemoteCall(); },
            () => { return new CfxSchemeRegistrarAddCustomSchemeRemoteCall(); },
            () => { return new CfxSetByIndexActivateRemoteCall(); },
            () => { return new CfxSetByIndexDeactivateRemoteCall(); },
            () => { return new CfxSetByIndexGetExceptionRemoteCall(); },
            () => { return new CfxSetByIndexGetIndexRemoteCall(); },
            () => { return new CfxSetByIndexGetObjectRemoteCall(); },
            () => { return new CfxSetByIndexGetValueRemoteCall(); },
            () => { return new CfxSetByIndexRemoteClientCall(); },
            () => { return new CfxSetByIndexSetExceptionRemoteCall(); },
            () => { return new CfxSetByIndexSetReturnValueRemoteCall(); },
            () => { return new CfxSetByNameActivateRemoteCall(); },
            () => { return new CfxSetByNameDeactivateRemoteCall(); },
            () => { return new CfxSetByNameGetExceptionRemoteCall(); },
            () => { return new CfxSetByNameGetNameRemoteCall(); },
            () => { return new CfxSetByNameGetObjectRemoteCall(); },
            () => { return new CfxSetByNameGetValueRemoteCall(); },
            () => { return new CfxSetByNameRemoteClientCall(); },
            () => { return new CfxSetByNameSetExceptionRemoteCall(); },
            () => { return new CfxSetByNameSetReturnValueRemoteCall(); },
            () => { return new CfxStringVisitorCtorRemoteCall(); },
            () => { return new CfxStringVisitorVisitActivateRemoteCall(); },
            () => { return new CfxStringVisitorVisitDeactivateRemoteCall(); },
            () => { return new CfxStringVisitorVisitGetStringRemoteCall(); },
            () => { return new CfxStringVisitorVisitRemoteClientCall(); },
            () => { return new CfxTaskCtorRemoteCall(); },
            () => { return new CfxTaskExecuteActivateRemoteCall(); },
            () => { return new CfxTaskExecuteDeactivateRemoteCall(); },
            () => { return new CfxTaskExecuteRemoteClientCall(); },
            () => { return new CfxTaskRunnerBelongsToCurrentThreadRemoteCall(); },
            () => { return new CfxTaskRunnerBelongsToThreadRemoteCall(); },
            () => { return new CfxTaskRunnerGetForCurrentThreadRemoteCall(); },
            () => { return new CfxTaskRunnerGetForThreadRemoteCall(); },
            () => { return new CfxTaskRunnerIsSameRemoteCall(); },
            () => { return new CfxTaskRunnerPostDelayedTaskRemoteCall(); },
            () => { return new CfxTaskRunnerPostTaskRemoteCall(); },
            () => { return new CfxTimeCtorRemoteCall(); },
            () => { return new CfxTimeGetDayOfMonthRemoteCall(); },
            () => { return new CfxTimeGetDayOfWeekRemoteCall(); },
            () => { return new CfxTimeGetHourRemoteCall(); },
            () => { return new CfxTimeGetMillisecondRemoteCall(); },
            () => { return new CfxTimeGetMinuteRemoteCall(); },
            () => { return new CfxTimeGetMonthRemoteCall(); },
            () => { return new CfxTimeGetSecondRemoteCall(); },
            () => { return new CfxTimeGetYearRemoteCall(); },
            () => { return new CfxTimeSetDayOfMonthRemoteCall(); },
            () => { return new CfxTimeSetDayOfWeekRemoteCall(); },
            () => { return new CfxTimeSetHourRemoteCall(); },
            () => { return new CfxTimeSetMillisecondRemoteCall(); },
            () => { return new CfxTimeSetMinuteRemoteCall(); },
            () => { return new CfxTimeSetMonthRemoteCall(); },
            () => { return new CfxTimeSetSecondRemoteCall(); },
            () => { return new CfxTimeSetYearRemoteCall(); },
            () => { return new CfxV8AccessorCtorRemoteCall(); },
            () => { return new CfxV8AccessorGetActivateRemoteCall(); },
            () => { return new CfxV8AccessorGetDeactivateRemoteCall(); },
            () => { return new CfxV8AccessorGetGetExceptionRemoteCall(); },
            () => { return new CfxV8AccessorGetGetNameRemoteCall(); },
            () => { return new CfxV8AccessorGetGetObjectRemoteCall(); },
            () => { return new CfxV8AccessorGetRemoteClientCall(); },
            () => { return new CfxV8AccessorGetSetExceptionRemoteCall(); },
            () => { return new CfxV8AccessorGetSetReturnValueRemoteCall(); },
            () => { return new CfxV8AccessorGetSetRetvalRemoteCall(); },
            () => { return new CfxV8AccessorSetActivateRemoteCall(); },
            () => { return new CfxV8AccessorSetDeactivateRemoteCall(); },
            () => { return new CfxV8AccessorSetGetExceptionRemoteCall(); },
            () => { return new CfxV8AccessorSetGetNameRemoteCall(); },
            () => { return new CfxV8AccessorSetGetObjectRemoteCall(); },
            () => { return new CfxV8AccessorSetGetValueRemoteCall(); },
            () => { return new CfxV8AccessorSetRemoteClientCall(); },
            () => { return new CfxV8AccessorSetSetExceptionRemoteCall(); },
            () => { return new CfxV8AccessorSetSetReturnValueRemoteCall(); },
            () => { return new CfxV8ContextEnterRemoteCall(); },
            () => { return new CfxV8ContextEvalRemoteCall(); },
            () => { return new CfxV8ContextExitRemoteCall(); },
            () => { return new CfxV8ContextGetBrowserRemoteCall(); },
            () => { return new CfxV8ContextGetCurrentContextRemoteCall(); },
            () => { return new CfxV8ContextGetEnteredContextRemoteCall(); },
            () => { return new CfxV8ContextGetFrameRemoteCall(); },
            () => { return new CfxV8ContextGetGlobalRemoteCall(); },
            () => { return new CfxV8ContextGetTaskRunnerRemoteCall(); },
            () => { return new CfxV8ContextInContextRemoteCall(); },
            () => { return new CfxV8ContextIsSameRemoteCall(); },
            () => { return new CfxV8ContextIsValidRemoteCall(); },
            () => { return new CfxV8ExceptionGetEndColumnRemoteCall(); },
            () => { return new CfxV8ExceptionGetEndPositionRemoteCall(); },
            () => { return new CfxV8ExceptionGetLineNumberRemoteCall(); },
            () => { return new CfxV8ExceptionGetMessageRemoteCall(); },
            () => { return new CfxV8ExceptionGetScriptResourceNameRemoteCall(); },
            () => { return new CfxV8ExceptionGetSourceLineRemoteCall(); },
            () => { return new CfxV8ExceptionGetStartColumnRemoteCall(); },
            () => { return new CfxV8ExceptionGetStartPositionRemoteCall(); },
            () => { return new CfxV8HandlerCtorRemoteCall(); },
            () => { return new CfxV8HandlerExecuteActivateRemoteCall(); },
            () => { return new CfxV8HandlerExecuteDeactivateRemoteCall(); },
            () => { return new CfxV8HandlerExecuteGetArgumentsRemoteCall(); },
            () => { return new CfxV8HandlerExecuteGetNameRemoteCall(); },
            () => { return new CfxV8HandlerExecuteGetObjectRemoteCall(); },
            () => { return new CfxV8HandlerExecuteRemoteClientCall(); },
            () => { return new CfxV8HandlerExecuteSetExceptionRemoteCall(); },
            () => { return new CfxV8HandlerExecuteSetReturnValueRemoteCall(); },
            () => { return new CfxV8InterceptorCtorRemoteCall(); },
            () => { return new CfxV8StackFrameGetColumnRemoteCall(); },
            () => { return new CfxV8StackFrameGetFunctionNameRemoteCall(); },
            () => { return new CfxV8StackFrameGetLineNumberRemoteCall(); },
            () => { return new CfxV8StackFrameGetScriptNameOrSourceUrlRemoteCall(); },
            () => { return new CfxV8StackFrameGetScriptNameRemoteCall(); },
            () => { return new CfxV8StackFrameIsConstructorRemoteCall(); },
            () => { return new CfxV8StackFrameIsEvalRemoteCall(); },
            () => { return new CfxV8StackFrameIsValidRemoteCall(); },
            () => { return new CfxV8StackTraceGetCurrentRemoteCall(); },
            () => { return new CfxV8StackTraceGetFrameCountRemoteCall(); },
            () => { return new CfxV8StackTraceGetFrameRemoteCall(); },
            () => { return new CfxV8StackTraceIsValidRemoteCall(); },
            () => { return new CfxV8ValueAdjustExternallyAllocatedMemoryRemoteCall(); },
            () => { return new CfxV8ValueClearExceptionRemoteCall(); },
            () => { return new CfxV8ValueCreateArrayRemoteCall(); },
            () => { return new CfxV8ValueCreateBoolRemoteCall(); },
            () => { return new CfxV8ValueCreateDateRemoteCall(); },
            () => { return new CfxV8ValueCreateDoubleRemoteCall(); },
            () => { return new CfxV8ValueCreateFunctionRemoteCall(); },
            () => { return new CfxV8ValueCreateIntRemoteCall(); },
            () => { return new CfxV8ValueCreateNullRemoteCall(); },
            () => { return new CfxV8ValueCreateObjectRemoteCall(); },
            () => { return new CfxV8ValueCreateStringRemoteCall(); },
            () => { return new CfxV8ValueCreateUintRemoteCall(); },
            () => { return new CfxV8ValueCreateUndefinedRemoteCall(); },
            () => { return new CfxV8ValueDeleteValueByIndexRemoteCall(); },
            () => { return new CfxV8ValueDeleteValueByKeyRemoteCall(); },
            () => { return new CfxV8ValueExecuteFunctionRemoteCall(); },
            () => { return new CfxV8ValueExecuteFunctionWithContextRemoteCall(); },
            () => { return new CfxV8ValueGetArrayLengthRemoteCall(); },
            () => { return new CfxV8ValueGetBoolValueRemoteCall(); },
            () => { return new CfxV8ValueGetDateValueRemoteCall(); },
            () => { return new CfxV8ValueGetDoubleValueRemoteCall(); },
            () => { return new CfxV8ValueGetExceptionRemoteCall(); },
            () => { return new CfxV8ValueGetExternallyAllocatedMemoryRemoteCall(); },
            () => { return new CfxV8ValueGetFunctionHandlerRemoteCall(); },
            () => { return new CfxV8ValueGetFunctionNameRemoteCall(); },
            () => { return new CfxV8ValueGetIntValueRemoteCall(); },
            () => { return new CfxV8ValueGetKeysRemoteCall(); },
            () => { return new CfxV8ValueGetStringValueRemoteCall(); },
            () => { return new CfxV8ValueGetUintValueRemoteCall(); },
            () => { return new CfxV8ValueGetUserDataRemoteCall(); },
            () => { return new CfxV8ValueGetValueByIndexRemoteCall(); },
            () => { return new CfxV8ValueGetValueByKeyRemoteCall(); },
            () => { return new CfxV8ValueHasExceptionRemoteCall(); },
            () => { return new CfxV8ValueHasValueByIndexRemoteCall(); },
            () => { return new CfxV8ValueHasValueByKeyRemoteCall(); },
            () => { return new CfxV8ValueIsArrayRemoteCall(); },
            () => { return new CfxV8ValueIsBoolRemoteCall(); },
            () => { return new CfxV8ValueIsDateRemoteCall(); },
            () => { return new CfxV8ValueIsDoubleRemoteCall(); },
            () => { return new CfxV8ValueIsFunctionRemoteCall(); },
            () => { return new CfxV8ValueIsIntRemoteCall(); },
            () => { return new CfxV8ValueIsNullRemoteCall(); },
            () => { return new CfxV8ValueIsObjectRemoteCall(); },
            () => { return new CfxV8ValueIsSameRemoteCall(); },
            () => { return new CfxV8ValueIsStringRemoteCall(); },
            () => { return new CfxV8ValueIsUintRemoteCall(); },
            () => { return new CfxV8ValueIsUndefinedRemoteCall(); },
            () => { return new CfxV8ValueIsUserCreatedRemoteCall(); },
            () => { return new CfxV8ValueIsValidRemoteCall(); },
            () => { return new CfxV8ValueSetRethrowExceptionsRemoteCall(); },
            () => { return new CfxV8ValueSetUserDataRemoteCall(); },
            () => { return new CfxV8ValueSetValueByAccessorRemoteCall(); },
            () => { return new CfxV8ValueSetValueByIndexRemoteCall(); },
            () => { return new CfxV8ValueSetValueByKeyRemoteCall(); },
            () => { return new CfxV8ValueWillRethrowExceptionsRemoteCall(); },
            () => { return new CfxValueCopyRemoteCall(); },
            () => { return new CfxValueCreateRemoteCall(); },
            () => { return new CfxValueGetBinaryRemoteCall(); },
            () => { return new CfxValueGetBoolRemoteCall(); },
            () => { return new CfxValueGetDictionaryRemoteCall(); },
            () => { return new CfxValueGetDoubleRemoteCall(); },
            () => { return new CfxValueGetIntRemoteCall(); },
            () => { return new CfxValueGetListRemoteCall(); },
            () => { return new CfxValueGetStringRemoteCall(); },
            () => { return new CfxValueGetTypeRemoteCall(); },
            () => { return new CfxValueIsEqualRemoteCall(); },
            () => { return new CfxValueIsOwnedRemoteCall(); },
            () => { return new CfxValueIsReadOnlyRemoteCall(); },
            () => { return new CfxValueIsSameRemoteCall(); },
            () => { return new CfxValueIsValidRemoteCall(); },
            () => { return new CfxValueSetBinaryRemoteCall(); },
            () => { return new CfxValueSetBoolRemoteCall(); },
            () => { return new CfxValueSetDictionaryRemoteCall(); },
            () => { return new CfxValueSetDoubleRemoteCall(); },
            () => { return new CfxValueSetIntRemoteCall(); },
            () => { return new CfxValueSetListRemoteCall(); },
            () => { return new CfxValueSetNullRemoteCall(); },
            () => { return new CfxValueSetStringRemoteCall(); },
            () => { return new ExecuteProcessRemoteCall(); },
            () => { return new ReleaseRemotePtrRemoteCall(); },
        } ;

        internal static RemoteCall ForCallId(RemoteCallId id) {
            return callConstructors[(int)id]();
        }
    }
}
